implementations:
  InsisSoapCallExchangeRule:
    description: >

      This rule executes a SoapCall based on the configuration in this _recipe_.

      The _payload_ of the _IntegrationData_ will be send 
      as the soap body. The result of the _http response_ will be set at _payload_ in the
      _response IntegrationData_ 


      _Important_


      This rule uses some parameters defining the

        * soap action to call _soapAction_ (mandatory param)
        * the type of the request object _requestType_ (optional param), should be provided if SOAP service is validating the xml 
        * the type of the response object _responseType_ (optional param), should be provided if the response contains arrays. If the array contains only one item the soap lib returns it not as an array.

    icel: >

      You can specify _params_ from the _request IntegrationData_ to be used as header values.


      The rule will set the following values in the _other_ data of the _response IntegrationData_:

        * `http.status`  the http status code from the server response 
        * `http.statusText` the HTTP status message from the server response
        * `http.headers` the headers that the server responded with (all header names 
           are lower cased)

      ```
        integration:
          DefaultTransformationRule:
            out:
              - param: soapAction
                value: someAction
              - param: requestType
                value: SomeActionRequestType
              - param: responseType
                value: SomeActionResponseType
          exchange:
            SoapCallExchangeRule:
              endpoint: http://some.soap.com/api/foo
              securityMode: UsernamePassword
              username: 'username'
              password: 'password'
              ignoreNamespaces: 'ignoreNamespaces'
              jsonSchema: InsisPAM
      ```

    params:
      endpoint:
        label: Endpoint / Url
        info: endpoint name that can be resolved to a Url or mocked
        required: true
      securityMode:
        label: Security Mode
        type: select
        options:
          UsernamePassword: UsernamePassword
          NoSecurity: NoSecurity
      username:
        label: Username
        info: >
          The username for authentication if __Security Mode__ ist set to __UsernamePassword__.
          The value of username can be the name of a property withing the principal data, the name of an environment variable, or just plain text.
          The rule checks first if the value is a property within the principal data, if not it checks if the value is the name of an enviroment variable 
          and if neither the rule just returns the value.
      password:
        label: Password
        info: >
          The password for authentication if __Security Mode__ ist set to __UsernamePassword__.
          The value of password can be the name of a property withing the principal data, the name of an environment variable, or just plain text.
          The rule checks first if the value is a property within the principal data, if not it checks if the value is the name of an enviroment variable 
          and if neither the rule just returns the value.
      ignoreNamespaces:
        label: Namespaces to Ignore
        info: >
          Depending on the way the SOAP service is vaidating the request, it may be necessary to remove some namespaces from the xml send to the service.
        type: texts
      jsonSchema:
        label: JSON schema
        info: >
          Most SOAP services are validating the request against an xsd schema, therefore the order of the xml nodes is important.
          If it is not possible, or event not easy, to create the payload via the transformation in the right order, providing the json schema helps.
          The schema is used to create the object in the right order and omit all properties not allowed.
