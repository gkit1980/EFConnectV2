implementations:
  InsisDBExchangeRule:
    description: >
      This rule executes a sql query based on the configuration in this _recipe_.

      Depending on query types, the `in` data will be list of JSON objects or list of objects corespondig `{ column_name: value }`.

    icel: >
      Using SQL query type with DefaultTransformationRule
        ```
        integration:
          exchange:
            InsisDBExchangeRule:
              connectString: 'insis-db-url'
              username: 'insis-db-username'
              password: 'insis-db-password'
              query: >-
                SELECT
                  gname,
                  fname
                FROM p_people
                WHERE fname != :fname
              queryType: SQL
          transformation:
            DefaultTransformationRule:
              additional: insis
              dateFormat: YYYY-MM-DD
              out:
                - mappings:
                    - param: fname
                      value: 'Joe'
              in:
                - fromIdx:
                    array: payload.rows
                    condition: 1 == 1
                  toIdx:
                    array: datamodel.users
                    append: true
                  mappings:
                    - payload: 'rows[n].GNAME'
                      element: users~gname
                    - payload: 'rows[n].FNAME'
                      element: users~fname
        ```

        Using JSON query type with DefaultTransformationRule
        ```
        integration:
          exchange:
            InsisDBExchangeRule:
              connectString: 'insis-db-url'
              username: 'insis-db-username'
              password: 'insis-db-password'
              query: >-
                select JSON_OBJECT(
                    'first_name' is gname,
                    'last_name' is fname
                ) from p_people  WHERE p_people.fname != :fname

              queryType: JSON
          transformation:
            DefaultTransformationRule:
              additional: insis
              dateFormat: YYYY-MM-DD
              out:
                - mappings:
                    - param: fname
                      value: 'Joe'
              in:
                - fromIdx:
                    array: payload.rows
                  toIdx:
                    array: datamodel.users
                    append: true
                  mappings:
                    - payload: 'rows[n].first_name'
                      element: users~gname
                    - payload: 'rows[n].last_name'
                      element: users~fname
        ```

    params:
      connectString:
        label: Connect string
        info: connectString is ip / port / dbname
        required: true
      queryFileURL:
        label: SQL Query File
        info: >
          Provide relative path to external SQL Query file (*.sql). Current repo-folder will be used as root for provided relative path to SQL file.
          Full file url will be constructed by merging: [ice-repo-folder]/[queryFileURL]
        type: text
        required: false
      query:
        label: SQL Query
        info: This parameter can have dynamic parts that can be expressed as `:id` where `id` would be a param in the params part of the IntegrationData.
        type: sql
        required: false
      queryType:
        label: Output type
        info: For plain SQL queries select SQL for JSON_OBJECT ones select JSON
        type: select
        options:
          sql: SQL
          json: JSON
      username:
        label: Username
      password:
        label: Password
