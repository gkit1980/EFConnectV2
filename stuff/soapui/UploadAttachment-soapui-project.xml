<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="34d1b4ea-7592-43f4-bd49-7dd71ab6f7fc" activeEnvironment="Default" name="UploadAttachment" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="1a2d9c9a-ac3b-4002-9017-9c809075fce8" wsaVersion="NONE" name="InsisGenericWSPortBinding" type="wsdl" bindingName="{http://fadata.eu/soap/insis/genericws}InsisGenericWSPortBinding" soapVersion="1_1" anonymous="optional" definition="file:/D:/projects_java/insis/v10/_SOA/USEREXITs/ADACDemoIntegration/UEInterface/public_html/WEB-INF/wsdl/insisGenericWS.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\D:\projects_java\insis\v10\_SOA\USEREXITs\ADACDemoIntegration\UEInterface\public_html\WEB-INF\wsdl\insisGenericWS.wsdl"><con:part><con:url>file:\D:\projects_java\insis\v10\_SOA\USEREXITs\ADACDemoIntegration\UEInterface\public_html\WEB-INF\wsdl\insisGenericWS.wsdl</con:url><con:content><![CDATA[<definitions name="InsisGenericWS" targetNamespace="http://fadata.eu/soap/insis/genericws" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://fadata.eu/soap/insis/genericws" xmlns:insis="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512" xmlns:ibase="http://fadata.eu/soap/insis">
  <import location="insisAbstractBase.wsdl" namespace="http://fadata.eu/soap/insis"/>
  <types>
    <xs:schema targetNamespace="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" elementFormDefault="qualified">
      <xs:include schemaLocation="xsd/insis/Insis_GenericWS_v3.0.xsd"/>
    </xs:schema>
  </types>
  <message name="ChainRqMessage">
    <part name="payload" element="insis:ChainRq"/>
  </message>
  <message name="ChainRsMessage">
    <part name="payload" element="insis:ChainRs"/>
  </message>
  <message name="ClearNotificationsRqMessage">
    <part name="payload" element="insis:ClearNotificationsRq"/>
  </message>
  <message name="ClearNotificationsRsMessage">
    <part name="payload" element="insis:ClearNotificationsRs"/>
  </message>
  <message name="CloseOpenPeriodRqMessage">
    <part name="payload" element="insis:CloseOpenPeriodRq"/>
  </message>
  <message name="CloseOpenPeriodRsMessage">
    <part name="payload" element="insis:CloseOpenPeriodRs"/>
  </message>
  <message name="CloseOpenDayRqMessage">
    <part name="payload" element="insis:CloseOpenDayRq"/>
  </message>
  <message name="CloseOpenDayRsMessage">
    <part name="payload" element="insis:CloseOpenDayRs"/>
  </message>
  <message name="DeleteQuestionaryRqMessage">
    <part name="payload" element="insis:DeleteQuestionaryRq"/>
  </message>
  <message name="DeleteQuestionaryRsMessage">
    <part name="payload" element="insis:DeleteQuestionaryRs"/>
  </message>
  <message name="DownloadAttachmentsRqMessage">
    <part name="payload" element="insis:DownloadAttachmentsRq"/>
  </message>
  <message name="DownloadAttachmentsRsMessage">
    <part name="payload" element="insis:DownloadAttachmentsRs"/>
  </message>
  <message name="DueNotificationsRqMessage">
    <part name="payload" element="insis:DueNotificationsRq"/>
  </message>
  <message name="DueNotificationsRsMessage">
    <part name="payload" element="insis:DueNotificationsRs"/>
  </message>
  <message name="InvokeSBSEventRqMessage">
    <part name="payload" element="insis:InvokeSBSEventRq"/>
  </message>
  <message name="InvokeSBSEventRsMessage">
    <part name="payload" element="insis:InvokeSBSEventRs"/>
  </message>
  <message name="GetCurrencyRateRqMessage">
    <part name="payload" element="insis:GetCurrencyRateRq"/>
  </message>
  <message name="GetCurrencyRateRsMessage">
    <part name="payload" element="insis:GetCurrencyRateRs"/>
  </message>
  <message name="GetLocalizedMessageRqMessage">
    <part name="payload" element="insis:GetLocalizedMessageRq"/>
  </message>
  <message name="GetLocalizedMessageRsMessage">
    <part name="payload" element="insis:GetLocalizedMessageRq"/>
  </message>
  <message name="GetOpenPeriodRqMessage">
    <part name="payload" element="insis:GetOpenPeriodRq"/>
  </message>
  <message name="GetOpenPeriodRsMessage">
    <part name="payload" element="insis:GetOpenPeriodRs"/>
  </message>
  <message name="GetOpenDayRqMessage">
    <part name="payload" element="insis:GetOpenDayRq"/>
  </message>
  <message name="GetOpenDayRsMessage">
    <part name="payload" element="insis:GetOpenDayRs"/>
  </message>
  <message name="GetParameterRqMessage">
    <part name="payload" element="insis:GetParameterRq"/>
  </message>
  <message name="GetParameterRsMessage">
    <part name="payload" element="insis:GetParameterRs"/>
  </message>
  <message name="GetQuestionaryLayoutsRqMessage">
    <part name="payload" element="insis:GetQuestionaryLayoutsRq"/>
  </message>
  <message name="GetQuestionaryLayoutsRsMessage">
    <part name="payload" element="insis:GetQuestionaryLayoutsRs"/>
  </message>
  <message name="GetUserQuestionaryRqMessage">
    <part name="payload" element="insis:GetUserQuestionaryRq"/>
  </message>
  <message name="GetUserQuestionaryRsMessage">
    <part name="payload" element="insis:GetUserQuestionaryRs"/>
  </message>
  <message name="ListOfValuesRqMessage">
    <part name="payload" element="insis:ListOfValuesRq"/>
  </message>
  <message name="ListOfValuesRsMessage">
    <part name="payload" element="insis:ListOfValuesRs"/>
  </message>
  <message name="LocalizationRqMessage">
    <part name="payload" element="insis:LocalizationRq"/>
  </message>
  <message name="LocalizationRsMessage">
    <part name="payload" element="insis:LocalizationRs"/>
  </message>
  <message name="LockOpenDayRqMessage">
    <part name="payload" element="insis:LockOpenDayRq"/>
  </message>
  <message name="LockOpenDayRsMessage">
    <part name="payload" element="insis:LockOpenDayRs"/>
  </message>
  <message name="LockOpenPeriodRqMessage">
    <part name="payload" element="insis:LockOpenPeriodRq"/>
  </message>
  <message name="LockOpenPeriodRsMessage">
    <part name="payload" element="insis:LockOpenPeriodRs"/>
  </message>
  <message name="OpenNewDayRqMessage">
    <part name="payload" element="insis:OpenNewDayRq"/>
  </message>
  <message name="OpenNewDayRsMessage">
    <part name="payload" element="insis:OpenNewDayRs"/>
  </message>
  <message name="OpenNewPeriodRqMessage">
    <part name="payload" element="insis:OpenNewPeriodRq"/>
  </message>
  <message name="OpenNewPeriodRsMessage">
    <part name="payload" element="insis:OpenNewPeriodRs"/>
  </message>
  <message name="PaginatedQueryRqMessage">
    <part name="payload" element="insis:PaginatedQueryRq"/>
  </message>
  <message name="PaginatedQueryRsMessage">
    <part name="payload" element="insis:PaginatedQueryRs"/>
  </message>
  <message name="PublishChainCollectionRqMessage">
    <part name="payload" element="insis:PublishChainCollectionRq"/>
  </message>
  <message name="PublishChainCollectionRsMessage">
    <part name="payload" element="insis:PublishChainCollectionRs"/>
  </message>
  <message name="PublishQuestionaryLayoutRqMessage">
    <part name="payload" element="insis:PublishQuestionaryLayoutRq"/>
  </message>
  <message name="PublishQuestionaryLayoutRsMessage">
    <part name="payload" element="insis:PublishQuestionaryLayoutRs"/>
  </message>
  <message name="QuestionaryConfigurationRqMessage">
    <part name="payload" element="insis:QuestionaryConfigurationRq"/>
  </message>
  <message name="QuestionaryConfigurationRsMessage">
    <part name="payload" element="insis:QuestionaryConfigurationRq"/>
  </message>
  <message name="RegisterFNOLSRRqMessage">
    <part name="payload" element="insis:RegisterFNOLSRRq"/>
  </message>
  <message name="RegisterFNOLSRRsMessage">
    <part name="payload" element="insis:RegisterFNOLSRRs"/>
  </message>
  <message name="RegisterUserQuestionaryRqMessage">
    <part name="payload" element="insis:RegisterUserQuestionaryRq"/>
  </message>
  <message name="RegisterUserQuestionaryRsMessage">
    <part name="payload" element="insis:RegisterUserQuestionaryRs"/>
  </message>
  <message name="RulesRqMessage">
    <part name="payload" element="insis:RulesRq"/>
  </message>
  <message name="RulesRsMessage">
    <part name="payload" element="insis:RulesRs"/>
  </message>
  <message name="SetQuestionaryConfigurationRqMessage">
    <part name="payload" element="insis:SetQuestionaryConfigurationRq"/>
  </message>
  <message name="SetQuestionaryConfigurationRsMessage">
    <part name="payload" element="insis:SetQuestionaryConfigurationRs"/>
  </message>
  <message name="SetCurrencyRateRqMessage">
    <part name="payload" element="insis:SetCurrencyRateRq"/>
  </message>
  <message name="SetCurrencyRateRsMessage">
    <part name="payload" element="insis:SetCurrencyRateRs"/>
  </message>
  <message name="UploadAttachmentsRqMessage">
    <part name="payload" element="insis:UploadAttachmentsRq"/>
  </message>
  <message name="UploadAttachmentsRsMessage">
    <part name="payload" element="insis:UploadAttachmentsRs"/>
  </message>
  <portType name="InsisGenericWSPort">
    <operation name="chain">
      <input message="tns:ChainRqMessage"/>
      <output message="tns:ChainRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="clearNotifications">
      <input message="tns:ClearNotificationsRqMessage"/>
      <output message="tns:ClearNotificationsRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="closeOpenPeriod">
      <input message="tns:CloseOpenPeriodRqMessage"/>
      <output message="tns:CloseOpenPeriodRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="closeOpenDay">
      <input message="tns:CloseOpenDayRqMessage"/>
      <output message="tns:CloseOpenDayRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="deleteQuestionary">
      <input message="tns:DeleteQuestionaryRqMessage"/>
      <output message="tns:DeleteQuestionaryRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="downloadAttachments">
      <input message="tns:DownloadAttachmentsRqMessage"/>
      <output message="tns:DownloadAttachmentsRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="dueNotifications">
      <input message="tns:DueNotificationsRqMessage"/>
      <output message="tns:DueNotificationsRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="invokeSBSEvent">
      <input message="tns:InvokeSBSEventRqMessage"/>
      <output message="tns:InvokeSBSEventRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getCurrencyRate">
      <input message="tns:GetCurrencyRateRqMessage"/>
      <output message="tns:GetCurrencyRateRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getLocalizedMessage">
      <input message="tns:GetLocalizedMessageRqMessage"/>
      <output message="tns:GetLocalizedMessageRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getOpenPeriod">
      <input message="tns:GetOpenPeriodRqMessage"/>
      <output message="tns:GetOpenPeriodRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getOpenDay">
      <input message="tns:GetOpenDayRqMessage"/>
      <output message="tns:GetOpenDayRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getParameter">
      <input message="tns:GetParameterRqMessage"/>
      <output message="tns:GetParameterRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getQuestionaryLayouts">
      <input message="tns:GetQuestionaryLayoutsRqMessage"/>
      <output message="tns:GetQuestionaryLayoutsRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="getUserQuestionary">
      <input message="tns:GetUserQuestionaryRqMessage"/>
      <output message="tns:GetUserQuestionaryRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="listOfValues">
      <input message="tns:ListOfValuesRqMessage"/>
      <output message="tns:ListOfValuesRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="localization">
      <input message="tns:LocalizationRqMessage"/>
      <output message="tns:LocalizationRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="lockOpenDay">
      <input message="tns:LockOpenDayRqMessage"/>
      <output message="tns:LockOpenDayRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="lockOpenPeriod">
      <input message="tns:LockOpenPeriodRqMessage"/>
      <output message="tns:LockOpenPeriodRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="openNewDay">
      <input message="tns:OpenNewDayRqMessage"/>
      <output message="tns:OpenNewDayRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="openNewPeriod">
      <input message="tns:OpenNewPeriodRqMessage"/>
      <output message="tns:OpenNewPeriodRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="paginatedQuery">
      <input message="tns:PaginatedQueryRqMessage"/>
      <output message="tns:PaginatedQueryRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="publishChainCollection">
      <input message="tns:PublishChainCollectionRqMessage"/>
      <output message="tns:PublishChainCollectionRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="publishQuestionaryLayout">
      <input message="tns:PublishQuestionaryLayoutRqMessage"/>
      <output message="tns:PublishQuestionaryLayoutRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="questionaryConfiguration">
      <input message="tns:QuestionaryConfigurationRqMessage"/>
      <output message="tns:QuestionaryConfigurationRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="registerFNOLSR">
      <input message="tns:RegisterFNOLSRRqMessage"/>
      <output message="tns:RegisterFNOLSRRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="registerUserQuestionary">
      <input message="tns:RegisterUserQuestionaryRqMessage"/>
      <output message="tns:RegisterUserQuestionaryRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="rules">
      <input message="tns:RulesRqMessage"/>
      <output message="tns:RulesRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="setQuestionaryConfiguration">
      <input message="tns:SetQuestionaryConfigurationRqMessage"/>
      <output message="tns:SetQuestionaryConfigurationRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="setCurrencyRate">
      <input message="tns:SetCurrencyRateRqMessage"/>
      <output message="tns:SetCurrencyRateRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
    <operation name="uploadAttachments">
      <input message="tns:UploadAttachmentsRqMessage"/>
      <output message="tns:UploadAttachmentsRsMessage"/>
      <fault name="Error" message="ibase:ErrorMessage"/>
    </operation>
  </portType>
  <binding name="InsisGenericWSPortBinding" type="tns:InsisGenericWSPort">
    <wsp:PolicyReference URI="#policy-kerberos-or-unt"/>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="chain">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="clearNotifications">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="closeOpenPeriod">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="closeOpenDay">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="deleteQuestionary">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="downloadAttachments">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="dueNotifications">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="invokeSBSEvent">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getCurrencyRate">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getLocalizedMessage">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getOpenPeriod">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getOpenDay">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getParameter">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getQuestionaryLayouts">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="getUserQuestionary">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="listOfValues">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="localization">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="lockOpenDay">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="lockOpenPeriod">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="openNewDay">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="openNewPeriod">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="paginatedQuery">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="publishChainCollection">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="publishQuestionaryLayout">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="questionaryConfiguration">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="registerFNOLSR">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="registerUserQuestionary">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="rules">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="setQuestionaryConfiguration">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="setCurrencyRate">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
    <operation name="uploadAttachments">
      <soap:operation style="document" soapAction="process"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="Error">
        <soap:fault use="literal" name="Error"/>
      </fault>
    </operation>
  </binding>
  <service name="InsisGenericWS">
    <port name="InsisGenericWSPort" binding="tns:InsisGenericWSPortBinding">
      <soap:address location="http://localhost:7001/insis-soapws/InsisGenericWSPort"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\D:\projects_java\insis\v10\_SOA\USEREXITs\ADACDemoIntegration\UEInterface\public_html\WEB-INF\wsdl\insisAbstractBase.wsdl</con:url><con:content><![CDATA[<definitions name="InsisAbstractBase" targetNamespace="http://fadata.eu/soap/insis" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://fadata.eu/soap/insis/acm" xmlns:insis="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512">
  <wsp:UsingPolicy wsu:Required="true"/>
  <wsp:Policy wsu:Id="policy-kerberos-or-unt" Name="http://fadata.eu/ws-policy/policy-kerberos-or-unt">
    <wsp:ExactlyOne>
      <!--UsernameToken 1.1-->
      <wsp:All>
        <sp:SupportingTokens>
          <wsp:Policy>
            <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512/IncludeToken/AlwaysToRecipient">
              <wsp:Policy>
                <sp:WssUsernameToken11/>
              </wsp:Policy>
            </sp:UsernameToken>
          </wsp:Policy>
        </sp:SupportingTokens>
      </wsp:All>
      <!--Kerberos Token-->
      <wsp:All>
        <sp:SupportingTokens>
          <wsp:Policy>
            <sp:KerberosToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512/IncludeToken/AlwaysToRecipient">
              <wsp:Policy>
                <sp:WssGssKerberosV5ApReqToken11/>
              </wsp:Policy>
            </sp:KerberosToken>
          </wsp:Policy>
        </sp:SupportingTokens>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <types>
    <xs:schema targetNamespace="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" elementFormDefault="qualified">
      <xs:include schemaLocation="xsd/insis/Insis_BaseTypes_v3.0.xsd"/>
    </xs:schema>
  </types>
  <message name="ErrorMessage">
    <part name="payload" element="insis:Error"/>
  </message>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\D:\projects_java\insis\v10\_SOA\USEREXITs\ADACDemoIntegration\UEInterface\public_html\WEB-INF\wsdl\xsd\insis\Insis_BaseTypes_v3.0.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">
  <xs:element name="AccountState">
    <xs:simpleType>
      <xs:restriction base="xs:integer">
        <xs:minInclusive value="0"/>
        <xs:maxInclusive value="1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="AddressID" type="xs:integer"/>
  <xs:element name="AddressType" type="xs:string"/>
  <xs:element name="Addresses" type="Addresses_Type"/>
  <xs:element name="AgentID" type="xs:long"/>
  <xs:element name="AgentNo" type="xs:string"/>
  <xs:element name="AnnexDate" type="xs:date"/>
  <xs:element name="AnnexID" type="xs:integer"/>
  <xs:element name="AnnuityRecipients" type="AnnuityRecipients_Type"/>
  <xs:element name="ApplicationNo" type="xs:string"/>
  <xs:element name="AttachmentFiles" type="AttachmentFiles_Type"/>
  <xs:element name="AttachmentRef" type="AttachmentRef_Type"/>
  <xs:element name="AuxAnnexID" type="xs:integer"/>
  <xs:element name="BankAccounts" type="BankAccnts_Type"/>
  <xs:element name="BankAccID" type="xs:integer"/>
  <xs:element name="BankID" type="xs:long"/>
  <xs:element name="BeginDate" type="xs:date"/>
  <xs:element name="CampaignId" type="xs:string"/>
  <xs:element name="CardID" type="xs:long"/>
  <xs:element name="CauseID" type="xs:integer"/>
  <xs:element name="Claim" type="Claim_Type"/>
  <xs:element name="ClaimExpenseSeq" type="xs:long"/>
  <xs:element name="ClaimID" type="xs:string"/>
  <xs:element name="ClaimNo" type="xs:string"/>
  <xs:element name="ClaimObjSeq" type="xs:long"/>
  <xs:element name="ClaimObjectSeq" type="xs:long"/>
  <xs:element name="ClaimType" type="xs:string"/>
  <xs:element name="ClaimantID" type="xs:long"/>
  <xs:element name="Claims" type="Claims_Type"/>
  <xs:element name="ClaimReqSeq" type="xs:integer"/>
  <xs:element name="ClassCode" type="xs:string"/>
  <xs:element name="ClassSubCode" type="xs:string"/>
  <xs:element name="Client" type="Client_Type"/>
  <xs:element name="ClientName" type="xs:string"/>
  <xs:element name="ClientPID" type="xs:string"/>
  <xs:element name="CompType" type="xs:string"/>
  <xs:element name="CompanyData" type="CompanyData_Type"/>
  <xs:element name="Contact" type="Contact_Type"/>
  <xs:element name="ContactID" type="xs:integer"/>
  <xs:element name="Contacts" type="Contacts_Type"/>
  <xs:element name="ContentType" type="MIME_TYPE_TYPE"/>
  <xs:element name="Contributions" type="InvAccountPPlans_Type"/>
  <xs:element name="CoverageType" type="xs:string"/>
  <xs:element name="CoverCode" type="xs:string"/>
  <xs:element name="CoverLOB" type="xs:string"/>
  <xs:element name="CoverPackages" type="CoverPackages_Type"/>
  <xs:element name="Covers" type="Covers_Type"/>
  <xs:element name="CreditCards" type="CreditCards_Type"/>
  <xs:element name="Currency" type="xs:string"/>
  <xs:element name="CustomOID" type="CustomOID_Type"/>
  <xs:element name="CustomProperties" type="CustomProperties_Type"/>
  <xs:element name="DataSource" type="xs:string"/>
  <xs:element name="DiagnosisID" type="xs:long"/>
  <xs:element name="DiagnosisCode" type="xs:string"/>
  <xs:element name="DiagnosisName" type="xs:string"/>
  <xs:element name="DiagnosisGroupID" type="xs:long"/>
  <xs:element name="DiagnosisGroupCode" type="xs:string"/>
  <xs:element name="DiagnosisGroupName" type="xs:string"/>
  <xs:element name="Discounts" type="Discounts_Type"/>
  <xs:element name="DocID" type="xs:string"/>
  <xs:element name="DocInfo" type="DocInfo_Type"/>
  <xs:element name="Drivers" type="Drivers_Type"/>
  <xs:element name="DrugID" type="xs:long"/>
  <xs:element name="DrugCode" type="xs:string"/>
  <xs:element name="DrugName" type="xs:string"/>
  <xs:element name="DrugGroupID" type="xs:long"/>
  <xs:element name="DrugGroupCode" type="xs:string"/>
  <xs:element name="DrugGroupName" type="xs:string"/>
  <xs:element name="EngagementID" type="xs:long"/>
  <xs:element name="EngagementNo" type="xs:string"/>
  <xs:element name="Entity" type="Entity_Type"/>
  <xs:element name="EntityType" type="ENTITY_VALUE_TYPE"/>
  <xs:element name="ExpertID" type="xs:long"/>
  <xs:element name="FileName" type="xs:string"/>
  <xs:element name="Error" type="Error_Type">
    <xs:annotation>
      <xs:documentation>Generic INSIS WS Error</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="FilterCriteria" type="FilterCriteria_Type"/>
  <xs:element name="FiscalPeriod" type="xs:string"/>
  <xs:element name="GeogAreaCode" type="xs:string"/>
  <xs:element name="GeogAreaName" type="xs:string"/>
  <xs:element name="GrcID" type="xs:long"/>
  <xs:element name="GrcOrgID" type="xs:long"/>
  <xs:element name="GrcRefID" type="xs:long"/>
  <xs:element name="GroupID" type="xs:long"/>
  <xs:element name="Guilty" type="Guilty_Type"/>
  <xs:element name="HomeCountry" type="xs:string"/>
  <xs:element name="IndustryCode" type="xs:string"/>
  <xs:element name="InjuredObjects" type="InjuredObjects_Type"/>
  <xs:element name="InsrBegin" type="DATE_TIME_TYPE"/>
  <xs:element name="InsrEnd" type="xs:dateTime"/>
  <xs:element name="InstallmentType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="2|5|6|7|8|9|10|11|12|14|15|17"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="Installments" type="xs:integer"/>
  <xs:element name="InsuranceBegin" type="xs:date"/>
  <xs:element name="InsuranceEnd" type="xs:dateTime"/>
  <xs:element name="InsuredAmount" type="xs:decimal"/>
  <xs:element name="InsuredEntity" type="InsuredEntity_Type"/>
  <xs:element name="InsuredID" type="xs:integer"/>
  <xs:element name="InsuredObjectID" type="xs:long"/>
  <xs:element name="InsuredRole" type="xs:string"/>
  <xs:element name="Insureds" type="Insureds_Type"/>
  <xs:element name="InsurerID" type="xs:long"/>
  <xs:element name="Language" type="xs:string"/>
  <xs:element name="LettersOfCredit" type="LettersOfCredit_Type"/>
  <xs:element name="LossSize" type="xs:string"/>
  <xs:element name="LossType" type="xs:string"/>
  <xs:element name="ManID" type="xs:long"/>
  <xs:element name="ModifyInsuredEntity" type="ModifyInsuredEntity_Type"/>
  <xs:element name="NamePrefix" type="xs:string"/>
  <xs:element name="NameSuffix" type="xs:string"/>
  <xs:element name="Nationality" type="xs:string"/>
  <xs:element name="NetworkID" type="xs:long"/>
  <xs:element name="NetworkCode" type="xs:string"/>
  <xs:element name="NetworkCoverage" type="xs:string"/>
  <xs:element name="NetworkName" type="xs:string"/>
  <xs:element name="NewAnnexID" type="xs:integer"/>
  <xs:element name="Notes" type="xs:string"/>
  <xs:element name="OAccidentInsured" type="OAccidentInsured_Type"/>
  <xs:element name="OAdditionalEquipment" type="OAdditionalEquipment_Type"/>
  <xs:element name="OAgriculture" type="OAgriculture_Type"/>
  <xs:element name="OAnimal" type="OAnimal_Type"/>
  <xs:element name="OCar" type="OCar_Type"/>
  <xs:element name="OCargo" type="OCargo_Type"/>
  <xs:element name="OInsuredGroups" type="OInsuredGroups_Type"/>
  <xs:element name="OLiability" type="OLiability_Type"/>
  <xs:element name="OLoss" type="OLoss_Type"/>
  <xs:element name="OPlane" type="OPlane_Type"/>
  <xs:element name="OPropBri" type="OPropBri_Type"/>
  <xs:element name="OProperty" type="OProperty_Type"/>
  <xs:element name="OShip" type="OShip_Type"/>
  <xs:element name="OTrain" type="OTrain_Type"/>
  <xs:element name="ObjectID" type="xs:integer"/>
  <xs:element name="ObjectNum" type="xs:integer"/>
  <xs:element name="ObjectType" type="xs:integer"/>
  <xs:element name="OfficeID" type="xs:long"/>
  <xs:element name="Operation" type="OPERATION_MODE_TYPE"/>
  <xs:element name="Owners" type="Owners_Type"/>
  <xs:element name="PID" type="xs:string">
    <xs:annotation>
      <xs:documentation>Personal identifier (social security number,
                              EGN...)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="PaymentID" type="xs:long"/>
  <xs:element name="PaymentWay" type="xs:string"/>
  <xs:element name="PersonalData" type="PersonalData_Type"/>
  <xs:element name="PolicyID" type="xs:long"/>
  <xs:element name="PolicyNo" type="xs:string"/>
  <xs:element name="PolicyRef" type="xs:string"/>
  <xs:element name="PolicyRuleID" type="xs:long"/>
  <xs:element name="PolicyAddresses" type="PolicyAddresses_Type"/>
  <xs:element name="PolicyContacts" type="PolicyContacts_Type"/>
  <xs:element name="PolicyBankAccounts" type="PolicyBankAccounts_Type"/>
  <xs:element name="PolicyCreditCards" type="PolicyCreditCards_Type"/>
  <xs:element name="Premium" type="Premium_Type"/>
  <xs:element name="ProductCode" type="xs:string"/>
  <xs:element name="ProviderID" type="xs:long"/>
  <xs:element name="ProviderCode" type="xs:string"/>
  <xs:element name="ProviderName" type="xs:string"/>
  <xs:element name="ProviderType" type="xs:string"/>
  <xs:element name="Rank" type="xs:string"/>
  <xs:element name="RecipientData" type="RecipientData_Type"/>
  <xs:element name="RefuseCode" type="xs:integer"/>
  <xs:element name="RefuseComment" type="xs:string"/>
  <xs:element name="RefuseDate" type="xs:date"/>
  <xs:element name="RefuseLetter" type="xs:string"/>
  <xs:element name="RegistrationDate" type="xs:dateTime"/>
  <xs:element name="RegressID" type="xs:long"/>
  <xs:element name="RelatedPersons" type="RelatedPersons_Type"/>
  <xs:element name="ReportID" type="xs:long"/>
  <xs:element name="RequestNo" type="xs:integer"/>
  <xs:element name="ResidentialAddress" type="ResidentialAddress_Type"/>
  <xs:element name="Result" type="xs:integer"/>
  <xs:element name="ReturningMessage" type="xs:string"/>
  <xs:element name="ReturningMessages" type="ReturningMessages_Type"/>
  <xs:element name="RiskType" type="xs:string"/>
  <xs:element name="Risks" type="Risks_Type"/>
  <xs:element name="SalesChannelID" type="xs:long"/>
  <xs:element name="SeparateDuration" type="xs:integer"/>
  <xs:element name="ServiceID" type="xs:long"/>
  <xs:element name="ServiceCode" type="xs:string"/>
  <xs:element name="ServiceName" type="xs:string"/>
  <xs:element name="ServicePlace" type="xs:string"/>
  <xs:element name="SliceType" type="xs:string"/>
  <xs:element name="StaffID" type="xs:integer"/>
  <xs:element name="SrvgrpID" type="xs:long"/>
  <xs:element name="SrvgrpCode" type="xs:string"/>
  <xs:element name="SrvgrpName" type="xs:string"/>
  <xs:element name="SubGroupID" type="xs:long"/>
  <xs:element name="SubIndustryCode" type="xs:string"/>
  <xs:element name="Supplementaries" type="Supplementaries_Type"/>
  <xs:element name="SurvivorID" type="xs:integer"/>
  <xs:element name="TariffRule" type="xs:string"/>
  <xs:element name="Taxes" type="Taxes_Type"/>
  <xs:element name="TreatyID" type="xs:long"/>
  <xs:element name="TreatyType" type="xs:string"/>
  <xs:element name="ULFunds">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="ULFund" type="ULFund_Type"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedBy" type="xs:string"/>
  <xs:element name="UpdatedOn" type="xs:dateTime"/>
  <xs:element name="URL" type="xs:anyURI"/>
  <xs:element name="Userexit" type="Userexit_Type"/>
  <xs:element name="ValidityConditions">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="ValidityCondition" type="ValidityCondition_Type"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ValidFrom" type="xs:date"/>
  <xs:element name="ValidFromTime" type="xs:time"/>
  <xs:element name="ValidTo" type="xs:date"/>
  <xs:element name="ValidToTime" type="xs:time"/>
  <xs:element name="WfAttachmentPackage" type="WfAttachmentPackage_Type"/>
  <xs:element name="WfStep" type="WfStep_Type"/>
  <xs:group name="Change_People_Data_Group">
    <xs:sequence>
      <xs:element name="Entity" type="ChngeEntityData_Type"/>
      <xs:element name="Addresses" type="ChngeAddresses_Type" minOccurs="0"/>
      <xs:element name="Contacts" type="ChngeContacts_Type" minOccurs="0"/>
      <xs:element name="BankAccounts" type="ChngeBankAccnts_Type" minOccurs="0"/>
      <xs:element name="CreditCards" type="ChngeCreditCards_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="ClaimReport_Group">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="ClaimID"/>
        <xs:element ref="ClaimNo"/>
      </xs:choice>
      <xs:element ref="RequestNo"/>
      <xs:element name="ReportNo" type="xs:integer"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="Cnng_Insured_Group">
    <xs:sequence>
      <xs:element ref="InsuredObjectID"/>
      <xs:element ref="PolicyNo"/>
      <xs:element name="Cover" type="Cover_Type"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="Engagement_Quote_Group">
    <xs:sequence>
      <xs:element name="QuoteID" type="xs:long" minOccurs="0"/>
      <xs:element name="QuoteNo" type="xs:string" minOccurs="0"/>
      <xs:element name="QuoteVer" type="xs:string" minOccurs="0"/>
      <xs:element name="Status" type="xs:string" minOccurs="0"/>
      <xs:element name="OrgQuoteID" type="xs:long" minOccurs="0"/>
      <xs:element name="DateSubmitted" type="xs:date" minOccurs="0"/>
      <xs:element name="DateAccepted" type="xs:date" minOccurs="0"/>
      <xs:element name="ValidTo" type="xs:date" minOccurs="0"/>
      <xs:element name="RejectReason" type="xs:string" minOccurs="0"/>
      <xs:element name="QuoteType" type="xs:string" minOccurs="0"/>
      <xs:element name="QuoteNotes" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="Insured_Group">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="PolicyID"/>
        <xs:element ref="PolicyNo"/>
      </xs:choice>
      <xs:element ref="InsuredObjectID"/>
      <xs:element minOccurs="0" ref="ObjectNum"/>
      <xs:element minOccurs="0" ref="InsuredAmount"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element minOccurs="0" ref="Covers"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="Insured_Ref_Group">
    <xs:annotation>
      <xs:documentation>A structure is used for Enrollment in gen/life/health policies.
                The group must be named as to be referred in Insured objects
                as a group and/or subgroup to which they belong.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="GroupSeqNum" type="xs:int" minOccurs="0"/>
      <xs:element name="AttachToGroup" type="AttachToGroup_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="AttachToGroup_Type">
    <xs:sequence>
      <xs:element name="GroupRef" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="PID_Data_Group">
    <xs:sequence>
      <xs:element ref="PID"/>
      <xs:element minOccurs="0" ref="EntityType"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="People_Data_Group">
    <xs:sequence>
      <xs:element ref="Entity"/>
      <xs:element minOccurs="0" ref="Addresses"/>
      <xs:element minOccurs="0" ref="Contacts"/>
      <xs:element minOccurs="0" ref="BankAccounts"/>
      <xs:element minOccurs="0" ref="CreditCards"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="Accounts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="BankAccount" type="BankAccount_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Address_Type">
    <xs:sequence>
      <xs:element ref="AddressID" minOccurs="0"/>
      <xs:element name="Country" type="xs:string" minOccurs="0"/>
      <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
      <xs:element name="State" type="xs:string" minOccurs="0"/>
      <xs:element name="CountryState" type="xs:string" minOccurs="0"/>
      <xs:element name="Region" type="xs:string" minOccurs="0"/>
      <xs:element name="StateRegion" type="xs:string" minOccurs="0"/>
      <xs:element name="City" type="xs:string" minOccurs="0"/>
      <xs:element name="CityCode" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ResidentialAddress"/>
      <xs:element name="ZipCode" type="xs:string" minOccurs="0"/>
      <xs:element ref="AddressType"/>
      <xs:element name="Address" type="xs:string" minOccurs="0"/>
      <xs:element name="MailYN" type="xs:string" minOccurs="0"/>
      <xs:element name="InvoiceYN" type="xs:string" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
      <xs:element name="TerritoryClass" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="UsageDateFrom" type="xs:date" minOccurs="0"/>
      <xs:element name="UsageDateFromTime" type="xs:time" minOccurs="0"/>
      <xs:element name="UsageDateTo" type="xs:date" minOccurs="0"/>
      <xs:element name="UsageDateToTime" type="xs:time" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
      <xs:element name="Phone" type="xs:string" minOccurs="0"/>
      <xs:element name="Fax" type="xs:string" minOccurs="0"/>
      <xs:element name="Email" type="xs:string" minOccurs="0"/>
      <xs:element name="EarthquakeFactor" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Addresses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Address" type="Address_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Annex_Type">
    <xs:sequence>
      <xs:element name="AnnexNo" type="xs:string" minOccurs="0"/>
      <xs:element name="BeginDate" type="xs:date" minOccurs="0"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
      <xs:element name="DateGiven" type="xs:date" minOccurs="0"/>
      <xs:element name="InstallmentsNo" type="xs:integer" minOccurs="0"/>
      <xs:element ref="TariffRule" minOccurs="0"/>
      <xs:element name="ReasonID" type="xs:string" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="SalesChannelID" minOccurs="0"/>
      <xs:element ref="CampaignId" minOccurs="0"/>
      <xs:element ref="InsurerID" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnnuityData_Type">
    <xs:sequence>
      <xs:element name="AnnuityType" type="xs:string"/>
      <xs:element name="AnnuityReason" type="xs:int" minOccurs="0"/>
      <xs:element name="AnnuityPeriod" type="xs:integer" minOccurs="0"/>
      <xs:element name="GuarantyPeriod" type="xs:integer" minOccurs="0"/>
      <xs:element name="BeginDate" type="xs:date"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
      <xs:element name="PaymentMode" type="xs:int"/>
      <xs:element name="ModalAnnuityAmnt" type="xs:decimal"/>
      <xs:element name="Currency" type="xs:string"/>
      <xs:element name="AnnualAnnuityAmnt" type="xs:decimal" minOccurs="0"/>
      <xs:element name="LumpSum" type="xs:decimal" minOccurs="0"/>
      <xs:element name="ReserveCalcMode" type="xs:string" minOccurs="0"/>
      <xs:element name="TechnicalInterest" type="xs:int" minOccurs="0"/>
      <xs:element name="ReserveAmount" type="xs:decimal" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnnuityRecipients_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="AnnuityRecipient" type="AnnuityRecipient_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnnuityRecipient_Type">
    <xs:sequence>
      <xs:group ref="PID_Data_Group"/>
      <xs:element name="RecipientName" type="xs:string" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element name="AnnuityType" type="xs:string" minOccurs="0"/>
      <xs:element name="RecipientState" type="xs:string" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element name="AnnualAmnt" type="xs:double" minOccurs="0"/>
      <xs:element name="AnnuityClaimAmount" type="xs:double"/>
      <xs:element name="InstallmentAmnt" type="xs:double" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element name="AnnuityStartDate" type="xs:date" minOccurs="0"/>
      <xs:element name="AnnuityDuration" type="xs:int"/>
      <xs:element name="DurationDim" type="xs:string"/>
      <xs:element name="Age" type="xs:int" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element name="Gender" type="xs:string" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element name="DeathDate" type="xs:date" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element name="GuarantyPeriod" type="xs:int" minOccurs="0"/>
      <xs:element name="GuarantyDim" type="xs:string" minOccurs="0"/>
      <xs:element name="PaymentDay" type="xs:int" minOccurs="0"/>
      <xs:element name="PaymentMode" type="xs:int" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="AnnuityRecID" type="xs:integer" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <!--only in query mode-->
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <!--only in query mode-->
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Attachment_Type">
    <xs:sequence>
      <xs:element ref="URL"/>
      <xs:element ref="FileName" minOccurs="0"/>
      <xs:element ref="ContentType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AttachmentFile_Type">
    <xs:sequence>
      <xs:element name="FileID" type="xs:long" minOccurs="0"/>
      <xs:choice>
        <xs:sequence>
          <xs:element ref="FileName"/>
          <xs:element ref="ContentType"/>
          <xs:element name="Content" type="xs:base64Binary" minOccurs="1"/>
        </xs:sequence>
        <xs:element ref="AttachmentRef"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AttachmentFiles_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="File" type="AttachmentFile_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AttachmentRef_Type">
    <xs:sequence>
      <xs:element name="FileId" type="xs:string"/>
      <xs:choice minOccurs="0">
        <xs:element name="DocumentId" type="xs:string" minOccurs="0"/>
        <xs:element name="MsgId" type="xs:string" minOccurs="0"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BankAccnt_Type">
    <xs:sequence>
      <xs:element ref="BankAccID" minOccurs="0"/>
      <xs:element name="BankName" type="xs:string"/>
      <xs:element name="BankPID" type="xs:string"/>
      <xs:element name="AccountNo" type="xs:string"/>
      <xs:element ref="Currency"/>
      <xs:element minOccurs="0" ref="AccountState"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BankAccnts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="BankAccount" type="BankAccnt_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BankAccount_Type">
    <xs:sequence>
      <xs:element ref="BankAccID" minOccurs="0"/>
      <xs:element name="BankName" type="xs:string"/>
      <xs:element name="BankPID" type="xs:string"/>
      <xs:element name="AccountCode" type="xs:string" minOccurs="0"/>
      <xs:element name="AccountNo" type="xs:string"/>
      <xs:element ref="Currency"/>
      <xs:element ref="AccountState"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChangeOthersData_Type">
    <xs:sequence>
      <xs:element name="AddressID" type="xs:string" minOccurs="0"/>
      <xs:element name="ManID" type="xs:string" minOccurs="0"/>
      <xs:element name="AddressType" type="xs:int"/>
      <xs:element name="ChangeDate" type="xs:date" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element name="OtherSubtype" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngAccidentInsured_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="PersonID" type="xs:long" minOccurs="1"/>
        <xs:element ref="PID"/>
        <xs:group ref="People_Data_Group"/>
      </xs:choice>
      <xs:element name="Age" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccinsType" type="xs:string" minOccurs="0"/>
      <xs:element name="AccinsSubtype" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for insured. (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Gender" type="GENDER_VALUE_TYPE" minOccurs="0"/>
      <xs:element name="DependentOn" minOccurs="0" type="DependentOn_Type">
        <xs:annotation>
          <xs:documentation>Can be populated with PID of main member</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngAdditionalEquipment_Type">
    <xs:sequence>
      <xs:element name="ParentObjectID" type="xs:string" minOccurs="0"/>
      <xs:element name="EquipmentType" type="xs:string" minOccurs="0"/>
      <xs:element name="EquipmentSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Model" type="xs:string" minOccurs="0"/>
      <xs:element name="SerialNo" type="xs:string" minOccurs="0"/>
      <xs:element name="IVOver" type="BOOLEAN_NUMBER_TYPE" minOccurs="0"/>
      <xs:element name="AvValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element name="EquipmentKind" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for additional equipment
                        (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngAgriculture_Type">
    <xs:sequence>
      <xs:element name="CultureType" type="xs:string" minOccurs="0"/>
      <xs:element name="CultureSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Area" type="xs:decimal" minOccurs="0"/>
      <xs:element name="RegionID" type="xs:integer" minOccurs="0"/>
      <xs:element name="CadastNum" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for agriculture (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngAnimal_Type">
    <xs:sequence>
      <xs:element name="AnimalType" type="xs:string" minOccurs="0"/>
      <xs:element name="AnimalSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Breed" type="xs:string" minOccurs="0"/>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Distinction" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for animal (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngCar_Type">
    <xs:sequence>
      <xs:element name="RegNo" type="xs:string" minOccurs="0"/>
      <xs:element name="CarType" type="xs:string" minOccurs="0"/>
      <xs:element name="CarSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Model" type="xs:string" minOccurs="0"/>
      <xs:element name="Make" type="xs:string" minOccurs="0"/>
      <xs:element name="Modification" type="xs:string" minOccurs="0"/>
      <xs:element name="Chassis" type="xs:string" minOccurs="0"/>
      <xs:element name="Engine" type="xs:string" minOccurs="0"/>
      <xs:element name="CCMTon" type="xs:decimal" minOccurs="0"/>
      <xs:element name="CarUsage" type="xs:integer" minOccurs="0"/>
      <xs:element name="SeatsNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="DoorNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="PaintType" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdYear" type="xs:integer" minOccurs="0"/>
      <xs:element name="CarAge" type="xs:decimal" minOccurs="0"/>
      <xs:element name="ProdType" type="xs:string" minOccurs="0"/>
      <xs:element name="CarColor" type="xs:string" minOccurs="0"/>
      <xs:element name="RegType" type="xs:string" minOccurs="0"/>
      <xs:element name="EnginePower" type="xs:decimal" minOccurs="0"/>
      <xs:element name="BonusMalus" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Tonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="EngineType" type="xs:string" minOccurs="0"/>
      <xs:element name="FuelType" type="xs:string" minOccurs="0"/>
      <xs:element name="DriveType" type="xs:string" minOccurs="0"/>
      <xs:element name="CarBodyType" type="xs:string" minOccurs="0"/>
      <xs:element name="WindowColor" type="xs:string" minOccurs="0"/>
      <xs:element name="Modified" type="BOOLEAN_NUMBER_TYPE" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element name="VehicleKey" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for car (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupplementaryEquipment" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="OAdditionalEquipment" maxOccurs="unbounded" type="ChngAdditionalEquipment_Type"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngCargo_Type">
    <xs:sequence>
      <xs:element name="CargoType" type="xs:integer" minOccurs="0"/>
      <xs:element name="CargoSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="CargoPolicyType" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="PackingType" type="xs:integer" minOccurs="0"/>
      <xs:element name="BoxNumber" type="xs:integer" minOccurs="0"/>
      <xs:element name="TeritoryID" type="xs:integer" minOccurs="0"/>
      <xs:element name="FromPlace" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="1" name="ToPlace" type="xs:string" minOccurs="0"/>
      <xs:element name="Via" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="1" name="Destination" type="xs:string" minOccurs="0"/>
      <xs:element name="TransportType" type="xs:integer" minOccurs="0"/>
      <xs:element name="VehicleType" type="xs:integer" minOccurs="0"/>
      <xs:element name="ShipmentDoc" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipmentDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ToOrder" type="xs:string" minOccurs="0"/>
      <xs:element name="AverageAgent" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Distance" type="xs:string" minOccurs="0"/>
      <xs:element name="TransportMeans" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element name="TermsOfSale" type="TermsOfSale_Type" minOccurs="0"/>
      <xs:element name="Vehicles" type="OVehicles_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for cargo (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngInsuredGroups_Type">
    <xs:sequence>
      <xs:element name="GrpType" type="xs:string" minOccurs="0"/>
      <xs:element name="GrpSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for insured groups (FiledName
                        | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngLiability_Type">
    <xs:sequence>
      <xs:element name="LiabDesc" type="xs:string" minOccurs="0"/>
      <xs:element name="LiabType" type="xs:string" minOccurs="0"/>
      <xs:element name="LiabSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:choice maxOccurs="1" minOccurs="0">
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for liability (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngLoss_Type">
    <xs:sequence>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for loss (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngPlane_Type">
    <xs:sequence>
      <xs:element name="Make" type="xs:string" minOccurs="0"/>
      <xs:element name="RegNo" type="xs:string" minOccurs="0"/>
      <xs:element name="PlaneType" type="xs:string" minOccurs="0"/>
      <xs:element name="PlaneSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdNo" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdYear" type="xs:integer" minOccurs="0"/>
      <xs:element name="CCMTon" type="xs:decimal" minOccurs="0"/>
      <xs:element name="SeatsNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="PlaneHistory" type="xs:integer" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for plane (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngPropBri_Type">
    <xs:sequence>
      <xs:element name="Construction" type="xs:string" minOccurs="0"/>
      <xs:element name="ConstructionType" type="xs:string" minOccurs="0"/>
      <xs:element name="Area" type="xs:decimal" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element maxOccurs="1" name="BriDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for buildings under
                        construction (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngProperty_Type">
    <xs:sequence>
      <xs:element name="PropertyKind" type="xs:string" minOccurs="0"/>
      <xs:element name="PropertyType" type="xs:string" minOccurs="0"/>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for property (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngShip_Type">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipClass" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipType" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipSubtype" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="1" name="RegNo" type="xs:string" minOccurs="0"/>
      <xs:element name="RegPort" type="xs:string" minOccurs="0"/>
      <xs:element name="GrossTonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="NetTonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="OwnerClass" type="xs:string" minOccurs="0"/>
      <xs:element name="Length" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Height" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Wide" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Wade" type="xs:decimal" minOccurs="0"/>
      <xs:element name="DeadWeight" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Region" type="xs:string" minOccurs="0"/>
      <xs:element name="PreviousInsurer" type="xs:string" minOccurs="0"/>
      <xs:element name="PassengerNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="CrewNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="LastMaintenanceDate" type="xs:date" minOccurs="0"/>
      <xs:element name="Engine" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdInfo" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdYear" type="xs:integer" minOccurs="0"/>
      <xs:element name="Producer" type="xs:string" minOccurs="0"/>
      <xs:element name="ClaimInfo" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for ship (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupplementaryEquipment" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="OAdditionalEquipment" maxOccurs="unbounded" type="ChngAdditionalEquipment_Type"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngTrain_Type">
    <xs:sequence>
      <xs:element name="RegNo" type="xs:string" minOccurs="0"/>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="TrainType" type="xs:string" minOccurs="0"/>
      <xs:element name="TrainSubtype" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for train (FiledName |
                        Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeAddresses_Type">
    <xs:sequence>
      <xs:element name="Address" type="Address_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeBankAccnt_Type">
    <xs:sequence>
      <xs:element ref="BankAccID" minOccurs="0"/>
      <xs:element name="BankName" type="xs:string" minOccurs="0"/>
      <xs:element name="BankPID" type="xs:string"/>
      <xs:element name="AccountNo" type="xs:string"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element minOccurs="0" ref="AccountState"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeBankAccnts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="BankAccount" type="ChngeBankAccnt_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeCompData_Type">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="CustomerID" type="xs:string"/>
      <xs:element minOccurs="0" ref="FiscalPeriod"/>
      <xs:element minOccurs="0" ref="CompType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeContact_Type">
    <xs:sequence>
      <xs:sequence>
        <xs:element ref="ContactID" minOccurs="0"/>
        <xs:element name="Type" type="xs:string"/>
        <xs:element name="Details" type="xs:string" minOccurs="0"/>
        <xs:element name="ContactNote" type="xs:string" minOccurs="0"/>
        <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
        <xs:element ref="ValidFrom" minOccurs="0"/>
        <xs:element ref="ValidFromTime" minOccurs="0"/>
        <xs:element ref="ValidTo" minOccurs="0"/>
        <xs:element ref="ValidToTime" minOccurs="0"/>
        <xs:element minOccurs="0" ref="Language"/>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeContacts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Contact" type="ChngeContact_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreditCards_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="CreditCard" type="CreditCard_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreditCard_Type">
    <xs:sequence>
      <xs:element ref="CardID" minOccurs="0"/>
      <xs:element name="CCTypeID" type="xs:string"/>
      <xs:element name="BillingAddress" type="xs:string"/>
      <xs:element name="CardHolderName" type="xs:string"/>
      <xs:element name="ExpiryMonth" type="xs:int"/>
      <xs:element name="ExpiryYear" type="xs:int"/>
      <xs:element ref="ValidFrom"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeCreditCards_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="CreditCard" type="ChngeCreditCard_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeCreditCard_Type">
    <xs:sequence>
      <xs:element ref="CardID" minOccurs="0"/>
      <xs:element name="CCTypeID" type="xs:string"/>
      <xs:element name="BillingAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="CardHolderName" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" name="ExpiryMonth" type="xs:int"/>
      <xs:element minOccurs="0" name="ExpiryYear" type="xs:int"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngeEntityData_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="PersonalData" type="ChngePrsnlData_Type"/>
        <xs:element name="CompanyData" type="ChngeCompData_Type"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="ManID"/>
      <xs:element minOccurs="0" ref="NamePrefix"/>
      <xs:element minOccurs="0" ref="NameSuffix"/>
      <xs:element minOccurs="0" ref="Nationality"/>
      <xs:element minOccurs="0" ref="IndustryCode"/>
      <xs:element minOccurs="0" ref="SubIndustryCode"/>
      <xs:element minOccurs="0" ref="ClassCode"/>
      <xs:element minOccurs="0" ref="ClassSubCode"/>
      <xs:element minOccurs="0" ref="DataSource"/>
      <xs:element name="RegistrationDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
      <xs:element name="PersonRelations" type="PersonRelations_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChngePrsnlData_Type">
    <xs:sequence>
      <xs:element name="Name" type="PersonName_Type" minOccurs="0"/>
      <xs:element ref="PID"/>
      <xs:element name="Gender" type="GENDER_VALUE_TYPE" minOccurs="0"/>
      <xs:element name="BirthDate" type="xs:date" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Language"/>
      <xs:element ref="HomeCountry" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimAddresses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ClaimAddress" type="Address_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimBankAccounts_Type">
    <xs:sequence>
      <xs:element name="ClaimBankAccount" type="ClaimBankAccount_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimBankAccount_Type">
    <xs:sequence>
      <xs:element name="ClaimBankAccountID" type="xs:long" minOccurs="0"/>
      <xs:element ref="BankAccID" minOccurs="0"/>
      <xs:element name="BankAccount" type="ChngeBankAccnt_Type"/>
      <xs:element name="AccountPurpose" type="xs:string"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimDamageList_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Damage" type="ClaimDamage_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimDamage_Type">
    <xs:sequence>
      <xs:element name="DamageID" type="xs:string"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="LossPercent" type="xs:double" minOccurs="0"/>
      <xs:element name="RequestedQty" type="xs:int" minOccurs="0"/>
      <xs:element name="RequestedAmnt" type="xs:double" minOccurs="0"/>
      <xs:element name="Price" type="xs:double" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element name="ConfirmedQty" type="xs:int" minOccurs="0"/>
      <xs:element name="ConfirmedAmnt" type="xs:double" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimExpense_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ClaimExpenseSeq"/>
      <xs:element name="ExpenseID" type="xs:int"/>
      <xs:element name="ExpenseSum" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element minOccurs="0" ref="PaymentID"/>
      <xs:element name="ClaimExpSrc" type="xs:long" minOccurs="0"/>
      <xs:element name="UsedSum" type="xs:double" minOccurs="0"/>
      <xs:element name="ExpenseDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ExpenseType" type="xs:string" minOccurs="0"/>
      <xs:element name="VAT" type="xs:double" minOccurs="0"/>
      <xs:element name="VATUsed" type="xs:double" minOccurs="0"/>
      <xs:element name="SubjectRI" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimExpenses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Expense" type="ClaimExpense_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimIndeminityDetail_Type">
    <xs:sequence>
      <xs:element name="ClaimIndemSeq" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ClaimObjectSeq"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:element name="InspectNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="IndemnityType" type="xs:integer"/>
      <xs:element name="ParamID" type="xs:int"/>
      <xs:element name="ParamName" type="xs:string" minOccurs="0"/>
      <xs:element name="ParamValue" type="xs:double"/>
      <xs:element name="ParamDim" type="xs:string"/>
      <xs:element name="ParamSum" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element name="Applied" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimIndeminityDetails_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ClaimIndeminityDetail" type="ClaimIndeminityDetail_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimIndemnities_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ClaimIndeminity" type="ClaimIndemnity_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimIndemnity_Type">
    <xs:sequence>
      <xs:element name="ClaimIndemSeq" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ClaimObjectSeq"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:element minOccurs="0" ref="InsuredObjectID"/>
      <xs:element minOccurs="0" ref="CoverCode"/>
      <xs:element minOccurs="0" ref="RiskType"/>
      <xs:element name="InspectNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="IndemnityType" type="xs:integer"/>
      <xs:element name="ConvertDateType" type="xs:int"/>
      <xs:element name="ConvertDate" type="xs:date" minOccurs="0"/>
      <xs:element name="CalculateDate" type="xs:date"/>
      <xs:element name="PaySum" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element name="CalSum" type="xs:double" minOccurs="0"/>
      <xs:element name="CorrectReason" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="1" name="OverLimit" type="xs:int" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="ClaimIndeminityDetails" type="ClaimIndeminityDetails_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimObjDriver_Type">
    <xs:annotation>
      <xs:documentation>A structure holding details for driver of claim object</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element ref="ManID"/>
        <xs:group ref="People_Data_Group"/>
      </xs:choice>
      <xs:element name="LicenseID" type="xs:string" minOccurs="0"/>
      <xs:element name="Experience" type="xs:int" minOccurs="0"/>
      <xs:element name="Age" type="xs:int" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimParticipant_Type">
    <xs:sequence>
      <xs:element name="ParticipantID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:group ref="People_Data_Group"/>
      <xs:element name="ParticipantRole" type="xs:string"/>
      <xs:element ref="Rank" minOccurs="0"/>
      <xs:element name="AppointmentDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ReportNo" type="xs:string" minOccurs="0"/>
      <xs:element name="ReportDate" type="xs:date" minOccurs="0"/>
      <xs:element name="Percentage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="ClaimBankAccounts" minOccurs="0" type="ClaimBankAccounts_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimParticipants_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Participant" type="ClaimParticipant_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimPaymExpense_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PaymentID"/>
      <xs:element name="ExpenseID" type="xs:int"/>
      <xs:element name="ExpenseName" type="xs:string" minOccurs="0"/>
      <xs:element name="InsuredName" type="xs:string" minOccurs="0"/>
      <xs:element name="CoverName" type="xs:string" minOccurs="0"/>
      <xs:element name="ExpenseSum" type="xs:double" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element name="VAT" type="xs:double" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimPaymExpenses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Expense" type="ClaimPaymExpense_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimPayment_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ReportID"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:element minOccurs="0" ref="PaymentID"/>
      <xs:element minOccurs="0" ref="ClaimExpenseSeq"/>
      <xs:element name="BenefType" type="xs:int"/>
      <xs:choice>
        <xs:element ref="ManID"/>
        <xs:group ref="PID_Data_Group"/>
      </xs:choice>
      <xs:element name="PaymentNum" type="xs:int"/>
      <xs:element name="PaymentWay" type="xs:string"/>
      <xs:element name="PaySum" type="xs:double" minOccurs="0"/>
      <xs:element name="ExpenseSum" type="xs:double" minOccurs="0"/>
      <xs:element name="IndemSum" type="xs:double" minOccurs="0"/>
      <xs:element ref="Currency"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="OverrideIndemnity" type="OverrideIndemnity_Type" minOccurs="0"/>
      <xs:element name="PaymentDetails" type="PaymentDetails_Type" minOccurs="0"/>
      <xs:element name="Expenses" type="ClaimPaymExpenses_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimPayments_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Payment" type="ClaimPayment_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimReport_Type">
    <xs:sequence>
      <xs:element ref="ClaimID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:element minOccurs="0" ref="ReportID"/>
      <xs:element name="ReportNo" type="xs:int"/>
      <xs:element name="ReportState" type="xs:int" minOccurs="0"/>
      <xs:element name="ReportDate" type="xs:date"/>
      <xs:element name="PaymentType" type="xs:int"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Payments" type="ClaimPayments_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClaimReports_Type">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="Report" type="ClaimReport_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Claim_Type">
    <xs:sequence>
      <xs:element ref="ClaimID"/>
      <xs:element ref="ClaimNo"/>
      <xs:element minOccurs="0" ref="PolicyNo"/>
      <xs:element minOccurs="0" ref="ProductCode"/>
      <xs:element name="ClaimStarted" type="xs:date" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ClaimType"/>
      <xs:element minOccurs="0" ref="CauseID"/>
      <xs:element name="EventType" type="xs:integer"/>
      <xs:element name="EventTypeDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="EventDate" type="xs:date"/>
      <xs:element name="EventTime" type="xs:time" minOccurs="0"/>
      <xs:element name="EventDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="EventCountry" type="xs:string" minOccurs="0"/>
      <xs:element name="EventPlace" type="xs:string" minOccurs="0"/>
      <xs:element name="SrcInsurer" type="xs:int" minOccurs="0"/>
      <xs:element name="SrcInsurerName" type="xs:string" minOccurs="0"/>
      <xs:element name="SrcClaimID" type="xs:string" minOccurs="0"/>
      <xs:element name="ClaimComment" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element name="ClaimAddresses" type="ClaimAddresses_Type" minOccurs="0"/>
      <xs:element name="Participants" type="ClaimParticipants_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Requests" type="Requests_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Claims_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="Claim" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClientData_Type">
    <xs:sequence>
      <xs:element name="CorporateIcStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="CustomerType" type="xs:string" minOccurs="0"/>
      <xs:element name="EmployeeStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="IcStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="OfficialStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="Profitability" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskRating" type="xs:string" minOccurs="0"/>
      <xs:element name="Segment" type="xs:string" minOccurs="0"/>
      <xs:element name="ClientId" type="xs:integer" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Client_Type">
    <xs:sequence>
      <xs:group ref="People_Data_Group"/>
      <xs:element name="ClientData" type="ClientData_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CompanyData_Type">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="CustomerID" type="xs:string"/>
      <xs:element minOccurs="0" ref="FiscalPeriod"/>
      <xs:element minOccurs="0" ref="CompType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Contact_Type">
    <xs:sequence>
      <xs:element ref="ContactID" minOccurs="0"/>
      <xs:element name="Type" type="xs:string"/>
      <xs:element name="Details" type="xs:string"/>
      <xs:element name="ContactNote" type="xs:string" minOccurs="0"/>
      <xs:element name="PrimaryFlag" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Language"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Contacts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Contact" type="Contact_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Correction_Type">
    <xs:sequence>
      <xs:element name="CorrectionID" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CoverPackage_Type">
    <xs:sequence>
      <xs:element name="PackageID" type="xs:string"/>
      <xs:element name="PackageName" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Covers"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CoverPackages_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="CoverPackage" type="CoverPackage_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Cover_Type">
    <xs:sequence>
      <xs:element ref="CoverCode"/>
      <xs:element name="CoverDescription" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ObjectNum"/>
      <xs:element ref="AnnexID"/>
      <xs:element ref="InsuredAmount"/>
      <xs:element ref="Currency"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
      <xs:element name="State" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="SeparateDuration"/>
      <xs:element minOccurs="0" ref="Premium"/>
      <xs:element name="PremiumType" type="xs:string" minOccurs="0"/>
      <xs:element ref="GrcID" minOccurs="0"/>
      <xs:element ref="GrcOrgID" minOccurs="0"/>
      <xs:element ref="GrcRefID" minOccurs="0"/>
      <xs:element ref="SliceType" minOccurs="0"/>
      <xs:element ref="CoverLOB" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="SubGroupID" minOccurs="0"/>
      <xs:element ref="TariffRule" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Risks"/>
      <xs:element ref="ULFunds" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Contributions"/>
      <xs:element name="Endorsements" type="Endorsements_Type" minOccurs="0"/>
      <xs:element name="Territories" type="Territories_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Discounts"/>
      <xs:element name="PolicyDocuments" type="PolicyDocs_Type" minOccurs="0"/>
      <xs:element name="Indemnities" type="Indemnities_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Taxes"/>
      <xs:element name="Limits" type="Limits_Type" minOccurs="0"/>
      <xs:element name="GeographicalAreas" type="PolicyGeogAreas_Type" minOccurs="0"/>
      <xs:element name="Networks" type="PolicyNetworks_Type" minOccurs="0"/>
      <xs:element name="Providers" type="PolicyProviders_Type" minOccurs="0"/>
      <xs:element name="Gatekeepers" type="PolicyGatekeepers_Type" minOccurs="0"/>
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CoverageAssign_Type">
    <xs:choice>
      <xs:element name="LinkedObject" type="POLICY_TYPE"/>
      <xs:element name="Insureds" type="LinkedInsureds_Type"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Coverage_Type">
    <xs:sequence>
      <xs:element name="CoverageID" type="xs:long" minOccurs="0"/>
      <xs:element name="CoverageName" type="xs:string"/>
      <xs:element name="Placement" type="xs:double"/>
      <xs:element name="PlacementDim" type="xs:string"/>
      <xs:element name="Premium" type="xs:double"/>
      <xs:element name="PremiumDim" type="xs:string"/>
      <xs:element ref="Currency"/>
      <xs:element name="AggregatedLimit" type="xs:double" minOccurs="0"/>
      <xs:element name="AggregatedDeductible" type="xs:double" minOccurs="0"/>
      <xs:element name="Retention" type="xs:double" minOccurs="0"/>
      <xs:element name="Limit" type="xs:double" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Retrocession" type="Retrocession_Type" minOccurs="0"/>
      <xs:element name="Assignment" type="CoverageAssign_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Coverages_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Coverage" type="Coverage_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Covers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Cover" type="Cover_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreditorData_Type">
    <xs:sequence>
      <xs:element name="CreditorID" type="xs:long" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CustomOID_Type">
    <xs:sequence>
      <xs:element name="ObjectType" type="xs:integer"/>
      <xs:element ref="FilterCriteria"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CustomProperties_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="CustomProperty" type="CustomProperty_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CustomProperty_Type">
    <xs:sequence>
      <xs:element name="FieldName" type="xs:string"/>
      <xs:element name="FieldLabel" type="xs:string" minOccurs="0"/>
      <xs:element name="Value" type="xs:string" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DamageList_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Damage" type="Damage_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Damage_Type">
    <xs:sequence>
      <xs:element name="DamageID" type="xs:integer"/>
      <xs:element name="DamageName" type="xs:string"/>
      <xs:element name="DamageLevel" type="xs:integer"/>
      <xs:element name="Currency" type="xs:string"/>
      <xs:element name="WornOut" type="xs:integer"/>
      <xs:element name="PartPrice" type="xs:double" minOccurs="0"/>
      <xs:element name="RepairWork" type="xs:double" minOccurs="0"/>
      <xs:element maxOccurs="1" name="MountWork" type="xs:double" minOccurs="0"/>
      <xs:element name="PaintWork" type="xs:double" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DependentOn_Type">
    <xs:sequence>
      <xs:group ref="PID_Data_Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Discount_Type">
    <xs:sequence>
      <xs:element name="ClientGroup" type="xs:string" minOccurs="0"/>
      <xs:element name="DiscountType" type="xs:string" minOccurs="1"/>
      <xs:element name="DiscountValue" type="xs:double" minOccurs="0"/>
      <xs:element name="AccumulativeFlag" type="xs:string" minOccurs="0"/>
      <xs:element name="Applied" type="xs:string" minOccurs="0"/>
      <xs:element name="TariffDiscount" type="xs:string" minOccurs="0"/>
      <xs:element name="DiscountDimension" type="xs:string" minOccurs="0"/>
      <xs:element name="BeginDate" type="xs:date" minOccurs="0"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
      <xs:element name="DiscountPercent" type="xs:double" minOccurs="0"/>
      <xs:element name="DiscountOrder" type="xs:positiveInteger" minOccurs="0"/>
      <xs:element name="UnderwritingCode" type="xs:string" minOccurs="0"/>
      <xs:element name="LumpSumDiscount" type="xs:double" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Discounts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Discount" type="Discount_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocDocument_Type">
    <xs:sequence>
      <xs:element name="DocSeq" type="xs:double" minOccurs="0"/>
      <xs:element name="DocumentID" type="xs:string" minOccurs="1"/>
      <xs:element name="DocumentName" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentSerial" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentNo" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentDate" type="xs:date" minOccurs="0"/>
      <xs:element name="DocumentDateTime" type="xs:time" minOccurs="0"/>
      <xs:element name="DocumentValidTo" type="xs:date" minOccurs="0"/>
      <xs:element name="DocumentValidToTime" type="xs:time" minOccurs="0"/>
      <xs:element name="DocumentHolderName" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentHolderAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="ReceiveDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ReceiveDateTime" type="xs:time" minOccurs="0"/>
      <xs:element name="DocState" type="xs:int" minOccurs="0"/>
      <xs:element name="CertifyEvent" type="xs:string" minOccurs="0"/>
      <xs:element name="DocDays" type="xs:date" minOccurs="0"/>
      <xs:element name="DocDaysTime" type="xs:time" minOccurs="0"/>
      <xs:element name="DocumentRef" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Notes"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocDocuments_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Document" type="DocDocument_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocInfo_Type">
    <xs:sequence>
      <xs:element name="Documents" type="Documents_Type"/>
      <xs:element minOccurs="0" ref="AttachmentRef"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Document_Type">
    <xs:sequence>
      <xs:element name="DocID" type="xs:string"/>
      <xs:element name="DocName" type="xs:string"/>
      <xs:element name="DocRef" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Documents_Type">
    <xs:sequence>
      <xs:element name="Document" maxOccurs="unbounded" type="Document_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Driver_Type">
    <xs:annotation>
      <xs:documentation>A structure holding details for drivers of insured object</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DriverID" type="xs:long" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element ref="ManID"/>
        <xs:element ref="PID"/>
      </xs:choice>
      <xs:group minOccurs="0" ref="Change_People_Data_Group"/>
      <xs:element name="LicenseID" type="xs:string" minOccurs="0"/>
      <xs:element name="Experience" type="xs:int" minOccurs="0"/>
      <xs:element name="Age" type="xs:int" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element name="AuxAnnexID" minOccurs="0" type="xs:integer"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Drivers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Driver" type="Driver_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Endorsement_Type">
    <xs:sequence>
      <xs:element name="EndorsementID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="ProductCode"/>
      <xs:element minOccurs="0" ref="CoverCode"/>
      <xs:element minOccurs="0" ref="GrcID"/>
      <xs:element name="EndorsementCode" type="xs:string"/>
      <xs:element name="EndorsementType" type="xs:string" minOccurs="0"/>
      <xs:element name="EndorsementSubType" type="xs:string" minOccurs="0"/>
      <xs:element name="EndorsementOrder" type="xs:int" minOccurs="0"/>
      <xs:element name="Text" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="BeginDate"/>
      <xs:element name="BeginDateTime" type="xs:time" minOccurs="0"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
      <xs:element name="EndDateTime" type="xs:time" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Endorsements_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Endorsement" type="Endorsement_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Entity_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="PersonalData"/>
        <xs:element ref="CompanyData"/>
      </xs:choice>
      <xs:element ref="ManID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="NamePrefix"/>
      <xs:element minOccurs="0" ref="NameSuffix"/>
      <xs:element minOccurs="0" ref="Nationality"/>
      <xs:element minOccurs="0" ref="IndustryCode"/>
      <xs:element minOccurs="0" ref="SubIndustryCode"/>
      <xs:element minOccurs="0" ref="ClassCode"/>
      <xs:element minOccurs="0" ref="ClassSubCode"/>
      <xs:element minOccurs="0" ref="DataSource"/>
      <xs:element minOccurs="0" ref="RegistrationDate"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
      <xs:element name="PersonRelations" type="PersonRelations_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Error_Type">
    <xs:sequence>
      <xs:element name="ErrorID" type="xs:string"/>
      <xs:element name="ErrorDescr" type="xs:string"/>
      <xs:element name="Module" type="xs:string" minOccurs="0"/>
      <xs:element name="Details" minOccurs="0" type="Exceptions_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Estimation_Type">
    <xs:sequence>
      <xs:element name="EstDate" type="xs:date"/>
      <xs:element name="WornOut" type="xs:double" minOccurs="0"/>
      <xs:element name="HourPrice" type="xs:double" minOccurs="0"/>
      <xs:element name="PaintType" type="xs:string" minOccurs="0"/>
      <xs:element name="Reduction" type="xs:integer"/>
      <xs:element name="DocNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="DocPage" type="xs:string" minOccurs="0"/>
      <xs:element name="DocColumn" type="xs:string" minOccurs="0"/>
      <xs:element name="Recapitulations" type="Recapitulations_Type" minOccurs="0"/>
      <xs:element name="DamageList" type="DamageList_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Evaluation_Type">
    <xs:sequence>
      <xs:element ref="ClaimObjectSeq"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element ref="RequestNo"/>
      <xs:element name="InspectNum" type="xs:integer"/>
      <xs:element minOccurs="0" ref="ObjectID"/>
      <xs:element minOccurs="0" ref="ObjectType"/>
      <xs:element name="ManID" type="xs:integer" minOccurs="0"/>
      <xs:element name="InspectionDate" type="xs:date"/>
      <xs:element name="ExpertiseAmount" type="xs:decimal"/>
      <xs:element name="ExpertiseCurrency" type="xs:string"/>
      <xs:element name="Measure" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="LossSize"/>
      <xs:element maxOccurs="1" name="ActualValue" type="xs:string" minOccurs="0"/>
      <xs:element name="ActualCurrency" type="xs:string" minOccurs="0"/>
      <xs:element name="TaxesValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="RecordType" type="xs:string" minOccurs="0"/>
      <xs:element name="RecordStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="SumConfirmedBy" type="xs:string" minOccurs="0"/>
      <xs:element name="SumConfirmTime" type="xs:date" minOccurs="0"/>
      <xs:element name="InvoiceNo" type="xs:string" minOccurs="0"/>
      <xs:element name="InspectionType" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="ClaimDamageList" type="ClaimDamageList_Type" minOccurs="0"/>
      <xs:element name="ClaimIndemnities" type="ClaimIndemnities_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Evaluations_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Evaluation" type="Evaluation_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExceptionDetail_Type">
    <xs:sequence>
      <xs:element name="Code" type="xs:string" minOccurs="0"/>
      <xs:element name="Message" type="xs:string"/>
      <xs:element name="StackTrace" minOccurs="0" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Exceptions_Type">
    <xs:sequence>
      <xs:element name="ExceptionDetail" type="ExceptionDetail_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FacFee_Type">
    <xs:sequence>
      <xs:element name="FeeType" type="xs:string"/>
      <xs:element name="FeeAmount" type="xs:double" minOccurs="0"/>
      <xs:element name="FeeDim" type="xs:string"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element name="RetainedFeeFlag" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FacFees_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Fee" type="FacFee_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Facultative_Type">
    <xs:sequence>
      <xs:element name="FacID" type="xs:long" minOccurs="0"/>
      <xs:element name="InOutFlag" type="xs:string"/>
      <xs:element name="FacType" type="xs:string"/>
      <xs:element name="TreatyType" type="xs:string"/>
      <xs:element name="FacNo" type="xs:string"/>
      <xs:element name="FacAnnexID" type="xs:int"/>
      <xs:element name="FacAuxAnnexID" type="xs:int" minOccurs="0"/>
      <xs:element name="FacDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="BeginDate" type="xs:date"/>
      <xs:element name="EndDate" type="xs:date"/>
      <xs:element name="InwardLeaderFlag" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="InwardPlacement" type="xs:double" minOccurs="0"/>
      <xs:element name="Status" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="InsurerGroups" type="InsurerGroups_Type" minOccurs="0"/>
      <xs:element name="Fees" type="FacFees_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Facultatives_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Facultative" type="Facultative_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FilterCriteria_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="FilterCriterion" type="FilterCriterion_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FilterCriterion_Type">
    <xs:attribute use="optional" name="operation" type="FILTER_OPERATION_TYPE"/>
    <xs:attribute use="required" name="value" type="xs:string"/>
    <xs:attribute use="required" name="field" type="xs:string"/>
    <xs:attribute name="conjunction" type="FILTER_CONJUNCTION_TYPE"/>
  </xs:complexType>
  <xs:complexType name="Fund_Type">
    <xs:sequence>
      <xs:element name="FundID" type="xs:string"/>
      <xs:element name="FundName" type="xs:string" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element name="CoverType" type="xs:string" minOccurs="0"/>
      <xs:element name="Percentage" type="PERCENT_TYPE"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Funds_Type">
    <xs:sequence>
      <xs:element name="Fund" type="Fund_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Guilty_Type">
    <xs:sequence>
      <xs:element name="GuiltyPerson" type="Others_Type" minOccurs="0"/>
      <xs:element name="InjuredObject" type="ObjectData_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="PolicyNo"/>
      <xs:element name="RegressReason" type="xs:string" minOccurs="0"/>
      <xs:element ref="InsurerID" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Indemnities_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Indemnity" type="Indemnity_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Indemnity_Type">
    <xs:sequence>
      <xs:element name="FranchiseType" type="xs:string" minOccurs="0"/>
      <xs:element name="FranchiseDimension" type="xs:string" minOccurs="0"/>
      <xs:element name="FranchiseValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseMin" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseMax" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseCurrency" type="xs:string" minOccurs="0"/>
      <xs:element name="FranchiseClaim" type="xs:string"/>
      <xs:element name="IndemnityPercent" type="PERCENT_TYPE" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjObject_Type">
    <xs:sequence>
      <xs:element ref="ObjectID"/>
      <xs:element name="InitialReserve" type="xs:decimal" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Currency"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjObjects_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InjObject" type="InjObject_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjuredObjectData_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ClaimObjSeq"/>
      <xs:choice>
        <xs:element ref="ObjectID" minOccurs="0"/>
        <xs:element name="ObjectData" type="ObjectData_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element name="InitialReserve" type="xs:decimal" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element name="InsuredData" type="InsuredData_Type" minOccurs="0"/>
      <!--xs:element name="AnnuityData" type="AnnuityData_Type" minOccurs="0"/-->
      <xs:element name="Driver" type="ClaimObjDriver_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjuredObject_Type">
    <xs:sequence>
      <xs:element name="ObjectData" type="InsuredEntity_Type" minOccurs="0"/>
      <xs:element ref="ClaimObjSeq" minOccurs="0"/>
      <xs:element name="InitialReserve" type="xs:decimal" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element name="InsuredData" type="InsuredData_Type" minOccurs="0"/>
      <!--xs:element name="AnnuityData" type="AnnuityData_Type" minOccurs="0"/-->
      <xs:element name="Driver" type="ClaimObjDriver_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
      <xs:element name="Evaluations" type="Evaluations_Type" minOccurs="0"/>
      <xs:element name="Expenses" type="ClaimExpenses_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjuredObjectsData_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InjuredObject" type="InjuredObjectData_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InjuredObjects_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InjuredObject" type="InjuredObject_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Installment_Type">
    <xs:sequence>
      <xs:element name="AnnexID" type="xs:long"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element name="CoveredFrom" type="xs:dateTime" minOccurs="1"/>
      <xs:element name="CoveredTo" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="DateToPay" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="AccountState" type="xs:int" minOccurs="0"/>
      <xs:element name="AccountType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Installments_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Installment" type="Installment_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsuredData_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="InsuredObjectID"/>
        <xs:element ref="CustomOID"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="GrcID"/>
      <xs:element minOccurs="0" ref="CoverCode"/>
      <xs:element minOccurs="0" ref="RiskType"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsuredEntityChange_Type">
    <xs:annotation>
      <xs:documentation>Insured entity represents what exactly is insured
                              - an object (car, property, train, etc.) or a
                              person (for life insurance). Depending on the type
                              of the object, the structure may vary, which is
                              defined by choice between generic object
                              structures. Besides the predefiend fields, every
                              object can have a varying number of additional
                              fields (flex fields), which are configured at
                              system installation time for a certain client. The
                              fields are described by "any" element in the XML
                              structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ObjectID" type="xs:integer" minOccurs="0"/>
      <xs:element name="ObjectType" type="xs:integer" minOccurs="0"/>
      <xs:element ref="Owners" minOccurs="0"/>
      <xs:element minOccurs="0" ref="RelatedPersons"/>
      <xs:choice>
        <xs:element name="OAccidentInsured" type="ChngAccidentInsured_Type">
          <xs:annotation>
            <xs:documentation>Insured for an accident. Describes
                                          insureds by an individual. The
                                          predefined fields are: - PersonID: ID
                                          for person in p_people table; - Age:
                                          age of the person - ProfID: profession
                                          ID from the list of professions</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OAdditionalEquipment" type="ChngAdditionalEquipment_Type">
          <xs:annotation>
            <xs:documentation>Additional equipment of various
                                          vehicles. Mainly for cars. -
                                          ParentObjectID: Vehicle code; -
                                          EquipmentType: Equipment type code -
                                          Model: Equipment model - SerialNo -
                                          IVOver: Flag. Shows if the insured
                                          value should be accumulated; -
                                          AvValue: Average value; - EquipmentKind</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OAgriculture" type="ChngAgriculture_Type">
          <xs:annotation>
            <xs:documentation>Data about the insured cultivations. -
                                          CultureType: Cultivation type; -
                                          CultureSubtype: Subcultivation type; -
                                          Area: The area, sowed by the
                                          cultivation(dka); - RegioID: The code
                                          of the area, sowed by the cultivation;
                                          - CadastNum: The number of the area in
                                          the public registries, sowed by the
                                          cultivation</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OAnimal" type="ChngAnimal_Type">
          <xs:annotation>
            <xs:documentation>Information about the insured animals.
                                          - AnimalType: Animal type in
                                          accordance of the internal
                                          nomenclature; - AnimalSubtype:Animal
                                          subtype in accordance of the internal
                                          nomenclature; - Breed: Animal breed -
                                          Name - Distinction:Distinguishing
                                          feachers</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OCar" type="ChngCar_Type">
          <xs:annotation>
            <xs:documentation>Contains the data about cars with
                                          motorcar place accident insurance. -
                                          RegNo:THE REGISTRATION NUMBER OF THE
                                          VEHICLE; - CarType: A car type in
                                          accordance of the internal
                                          nomenclature; - Model: Car model; -
                                          Make: Car maker; - Modification -
                                          Chassis: Chassis number - Engine:
                                          Engine number - CCMTon: Engine
                                          power(weight-TON); - CarUsage: Car
                                          usage-in accordance of the internal
                                          nomenclature; - SeatsNum: Number of
                                          seats; - DoorNum: Number of doors; -
                                          PaintType: Paint type-common or
                                          metalic; - ProdYear: Year of
                                          production; - CarAge: Age; - ProdType:
                                          Production type-Eastern or Western ; -
                                          CarColo - RegType - EnginePower -
                                          BonusMalus - Tonage - EngineType -
                                          FuelType - DriveType - CarBodyType -
                                          WindowColor - Modified - Notes</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OCargo" type="ChngCargo_Type">
          <xs:annotation>
            <xs:documentation>Description of the insured goods in
                                          the subscription policies. -
                                          CargoType: Goods type in accordance
                                          with a internal nomenclature; -
                                          CargoSubtype - CargoPolicyType -
                                          Description - PackingType: Package
                                          type in accordance with a internal
                                          nomenclature; - BoxNumber: Number of
                                          the packages; - TeritoryID: Teritory
                                          ID in accordance with a internal
                                          nomenclature; - FromPlace: The start
                                          place of the route; - ToPlace: The end
                                          place of the route; - Via: The place,
                                          via which is the route; - Destination:
                                          Final destination; - TransportType -
                                          VehicleType - FreightPrc: Freight(% to
                                          get more expensive as a result of
                                          transportation); - FreightDim -
                                          ShipmentDoc: Shipment document; -
                                          ToOrder - AverageAgent - Distance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OInsuredGroups" type="ChngInsuredGroups_Type">
          <xs:annotation>
            <xs:documentation>Group Insurance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OLiability" type="ChngLiability_Type">
          <xs:annotation>
            <xs:documentation>General purpose object. Mainly used
                                          for liability insurance. - LiabDesc:
                                          Liability description; - LiabType:
                                          Liability type; - AddressID</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OLoss" type="ChngLoss_Type">
          <xs:annotation>
            <xs:documentation>Claim inventory. Contains description
                                          of losses when claim</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OPlane" type="ChngPlane_Type">
          <xs:annotation>
            <xs:documentation>Planes. - Make: Plain maker; - RegNo:
                                          Registration number; - ProdNo: Number
                                          given by the producer - ProdYear: Year
                                          of production - CCMTon: Tonage -
                                          SeatsNum: Number of seats -
                                          PlainHistory: Free text for plane
                                          history</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OProperty" type="ChngProperty_Type">
          <xs:annotation>
            <xs:documentation>Insured property. - PropertyKind; -
                                          PropertyType: Property
                                          type(estate/movable) - Name: Name
                                          (property description) - AddressID: ID
                                          of address structure</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OPropBri" type="ChngPropBri_Type">
          <xs:annotation>
            <xs:documentation>Insured building. Contains data about
                                          Insured building, typically building
                                          in construction. - Construction; -
                                          Area: area in square meters; -
                                          AddressID: ID of address structure; -
                                          BriDescription: The description of the
                                          insured object</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OShip" type="ChngShip_Type">
          <xs:annotation>
            <xs:documentation>Ships. - Name; - ShipClass ; -
                                          ShipType; - RegNo: Registration
                                          number; - RegPort: Port of
                                          registration; - GrossTonage: Gross
                                          register ton; - NetTonage: Net
                                          register ton; - OwnerClass; - Length;
                                          - Height; - Wide; - Wade; -
                                          DeadWeight; - Region: Insured region;
                                          - PreviousInsurer; - PassengerNum; -
                                          CrewNum; - LastMaintenanceDate; -
                                          Engine: Engine info; - ProdInfo:
                                          Production info; - ProdYear: Year of
                                          production; - Producer; - ClaimInfo:
                                          Previous claim info.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OTrain" type="ChngTrain_Type">
          <xs:annotation>
            <xs:documentation>Trains.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsuredEntity_Type">
    <xs:annotation>
      <xs:documentation>Insured entity represents what exactly is insured
                              - an object (car, property, train, etc.) or a
                              person (for life insurance). Depending on the type
                              of the object, the structure may vary, which is
                              defined by choice between generic object
                              structures. Besides the predefiend fields, every
                              object can have a varying number of additional
                              fields (flex fields), which are configured at
                              system installation time for a certain client. The
                              fields are described by "any" element in the XML
                              structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ObjectID" type="xs:integer" minOccurs="0"/>
      <xs:element name="ObjectType" type="xs:integer"/>
      <xs:element ref="Owners" minOccurs="0"/>
      <xs:element minOccurs="0" ref="RelatedPersons"/>
      <xs:choice>
        <xs:element ref="OAccidentInsured">
          <xs:annotation>
            <xs:documentation>Insured for an accident. Describes
                                          insureds by an individual. The
                                          predefined fields are: - PersonID: ID
                                          for person in p_people table; - Age:
                                          age of the person - ProfID: profession
                                          ID from the list of professions</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAdditionalEquipment">
          <xs:annotation>
            <xs:documentation>Additional equipment of various
                                          vehicles. Mainly for cars. -
                                          ParentObjectID: Vehicle code; -
                                          EquipmentType: Equipment type code -
                                          Model: Equipment model - SerialNo -
                                          IVOver: Flag. Shows if the insured
                                          value should be accumulated; -
                                          AvValue: Average value; - EquipmentKind</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAgriculture">
          <xs:annotation>
            <xs:documentation>Data about the insured cultivations. -
                                          CultureType: Cultivation type; -
                                          CultureSubtype: Subcultivation type; -
                                          Area: The area, sowed by the
                                          cultivation(dka); - RegioID: The code
                                          of the area, sowed by the cultivation;
                                          - CadastNum: The number of the area in
                                          the public registries, sowed by the
                                          cultivation</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAnimal">
          <xs:annotation>
            <xs:documentation>Information about the insured animals.
                                          - AnimalType: Animal type in
                                          accordance of the internal
                                          nomenclature; - AnimalSubtype:Animal
                                          subtype in accordance of the internal
                                          nomenclature; - Breed: Animal breed -
                                          Name - Distinction:Distinguishing
                                          feachers</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OCar">
          <xs:annotation>
            <xs:documentation>Contains the data about cars with
                                          motorcar place accident insurance. -
                                          RegNo:THE REGISTRATION NUMBER OF THE
                                          VEHICLE; - CarType: A car type in
                                          accordance of the internal
                                          nomenclature; - Model: Car model; -
                                          Make: Car maker; - Modification -
                                          Chassis: Chassis number - Engine:
                                          Engine number - CCMTon: Engine
                                          power(weight-TON); - CarUsage: Car
                                          usage-in accordance of the internal
                                          nomenclature; - SeatsNum: Number of
                                          seats; - DoorNum: Number of doors; -
                                          PaintType: Paint type-common or
                                          metalic; - ProdYear: Year of
                                          production; - CarAge: Age; - ProdType:
                                          Production type-Eastern or Western ; -
                                          CarColo - RegType - EnginePower -
                                          BonusMalus - Tonage - EngineType -
                                          FuelType - DriveType - CarBodyType -
                                          WindowColor - Modified - Notes</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OCargo">
          <xs:annotation>
            <xs:documentation>Description of the insured goods in
                                          the subscription policies. -
                                          CargoType: Goods type in accordance
                                          with a internal nomenclature; -
                                          CargoSubtype - CargoPolicyType -
                                          Description - PackingType: Package
                                          type in accordance with a internal
                                          nomenclature; - BoxNumber: Number of
                                          the packages; - TeritoryID: Teritory
                                          ID in accordance with a internal
                                          nomenclature; - FromPlace: The start
                                          place of the route; - ToPlace: The end
                                          place of the route; - Via: The place,
                                          via which is the route; - Destination:
                                          Final destination; - TransportType -
                                          VehicleType - FreightPrc: Freight(% to
                                          get more expensive as a result of
                                          transportation); - FreightDim -
                                          ShipmentDoc: Shipment document; -
                                          ToOrder - AverageAgent - Distance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OInsuredGroups">
          <xs:annotation>
            <xs:documentation>Group Insurance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OLiability">
          <xs:annotation>
            <xs:documentation>General purpose object. Mainly used
                                          for liability insurance. - LiabDesc:
                                          Liability description; - LiabType:
                                          Liability type; - AddressID</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OLoss">
          <xs:annotation>
            <xs:documentation>Claim inventory. Contains description
                                          of losses when claim</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OPlane">
          <xs:annotation>
            <xs:documentation>Planes. - Make: Plain maker; - RegNo:
                                          Registration number; - ProdNo: Number
                                          given by the producer - ProdYear: Year
                                          of production - CCMTon: Tonage -
                                          SeatsNum: Number of seats -
                                          PlainHistory: Free text for plane
                                          history</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OProperty">
          <xs:annotation>
            <xs:documentation>Insured property. - PropertyKind; -
                                          PropertyType: Property
                                          type(estate/movable) - Name: Name
                                          (property description) - AddressID: ID
                                          of address structure</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OPropBri">
          <xs:annotation>
            <xs:documentation>Insured building. Contains data about
                                          Insured building, typically building
                                          in construction. - Construction; -
                                          Area: area in square meters; -
                                          AddressID: ID of address structure; -
                                          BriDescription: The description of the
                                          insured object</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OShip">
          <xs:annotation>
            <xs:documentation>Ships. - Name; - ShipClass ; -
                                          ShipType; - RegNo: Registration
                                          number; - RegPort: Port of
                                          registration; - GrossTonage: Gross
                                          register ton; - NetTonage: Net
                                          register ton; - OwnerClass; - Length;
                                          - Height; - Wide; - Wade; -
                                          DeadWeight; - Region: Insured region;
                                          - PreviousInsurer; - PassengerNum; -
                                          CrewNum; - LastMaintenanceDate; -
                                          Engine: Engine info; - ProdInfo:
                                          Production info; - ProdYear: Year of
                                          production; - Producer; - ClaimInfo:
                                          Previous claim info.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OTrain">
          <xs:annotation>
            <xs:documentation>Trains.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Insured_Type">
    <xs:annotation>
      <xs:documentation>A structure holding details for insured object or
                              person. The contained data elements are Insured
                              Entity (person or object), Insured Value and Covers</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="Insured_Ref_Group" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="SubGroupID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="PolicyNo"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element ref="ObjectNum" minOccurs="0"/>
      <xs:element ref="InsuredEntity"/>
      <xs:element ref="InsuredAmount"/>
      <xs:element ref="Currency"/>
      <xs:element name="ActualValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="AVCurrency" type="xs:string" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
      <xs:element name="IVBase" type="xs:string" minOccurs="0"/>
      <xs:element name="IVType" type="xs:string" minOccurs="0"/>
      <xs:element name="PaymentDuration" type="xs:decimal" minOccurs="0"/>
      <xs:element name="DurDimension" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskClass" type="xs:int" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element ref="Supplementaries" minOccurs="0"/>
      <xs:choice>
        <xs:element maxOccurs="1" minOccurs="0" ref="CoverPackages"/>
        <xs:element maxOccurs="1" minOccurs="0" ref="Covers"/>
      </xs:choice>
      <xs:element ref="Discounts" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Drivers"/>
      <!--xs:element name="ULFundStructure" type="ULFundStructure_Type" minOccurs="0"/-->
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
      <xs:element name="Limits" type="Limits_Type" minOccurs="0"/>
      <xs:element name="LettersOfCredit" type="OperLettersOfCredit_Type" minOccurs="0"/>
      <xs:element name="Territories" type="Territories_Type" minOccurs="0"/>
      <xs:element name="Participants" type="Participants_Type" minOccurs="0"/>
      <xs:element name="PreexistingConditions" type="PreexistingConditions_Type" minOccurs="0"/>
      <xs:element name="ApprovalRequirements" type="PolicyParRequirements_Type" minOccurs="0"/>
      <xs:element name="GeographicalAreas" type="PolicyGeogAreas_Type" minOccurs="0"/>
      <xs:element name="PolicyDiagnoses" type="PolicyDiagnoses_Type" minOccurs="0"/>
      <xs:element name="PolicyServices" type="PolicyServices_Type" minOccurs="0"/>
      <xs:element name="Drugs" type="PolicyDrugs_Type" minOccurs="0"/>
      <xs:element name="Networks" type="PolicyNetworks_Type" minOccurs="0"/>
      <xs:element name="Providers" type="PolicyProviders_Type" minOccurs="0"/>
      <xs:element name="Gatekeepers" type="PolicyGatekeepers_Type" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="riId" type="xs:int"/>
  </xs:complexType>
  <xs:complexType name="Insureds_Type">
    <xs:sequence minOccurs="1">
      <xs:element maxOccurs="unbounded" name="Insured" type="Insured_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsurerGroup_Type">
    <xs:sequence>
      <xs:element name="InsurerGroupID" type="xs:long" minOccurs="0"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Coverages" type="Coverages_Type"/>
      <xs:element name="Insurers" type="Insurers_Type" minOccurs="0"/>
      <xs:element name="Fees" type="FacFees_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsurerGroups_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InsurerGroup" type="InsurerGroup_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsurerSplit_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="InsurerID"/>
        <xs:group ref="PID_Data_Group"/>
      </xs:choice>
      <xs:element name="InsurerName" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskShare" type="xs:double"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Insurer_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="InsurerID"/>
        <xs:group ref="PID_Data_Group"/>
      </xs:choice>
      <xs:element name="InsurerName" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskShare" type="xs:double"/>
      <xs:element name="LeaderFlag" type="BOOLEAN_STRING_TYPE"/>
      <xs:element name="ShareOffered" type="xs:double" minOccurs="0"/>
      <xs:element name="ShareWritten" type="xs:double" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="InsurersSplit" type="InsurersSplit_Type" minOccurs="0"/>
      <xs:element name="Fees" type="FacFees_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InsurersSplit_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InsurerSplit" type="InsurerSplit_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Insurers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Insurer" type="Insurer_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvAccount_Type">
    <xs:sequence>
      <xs:element name="AccountID" type="xs:integer"/>
      <xs:element ref="AnnexID"/>
      <xs:element name="AccountState" type="xs:string"/>
      <xs:element name="AccountStateReason" type="xs:string" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string"/>
      <xs:element name="InsuredManID" type="xs:integer"/>
      <xs:element name="AccountHolder" type="xs:integer"/>
      <xs:element name="CoverType" type="xs:string"/>
      <xs:element ref="GrcID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Funds" type="Funds_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvAccountPPlan_Type">
    <xs:sequence>
      <xs:element name="PPlanID" minOccurs="0" type="xs:integer"/>
      <xs:element name="AccountID" minOccurs="0" type="xs:integer"/>
      <xs:element ref="PolicyID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element name="AccountPaymentType" minOccurs="0" type="xs:string"/>
      <xs:element name="AccountFractType" type="xs:string"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element name="Period" type="xs:integer"/>
      <xs:element name="DueDate" type="xs:date"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvAccountPPlans_Type">
    <xs:sequence>
      <xs:element name="Contribution" type="InvAccountPPlan_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvCovers_Type">
    <xs:sequence>
      <xs:element name="Cover" type="InvCover_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvCover_Type">
    <xs:sequence>
      <xs:element name="CoverType" type="xs:string" maxOccurs="1"/>
      <xs:element ref="ULFunds"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvestmentAccount_Type">
    <xs:sequence>
      <xs:element ref="InsuredObjectID"/>
      <xs:element name="Covers" type="InvCovers_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LetterOfCredit_Type">
    <xs:sequence>
      <xs:element name="LcID" type="xs:long" minOccurs="0"/>
      <xs:element name="ReferenceNo" type="xs:string"/>
      <xs:element name="IssueDate" type="xs:date"/>
      <xs:element name="BeginDate" type="xs:date"/>
      <xs:element name="EndDate" type="xs:date"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element name="UsedAmount" type="xs:double" minOccurs="0"/>
      <xs:element name="LinkAmount" type="xs:double" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string"/>
      <xs:element name="CurrencyRate" type="xs:integer"/>
      <xs:element name="IssuingBank" type="xs:string" minOccurs="0"/>
      <xs:element name="AdvisingBank" type="xs:string" minOccurs="0"/>
      <xs:element name="InsuranceReqs" type="xs:string" minOccurs="0"/>
      <xs:element name="Status" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LettersOfCredit_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="LetterOfCredit" type="LetterOfCredit_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Limit_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="InsuredObjectID"/>
      <xs:element minOccurs="0" ref="CoverCode"/>
      <xs:element minOccurs="0" ref="GrcID"/>
      <xs:element minOccurs="0" ref="RiskType"/>
      <xs:element minOccurs="0" ref="LossType"/>
      <xs:element name="LimitType" type="xs:string"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element name="Dimension" type="LIMIT_DIMENSION_TYPE" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Limits_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Limit" type="Limit_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LinkedCover_Type">
    <xs:sequence>
      <xs:element ref="CoverCode"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LinkedCovers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Cover" type="LinkedCover_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LinkedInsured_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="InsuredObjectID"/>
        <xs:element name="InsuredRef" type="xs:int"/>
      </xs:choice>
      <xs:element name="Covers" type="LinkedCovers_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LinkedInsureds_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Insured" type="LinkedInsured_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyCoverPackage_Type">
    <xs:sequence>
      <xs:element name="PackageID" type="xs:string"/>
      <xs:element name="PackageName" type="xs:string" minOccurs="0"/>
      <xs:element name="Covers" maxOccurs="1" type="ModifyCovers_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyCoverPackages_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="CoverPackage" type="ModifyCoverPackage_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyCover_Type">
    <xs:sequence>
      <xs:element ref="CoverCode"/>
      <xs:element minOccurs="0" ref="ObjectNum"/>
      <xs:element name="CoverDescription" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="InsuredAmount"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
      <xs:element name="State" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="SeparateDuration"/>
      <xs:element minOccurs="0" ref="Premium"/>
      <xs:element name="PremiumType" type="xs:string" minOccurs="0"/>
      <xs:element ref="GrcID" minOccurs="0"/>
      <xs:element ref="GrcOrgID" minOccurs="0"/>
      <xs:element ref="GrcRefID" minOccurs="0"/>
      <xs:element ref="SliceType" minOccurs="0"/>
      <xs:element ref="CoverLOB" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="SubGroupID" minOccurs="0"/>
      <xs:element ref="TariffRule" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Risks"/>
      <xs:element ref="ULFunds" minOccurs="0"/>
      <xs:element ref="Contributions" minOccurs="0"/>
      <xs:element name="Endorsements" type="Endorsements_Type" minOccurs="0"/>
      <xs:element name="Territories" type="Territories_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Discounts"/>
      <xs:element name="PolicyDocuments" type="PolicyDocs_Type" minOccurs="0"/>
      <xs:element name="Indemnities" type="Indemnities_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Taxes"/>
      <xs:element name="Limits" type="Limits_Type" minOccurs="0"/>
      <xs:element name="GeographicalAreas" type="PolicyGeogAreas_Type" minOccurs="0"/>
      <xs:element name="Networks" minOccurs="0" type="PolicyNetworks_Type"/>
      <xs:element name="Providers" type="PolicyProviders_Type" minOccurs="0"/>
      <xs:element name="Gatekeepers" type="PolicyGatekeepers_Type" minOccurs="0"/>
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyCovers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Cover" type="ModifyCover_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyInsuredData_Type">
    <xs:sequence>
      <xs:element maxOccurs="1" ref="InsuredObjectID" minOccurs="1"/>
      <xs:element minOccurs="0" ref="CoverCode"/>
      <xs:element maxOccurs="1" minOccurs="0" ref="RiskType"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyInsuredEntity_Type">
    <xs:sequence>
      <xs:element name="ObjectID" type="xs:integer" minOccurs="1"/>
      <xs:element name="ObjectType" type="xs:integer" minOccurs="0"/>
      <xs:element ref="Owners" minOccurs="0"/>
      <xs:element ref="RelatedPersons" minOccurs="0"/>
      <xs:choice>
        <xs:element name="OAccidentInsured" type="ChngAccidentInsured_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Insured for an accident. Describes
                                          insureds by an individual. The
                                          predefined fields are: - PersonID: ID
                                          for person in p_people table; - Age:
                                          age of the person - ProfID: profession
                                          ID from the list of professions</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OAdditionalEquipment" type="ChngAdditionalEquipment_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Additional equipment of various
                                          vehicles. Mainly for cars. -
                                          ParentObjectID: Vehicle code; -
                                          EquipmentType: Equipment type code -
                                          Model: Equipment model - SerialNo -
                                          IVOver: Flag. Shows if the insured
                                          value should be accumulated; -
                                          AvValue: Average value; - EquipmentKind</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ChngAgriculture" type="ChngAgriculture_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Data about the insured cultivations. -
                                          CultureType: Cultivation type; -
                                          CultureSubtype: Subcultivation type; -
                                          Area: The area, sowed by the
                                          cultivation(dka); - RegioID: The code
                                          of the area, sowed by the cultivation;
                                          - CadastNum: The number of the area in
                                          the public registries, sowed by the
                                          cultivation</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OAnimal" type="ChngAnimal_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Information about the insured animals.
                                          - AnimalType: Animal type in
                                          accordance of the internal
                                          nomenclature; - AnimalSubtype:Animal
                                          subtype in accordance of the internal
                                          nomenclature; - Breed: Animal breed -
                                          Name - Distinction:Distinguishing
                                          feachers</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OCar" type="ChngCar_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Contains the data about cars with
                                          motorcar place accident insurance. -
                                          RegNo:THE REGISTRATION NUMBER OF THE
                                          VEHICLE; - CarType: A car type in
                                          accordance of the internal
                                          nomenclature; - Model: Car model; -
                                          Make: Car maker; - Modification -
                                          Chassis: Chassis number - Engine:
                                          Engine number - CCMTon: Engine
                                          power(weight-TON); - CarUsage: Car
                                          usage-in accordance of the internal
                                          nomenclature; - SeatsNum: Number of
                                          seats; - DoorNum: Number of doors; -
                                          PaintType: Paint type-common or
                                          metalic; - ProdYear: Year of
                                          production; - CarAge: Age; - ProdType:
                                          Production type-Eastern or Western ; -
                                          CarColo - RegType - EnginePower -
                                          BonusMalus - Tonage - EngineType -
                                          FuelType - DriveType - CarBodyType -
                                          WindowColor - Modified - Notes</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OCargo" type="ChngCargo_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Description of the insured goods in
                                          the subscription policies. -
                                          CargoType: Goods type in accordance
                                          with a internal nomenclature; -
                                          CargoSubtype - CargoPolicyType -
                                          Description - PackingType: Package
                                          type in accordance with a internal
                                          nomenclature; - BoxNumber: Number of
                                          the packages; - TeritoryID: Teritory
                                          ID in accordance with a internal
                                          nomenclature; - FromPlace: The start
                                          place of the route; - ToPlace: The end
                                          place of the route; - Via: The place,
                                          via which is the route; - Destination:
                                          Final destination; - TransportType -
                                          VehicleType - FreightPrc: Freight(% to
                                          get more expensive as a result of
                                          transportation); - FreightDim -
                                          ShipmentDoc: Shipment document; -
                                          ToOrder - AverageAgent - Distance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OInsuredGroups" type="ChngInsuredGroups_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Group Insurance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OLiability" type="ChngLiability_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>General purpose object. Mainly used
                                          for liability insurance. - LiabDesc:
                                          Liability description; - LiabType:
                                          Liability type; - AddressID</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OLoss" type="ChngLoss_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Claim inventory. Contains description
                                          of losses when claim</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OPlane" type="ChngPlane_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Planes. - Make: Plain maker; - RegNo:
                                          Registration number; - ProdNo: Number
                                          given by the producer - ProdYear: Year
                                          of production - CCMTon: Tonage -
                                          SeatsNum: Number of seats -
                                          PlainHistory: Free text for plane
                                          history</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OProperty" type="ChngProperty_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Insured property. - PropertyKind; -
                                          PropertyType: Property
                                          type(estate/movable) - Name: Name
                                          (property description) - AddressID: ID
                                          of address structure</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OPropBri" type="ChngPropBri_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Insured building. Contains data about
                                          Insured building, typically building
                                          in construction. - Construction; -
                                          Area: area in square meters; -
                                          AddressID: ID of address structure; -
                                          BriDescription: The description of the
                                          insured object</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OShip" maxOccurs="1" type="ChngShip_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Ships. - Name; - ShipClass ; -
                                          ShipType; - RegNo: Registration
                                          number; - RegPort: Port of
                                          registration; - GrossTonage: Gross
                                          register ton; - NetTonage: Net
                                          register ton; - OwnerClass; - Length;
                                          - Height; - Wide; - Wade; -
                                          DeadWeight; - Region: Insured region;
                                          - PreviousInsurer; - PassengerNum; -
                                          CrewNum; - LastMaintenanceDate; -
                                          Engine: Engine info; - ProdInfo:
                                          Production info; - ProdYear: Year of
                                          production; - Producer; - ClaimInfo:
                                          Previous claim info.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OTrain" type="ChngTrain_Type" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Trains.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ModifyInsured_Type">
    <xs:annotation>
      <xs:documentation>A structure holding details for insured object or
                              person. The contained data elements are Insured
                              Entity (person or object), Insured Value and Covers</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="Insured_Ref_Group" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="1"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="SubGroupID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element ref="ObjectNum" minOccurs="0"/>
      <xs:element name="InsuredEntity" type="ModifyInsuredEntity_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="InsuredAmount"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element name="ActualValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="AVCurrency" type="xs:string" minOccurs="0"/>
      <xs:element name="IVBase" type="xs:string" minOccurs="0"/>
      <xs:element name="IVType" type="xs:string" minOccurs="0"/>
      <xs:element name="PaymentDuration" type="xs:decimal" minOccurs="0"/>
      <xs:element name="DurDimension" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element ref="Supplementaries" minOccurs="0"/>
      <xs:choice>
        <xs:element name="CoverPackages" maxOccurs="1" type="ModifyCoverPackages_Type" minOccurs="0"/>
        <xs:element name="Covers" maxOccurs="1" type="ModifyCovers_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="Discounts"/>
      <xs:element minOccurs="0" ref="Drivers"/>
      <!--xs:element name="ULFundStructure" type="ULFundStructure_Type" minOccurs="0"/-->
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Documents" type="DocDocuments_Type" minOccurs="0"/>
      <xs:element name="Limits" type="Limits_Type" minOccurs="0"/>
      <xs:element name="LettersOfCredit" type="OperLettersOfCredit_Type" minOccurs="0"/>
      <xs:element name="Territories" type="Territories_Type" minOccurs="0"/>
      <xs:element name="Participants" type="Participants_Type" minOccurs="0"/>
      <xs:element name="PreexistingConditions" type="PreexistingConditions_Type" minOccurs="0"/>
      <xs:element name="ApprovalRequirements" type="PolicyParRequirements_Type" minOccurs="0"/>
      <xs:element name="GeographicalAreas" type="PolicyGeogAreas_Type" minOccurs="0"/>
      <xs:element name="PolicyDiagnoses" type="PolicyDiagnoses_Type" minOccurs="0"/>
      <xs:element name="PolicyServices" type="PolicyServices_Type" minOccurs="0"/>
      <xs:element name="Drugs" type="PolicyDrugs_Type" minOccurs="0"/>
      <xs:element name="Networks" minOccurs="0" type="PolicyNetworks_Type"/>
      <xs:element name="Providers" type="PolicyProviders_Type" minOccurs="0"/>
      <xs:element name="Gatekeepers" type="PolicyGatekeepers_Type" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="riId" type="xs:int"/>
  </xs:complexType>
  <xs:complexType name="NewCreditor_Type">
    <xs:sequence>
      <xs:group ref="People_Data_Group"/>
      <xs:element minOccurs="0" ref="Notes"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OAccidentInsured_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="PersonID" type="xs:long" minOccurs="1"/>
        <xs:element ref="PID"/>
        <xs:group ref="People_Data_Group"/>
      </xs:choice>
      <xs:element name="Age" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccinsType" type="xs:string" minOccurs="0"/>
      <xs:element name="AccinsSubtype" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for insured.
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Gender" type="GENDER_VALUE_TYPE" minOccurs="0"/>
      <xs:element name="DependentOn" minOccurs="0" type="DependentOn_Type">
        <xs:annotation>
          <xs:documentation>Can be populated with PID of main member</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OAdditionalEquipment_Type">
    <xs:sequence>
      <xs:element name="ParentObjectID" type="xs:string"/>
      <xs:element name="EquipmentType" type="xs:string"/>
      <xs:element name="EquipmentSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Model" type="xs:string"/>
      <xs:element name="SerialNo" type="xs:string"/>
      <xs:element name="IVOver" type="BOOLEAN_NUMBER_TYPE" minOccurs="0"/>
      <xs:element name="AvValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element name="EquipmentKind" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for additional
                                      equipment (FiledName | Description |
                                      Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OAgriculture_Type">
    <xs:sequence>
      <xs:element name="CultureType" type="xs:string"/>
      <xs:element name="CultureSubtype" type="xs:string"/>
      <xs:element name="Area" type="xs:decimal"/>
      <xs:element name="RegionID" type="xs:integer"/>
      <xs:element name="CadastNum" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for agriculture
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OAnimal_Type">
    <xs:sequence>
      <xs:element name="AnimalType" type="xs:string"/>
      <xs:element name="AnimalSubtype" type="xs:string"/>
      <xs:element name="Breed" type="xs:string" minOccurs="0"/>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Distinction" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for animal
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OCar_Type">
    <xs:sequence>
      <xs:element name="RegNo" type="xs:string"/>
      <xs:element name="CarType" type="xs:string"/>
      <xs:element name="CarSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Model" type="xs:string" minOccurs="1"/>
      <xs:element name="Make" type="xs:string" minOccurs="1"/>
      <xs:element name="Modification" type="xs:string" minOccurs="0"/>
      <xs:element name="Chassis" type="xs:string" minOccurs="1"/>
      <xs:element name="Engine" type="xs:string" minOccurs="1"/>
      <xs:element name="CCMTon" type="xs:decimal" minOccurs="0"/>
      <xs:element name="CarUsage" type="xs:integer" minOccurs="0"/>
      <xs:element name="SeatsNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="DoorNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="PaintType" type="xs:string" minOccurs="1"/>
      <xs:element name="ProdYear" type="xs:integer" minOccurs="0"/>
      <xs:element name="CarAge" type="xs:decimal" minOccurs="0"/>
      <xs:element name="ProdType" type="xs:string"/>
      <xs:element name="CarColor" type="xs:string" minOccurs="0"/>
      <xs:element name="RegType" type="xs:string" minOccurs="0"/>
      <xs:element name="EnginePower" type="xs:decimal" minOccurs="0"/>
      <xs:element name="BonusMalus" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Tonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="EngineType" type="xs:string" minOccurs="0"/>
      <xs:element name="FuelType" type="xs:string" minOccurs="0"/>
      <xs:element name="DriveType" type="xs:string" minOccurs="0"/>
      <xs:element name="CarBodyType" type="xs:string" minOccurs="0"/>
      <xs:element name="WindowColor" type="xs:string" minOccurs="0"/>
      <xs:element name="Modified" type="BOOLEAN_NUMBER_TYPE"/>
      <xs:element minOccurs="0" ref="Notes"/>
      <xs:element name="VehicleKey" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for car
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupplementaryEquipment" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="OAdditionalEquipment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OCargo_Type">
    <xs:sequence>
      <xs:element name="CargoType" type="xs:string"/>
      <xs:element name="CargoSubtype" type="xs:string"/>
      <xs:element name="CargoPolicyType" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string"/>
      <xs:element name="PackingType" type="xs:integer"/>
      <xs:element name="BoxNumber" type="xs:integer" minOccurs="0"/>
      <xs:element name="TeritoryID" type="xs:integer"/>
      <xs:element name="FromPlace" type="xs:string"/>
      <xs:element name="ToPlace" type="xs:string"/>
      <xs:element name="Via" type="xs:string" minOccurs="0"/>
      <xs:element maxOccurs="1" name="Destination" type="xs:string" minOccurs="0"/>
      <xs:element name="TransportType" type="xs:integer"/>
      <xs:element name="VehicleType" type="xs:integer" minOccurs="0"/>
      <xs:element name="ShipmentDoc" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipmentDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ToOrder" type="xs:string" minOccurs="0"/>
      <xs:element name="AverageAgent" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Distance" type="xs:string" minOccurs="0"/>
      <xs:element name="TransportMeans" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element name="TermsOfSale" type="TermsOfSale_Type" minOccurs="0"/>
      <xs:element name="Vehicles" type="OVehicles_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for cargo
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OInsuredGroups_Type">
    <xs:sequence>
      <xs:element name="GrpType" type="xs:string" minOccurs="0"/>
      <xs:element name="GrpSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for insured
                                      groups (FiledName | Description | Product
                                      Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OLiability_Type">
    <xs:sequence>
      <xs:element name="LiabDesc" type="xs:string"/>
      <xs:element name="LiabType" type="xs:string"/>
      <xs:element name="LiabSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:choice>
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for liability
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OLoss_Type">
    <xs:sequence>
      <xs:element name="Description" type="xs:string"/>
      <xs:element ref="Notes"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for loss
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OPlane_Type">
    <xs:sequence>
      <xs:element name="Make" type="xs:string"/>
      <xs:element name="RegNo" type="xs:string"/>
      <xs:element name="PlaneType" type="xs:string" minOccurs="0"/>
      <xs:element name="PlaneSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdNo" type="xs:string"/>
      <xs:element name="ProdYear" type="xs:integer"/>
      <xs:element name="CCMTon" type="xs:decimal" minOccurs="0"/>
      <xs:element name="SeatsNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="PlaneHistory" type="xs:integer" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for plane
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OPropBri_Type">
    <xs:sequence>
      <xs:element name="Construction" type="xs:string"/>
      <xs:element name="ConstructionType" type="xs:string"/>
      <xs:element name="Area" type="xs:decimal"/>
      <xs:choice>
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element name="BriDescription" type="xs:string"/>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for buildings
                                      under construction (FiledName |
                                      Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OProperty_Type">
    <xs:sequence>
      <xs:element name="PropertyKind" type="xs:string"/>
      <xs:element name="PropertyType" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:choice>
        <xs:element ref="AddressID" minOccurs="1"/>
        <xs:element name="NewAddress" type="Object_Address_Type" minOccurs="1"/>
      </xs:choice>
      <xs:element name="RiskLocationID" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for property
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OShip_Type">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="ShipClass" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipType" type="xs:string" minOccurs="0"/>
      <xs:element name="ShipSubtype" type="xs:string" minOccurs="0"/>
      <xs:element name="RegNo" type="xs:string"/>
      <xs:element name="RegPort" type="xs:string" minOccurs="0"/>
      <xs:element name="GrossTonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="NetTonage" type="xs:decimal" minOccurs="0"/>
      <xs:element name="OwnerClass" type="xs:string" minOccurs="0"/>
      <xs:element name="Length" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Height" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Wide" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Wade" type="xs:decimal" minOccurs="0"/>
      <xs:element name="DeadWeight" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Region" type="xs:string" minOccurs="0"/>
      <xs:element name="PreviousInsurer" type="xs:string" minOccurs="0"/>
      <xs:element name="PassengerNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="CrewNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="LastMaintenanceDate" type="xs:date" minOccurs="0"/>
      <xs:element name="Engine" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdInfo" type="xs:string" minOccurs="0"/>
      <xs:element name="ProdYear" type="xs:integer" minOccurs="0"/>
      <xs:element name="Producer" type="xs:string" minOccurs="0"/>
      <xs:element name="ClaimInfo" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for ship
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SupplementaryEquipment" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="OAdditionalEquipment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OTrain_Type">
    <xs:sequence>
      <xs:element name="RegNo" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="TrainType" type="xs:string" minOccurs="0"/>
      <xs:element name="TrainSubtype" type="xs:string" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Possible custom properties for train
                                      (FiledName | Description | Product Code):</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Creditors" type="ObjectsCredited_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OVechicle_Type">
    <xs:sequence>
      <xs:element ref="ObjectType"/>
      <xs:element name="VehicleObjectID" type="xs:long"/>
      <xs:element name="VehicleDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="BoxNum" type="xs:integer" minOccurs="0"/>
      <xs:element name="FromPlace" type="xs:string" minOccurs="0"/>
      <xs:element name="ToPlace" type="xs:string" minOccurs="0"/>
      <xs:element name="TeritoryID" type="xs:string" minOccurs="0"/>
      <xs:element name="Param1" type="xs:string" minOccurs="0"/>
      <xs:element name="Param2" type="xs:string" minOccurs="0"/>
      <xs:element name="Param3" type="xs:string" minOccurs="0"/>
      <xs:element name="Param4" type="xs:string" minOccurs="0"/>
      <xs:element name="Param5" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OVehicles_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Vehicle" type="OVechicle_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ObjectCredited_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="CreditorID" type="xs:long"/>
        <xs:element name="NewCreditor" type="NewCreditor_Type"/>
      </xs:choice>
      <xs:element name="Amount" type="xs:double" minOccurs="0"/>
      <xs:element name="LendDate" type="xs:date" minOccurs="0"/>
      <xs:element name="ExpireDate" type="xs:date" minOccurs="0"/>
      <xs:element name="InterestRate" type="xs:double" minOccurs="0"/>
      <xs:element name="NumOfInstallments" type="xs:int" minOccurs="0"/>
      <xs:element name="Installment" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ObjectData_Type">
    <xs:annotation>
      <xs:documentation>Insured entity represents what exactly is insured
                              - an object (car, property, train, etc.) or a
                              person (for life insurance). Depending on the type
                              of the object, the structure may vary, which is
                              defined by choice between generic object
                              structures. Besides the predefiend fields, every
                              object can have a varying number of additional
                              fields (flex fields), which are configured at
                              system installation time for a certain client. The
                              fields are described by "any" element in the XML
                              structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ObjectID" type="xs:integer" minOccurs="0"/>
      <xs:element ref="ObjectType"/>
      <xs:element ref="Owners" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element ref="OAccidentInsured">
          <xs:annotation>
            <xs:documentation>Insured for an accident. Describes
                                          insureds by an individual. The
                                          predefined fields are: - PersonID: ID
                                          for person in p_people table; - Age:
                                          age of the person - ProfID: profession
                                          ID from the list of professions</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAdditionalEquipment">
          <xs:annotation>
            <xs:documentation>Additional equipment of various
                                          vehicles. Mainly for cars. -
                                          ParentObjectID: Vehicle code; -
                                          EquipmentType: Equipment type code -
                                          Model: Equipment model - SerialNo -
                                          IVOver: Flag. Shows if the insured
                                          value should be accumulated; -
                                          AvValue: Average value; - EquipmentKind</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAgriculture">
          <xs:annotation>
            <xs:documentation>Data about the insured cultivations. -
                                          CultureType: Cultivation type; -
                                          CultureSubtype: Subcultivation type; -
                                          Area: The area, sowed by the
                                          cultivation(dka); - RegioID: The code
                                          of the area, sowed by the cultivation;
                                          - CadastNum: The number of the area in
                                          the public registries, sowed by the
                                          cultivation</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OAnimal">
          <xs:annotation>
            <xs:documentation>Information about the insured animals.
                                          - AnimalType: Animal type in
                                          accordance of the internal
                                          nomenclature; - AnimalSubtype:Animal
                                          subtype in accordance of the internal
                                          nomenclature; - Breed: Animal breed -
                                          Name - Distinction:Distinguishing
                                          feachers</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OCar">
          <xs:annotation>
            <xs:documentation>Contains the data about cars with
                                          motorcar place accident insurance. -
                                          RegNo:THE REGISTRATION NUMBER OF THE
                                          VEHICLE; - CarType: A car type in
                                          accordance of the internal
                                          nomenclature; - Model: Car model; -
                                          Make: Car maker; - Modification -
                                          Chassis: Chassis number - Engine:
                                          Engine number - CCMTon: Engine
                                          power(weight-TON); - CarUsage: Car
                                          usage-in accordance of the internal
                                          nomenclature; - SeatsNum: Number of
                                          seats; - DoorNum: Number of doors; -
                                          PaintType: Paint type-common or
                                          metalic; - ProdYear: Year of
                                          production; - CarAge: Age; - ProdType:
                                          Production type-Eastern or Western ; -
                                          CarColo - RegType - EnginePower -
                                          BonusMalus - Tonage - EngineType -
                                          FuelType - DriveType - CarBodyType -
                                          WindowColor - Modified - Notes</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OCargo">
          <xs:annotation>
            <xs:documentation>Description of the insured goods in
                                          the subscription policies. -
                                          CargoType: Goods type in accordance
                                          with a internal nomenclature; -
                                          CargoSubtype - CargoPolicyType -
                                          Description - PackingType: Package
                                          type in accordance with a internal
                                          nomenclature; - BoxNumber: Number of
                                          the packages; - TeritoryID: Teritory
                                          ID in accordance with a internal
                                          nomenclature; - FromPlace: The start
                                          place of the route; - ToPlace: The end
                                          place of the route; - Via: The place,
                                          via which is the route; - Destination:
                                          Final destination; - TransportType -
                                          VehicleType - FreightPrc: Freight(% to
                                          get more expensive as a result of
                                          transportation); - FreightDim -
                                          ShipmentDoc: Shipment document; -
                                          ToOrder - AverageAgent - Distance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OInsuredGroups">
          <xs:annotation>
            <xs:documentation>Group Insurance</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OLiability">
          <xs:annotation>
            <xs:documentation>General purpose object. Mainly used
                                          for liability insurance. - LiabDesc:
                                          Liability description; - LiabType:
                                          Liability type; - AddressID</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OLoss">
          <xs:annotation>
            <xs:documentation>Claim inventory. Contains description
                                          of losses when claim</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OPlane">
          <xs:annotation>
            <xs:documentation>Planes. - Make: Plain maker; - RegNo:
                                          Registration number; - ProdNo: Number
                                          given by the producer - ProdYear: Year
                                          of production - CCMTon: Tonage -
                                          SeatsNum: Number of seats -
                                          PlainHistory: Free text for plane
                                          history</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OProperty">
          <xs:annotation>
            <xs:documentation>Insured property. - PropertyKind; -
                                          PropertyType: Property
                                          type(estate/movable) - Name: Name
                                          (property description) - AddressID: ID
                                          of address structure</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OPropBri">
          <xs:annotation>
            <xs:documentation>Insured building. Contains data about
                                          Insured building, typically building
                                          in construction. - Construction; -
                                          Area: area in square meters; -
                                          AddressID: ID of address structure; -
                                          BriDescription: The description of the
                                          insured object</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OShip">
          <xs:annotation>
            <xs:documentation>Ships. - Name; - ShipClass ; -
                                          ShipType; - RegNo: Registration
                                          number; - RegPort: Port of
                                          registration; - GrossTonage: Gross
                                          register ton; - NetTonage: Net
                                          register ton; - OwnerClass; - Length;
                                          - Height; - Wide; - Wade; -
                                          DeadWeight; - Region: Insured region;
                                          - PreviousInsurer; - PassengerNum; -
                                          CrewNum; - LastMaintenanceDate; -
                                          Engine: Engine info; - ProdInfo:
                                          Production info; - ProdYear: Year of
                                          production; - Producer; - ClaimInfo:
                                          Previous claim info.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="OTrain">
          <xs:annotation>
            <xs:documentation>Trains.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Object_Address_Type">
    <xs:sequence>
      <xs:element ref="AddressID" minOccurs="0"/>
      <xs:element name="Country" type="xs:string" minOccurs="0"/>
      <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
      <xs:element name="State" type="xs:string" minOccurs="0"/>
      <xs:element name="CountryState" type="xs:string" minOccurs="0"/>
      <xs:element name="Region" type="xs:string" minOccurs="0"/>
      <xs:element name="StateRegion" type="xs:string" minOccurs="0"/>
      <xs:element name="City" type="xs:string" minOccurs="1"/>
      <xs:element name="CityCode" type="xs:string" minOccurs="0"/>
      <xs:element ref="ResidentialAddress"/>
      <xs:element name="ZipCode" type="xs:string" minOccurs="1"/>
      <xs:element name="ZipEarthQuake" type="xs:string" minOccurs="0"/>
      <xs:element name="EarthquakeFactor" type="xs:string" minOccurs="0"/>
      <xs:element name="Address" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ObjectsCredited_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="ObjectCredited" type="ObjectCredited_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OperLetterOfCredit_Type">
    <xs:sequence>
      <xs:element name="LcID" type="xs:long"/>
      <xs:element name="Operation" type="LOC_OPER_TYPE" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OperLettersOfCredit_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="LetterOfCredit" type="OperLetterOfCredit_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Others_Type">
    <xs:sequence>
      <xs:group ref="People_Data_Group"/>
      <xs:element name="OthersData" type="ChangeOthersData_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OverrideIndemnity_Type">
    <xs:sequence>
      <xs:element name="IndemnityAmount" type="xs:double"/>
      <xs:element minOccurs="0" ref="Currency"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Owner_Type">
    <xs:sequence>
      <xs:group ref="Change_People_Data_Group"/>
      <xs:element name="BeginDate" type="xs:date"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
      <xs:element name="Percent" type="PERCENT_TYPE" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Owners_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Owner" type="Owner_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParticipantAddition_Type">
    <xs:sequence>
      <xs:element name="ParticipantAddID" type="xs:long" minOccurs="0"/>
      <xs:element name="ParticipantID" type="xs:long" minOccurs="0"/>
      <xs:element name="ObjectID" type="xs:long" minOccurs="0"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element name="Currency" type="xs:string"/>
      <xs:element name="Status" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element name="LendDate" type="xs:date" minOccurs="0"/>
        <xs:element name="Note1" type="xs:string" minOccurs="0"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="ExpireDate" type="xs:date" minOccurs="0"/>
        <xs:element name="Note2" type="xs:string" minOccurs="0"/>
      </xs:choice>
      <xs:element name="Note3" type="xs:string" minOccurs="0"/>
      <xs:element name="Note4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParticipantAdditions_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Addition" type="ParticipantAddition_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Participant_Type">
    <xs:sequence>
      <xs:element name="ParticipantID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element name="ParticipantType" type="xs:string" minOccurs="0"/>
      <xs:element name="NonamedType" type="xs:string" minOccurs="0"/>
      <xs:group ref="People_Data_Group" minOccurs="0"/>
      <xs:element name="ParticipantRole" type="xs:string" minOccurs="0"/>
      <xs:element name="PremiumShare" type="xs:double" minOccurs="0"/>
      <xs:element name="Status" type="xs:string" minOccurs="0"/>
      <xs:element name="Language" type="xs:string" minOccurs="0"/>
      <xs:element name="Irrevocable" type="xs:string" minOccurs="0"/>
      <xs:element name="RecordDesignation" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Additions" type="ParticipantAdditions_Type" minOccurs="0"/>
      <xs:element ref="PolicyAddresses" minOccurs="0"/>
      <xs:element ref="PolicyContacts" minOccurs="0"/>
      <xs:element ref="PolicyBankAccounts" minOccurs="0"/>
      <xs:element ref="PolicyCreditCards" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Participants_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Participant" type="Participant_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PassportData_Type">
    <xs:sequence>
      <xs:element name="IDType" type="ID_TYPE_TYPE" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Type of ID - passport, ID Card, driving
                                      license, other..</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IDNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="DateOfIssue" type="xs:date" minOccurs="0"/>
      <xs:element name="PlaceOfIssue" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PayPlanInstalment_Type">
    <xs:sequence>
      <xs:element name="PlanID" type="xs:integer"/>
      <xs:element name="AnnexID" type="xs:long"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element minOccurs="0" ref="Currency"/>
      <xs:element name="DueDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="GwpDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="InstalmentPerYear" type="xs:string" minOccurs="0"/>
      <xs:element name="InvoiceNo" type="xs:string" minOccurs="0"/>
      <xs:element name="PaidOn" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="AmntType" type="xs:string" minOccurs="0"/>
      <xs:element name="PlanType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PayPlanInstalments_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Installment" type="PayPlanInstalment_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaymentDetail_Type">
    <xs:sequence>
      <xs:element name="DetailID" type="xs:long" minOccurs="0"/>
      <xs:element name="IndemnityType" type="xs:string"/>
      <xs:element name="PaySum" type="xs:double" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaymentDetails_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PaymentDetail" type="PaymentDetail_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Payment_Type">
    <xs:sequence>
      <xs:element ref="PaymentID"/>
      <xs:element minOccurs="0" ref="ReportID"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="RequestNo"/>
      <xs:element name="BenefType" type="xs:int"/>
      <xs:element name="ManID" type="xs:long"/>
      <xs:element name="PaymentNum" type="xs:int"/>
      <xs:element name="PaymentWay" type="xs:string"/>
      <xs:element name="PaySum" type="xs:double"/>
      <xs:element name="Currency" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonName_Type">
    <xs:sequence>
      <xs:element name="Given" type="xs:string" minOccurs="0"/>
      <xs:element name="Surname" type="xs:string" minOccurs="0"/>
      <xs:element name="Family" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonRelation_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Part2ID" type="xs:long"/>
        <xs:group ref="PID_Data_Group"/>
      </xs:choice>
      <xs:element name="RelID" type="xs:integer"/>
      <xs:element name="RelName" type="xs:string"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonRelations_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PersonRelation" type="PersonRelation_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonalData_Type">
    <xs:sequence>
      <xs:element name="Name" type="PersonName_Type" minOccurs="0"/>
      <xs:element ref="PID"/>
      <xs:element name="Gender" type="GENDER_VALUE_TYPE" minOccurs="0"/>
      <xs:element name="BirthDate" type="xs:date" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Language"/>
      <xs:element minOccurs="0" ref="HomeCountry"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyAddress_Type">
    <xs:sequence>
      <xs:element name="PolicyAddressID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:choice>
        <xs:element minOccurs="0" ref="AddressID"/>
        <xs:element name="Address" type="Address_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element name="AddressPurpose" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyAddresses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyAddress" type="PolicyAddress_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyAgent_Type">
    <xs:sequence>
      <xs:element name="PolicyAgentID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element ref="AgentNo" minOccurs="0"/>
      <xs:element name="AgentRole" type="xs:string" minOccurs="0"/>
      <xs:element name="CommShare" type="xs:double" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element ref="PolicyAddresses" minOccurs="0"/>
      <xs:element ref="PolicyContacts" minOccurs="0"/>
      <xs:element ref="PolicyBankAccounts" minOccurs="0"/>
      <xs:element ref="PolicyCreditCards" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyAgents_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Agent" type="PolicyAgent_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBankAccount_Type">
    <xs:sequence>
      <xs:element name="PolicyBankAccountID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:choice>
        <xs:element ref="BankAccID" minOccurs="0"/>
        <xs:element name="BankAccount" type="ChngeBankAccnt_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element name="AccountPurpose" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBankAccounts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyBankAccount" type="PolicyBankAccount_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyCreditCard_Type">
    <xs:sequence>
      <xs:element name="PolicyCCID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:choice>
        <xs:element ref="CardID" minOccurs="0"/>
        <xs:element name="CreditCard" type="ChngeCreditCard_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element name="CCPurpose" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyCreditCards_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyCreditCard" type="PolicyCreditCard_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBenefGroup_Type">
    <xs:sequence>
      <xs:element name="BenefGroupID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element name="GroupType" type="xs:string" minOccurs="0"/>
      <xs:element name="GroupCode" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBenefGroups_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="BenefGroup" type="PolicyBenefGroup_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBilling_Type">
    <xs:sequence>
      <xs:element name="BillingID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element name="PaymentMode" type="xs:integer"/>
      <xs:element name="PayDueDate" type="DAY_OF_MONTH_TYPE"/>
      <xs:element ref="PaymentWay"/>
      <xs:element name="InstallmentsPeriod" type="xs:string"/>
      <xs:element name="PaymentDuration" type="xs:positiveInteger" minOccurs="0"/>
      <xs:element name="PaymentDurUnits" type="xs:string" minOccurs="0"/>
      <xs:element name="UpToYears" type="xs:positiveInteger" minOccurs="0"/>
      <xs:element name="PaymentType" type="xs:string" minOccurs="0"/>
      <xs:element name="RecordDesignation" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyBillings_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Billing" type="PolicyBilling_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyContact_Type">
    <xs:sequence>
      <xs:element name="PolicyContactID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:choice>
        <xs:element ref="ContactID" minOccurs="0"/>
        <xs:element name="Contact" type="ChngeContact_Type" minOccurs="0"/>
      </xs:choice>
      <xs:element name="ContactPurpose" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyContacts_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyContact" type="PolicyContact_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDiagnosis_Type">
    <xs:sequence>
      <xs:element name="PolDiagID" type="xs:long" minOccurs="0"/>
      <xs:choice>
        <xs:sequence>
          <xs:element ref="DiagnosisID" minOccurs="0"/>
          <xs:element ref="DiagnosisCode"/>
          <xs:element ref="DiagnosisName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="DiagnosisGroupID" minOccurs="0"/>
          <xs:element ref="DiagnosisGroupCode"/>
          <xs:element ref="DiagnosisGroupName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="GeogAreaCode" minOccurs="0"/>
      <xs:element ref="GeogAreaName" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="ProviderID" minOccurs="0"/>
          <xs:element ref="ProviderCode"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="NetworkID" minOccurs="0"/>
          <xs:element ref="NetworkCode"/>
          <xs:element ref="NetworkName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element name="SettlementType" type="xs:string" minOccurs="0"/>
      <xs:element ref="NetworkCoverage" minOccurs="0"/>
      <xs:element name="DiagLimit" type="xs:decimal" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDiagnoses_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyDiagnosis" type="PolicyDiagnosis_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDoc_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="InsuredObjectID"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element name="DocumentType" type="xs:string"/>
      <xs:element name="DocumentID" type="xs:long" minOccurs="0"/>
      <xs:element name="DocumentDate" type="xs:date" minOccurs="0"/>
      <xs:element name="OriginalDocument" type="xs:string" minOccurs="0"/>
      <xs:element name="OriginalDocID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element name="BeginDate" type="xs:date" minOccurs="0"/>
      <xs:element name="EndDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDocs_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyDocument" type="PolicyDoc_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDrug_Type">
    <xs:sequence>
      <xs:element name="PolDrugID" type="xs:long" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="DrugID" minOccurs="0"/>
          <xs:element ref="DrugCode"/>
          <xs:element ref="DrugName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="DrugGroupID" minOccurs="0"/>
          <xs:element ref="DrugGroupCode"/>
          <xs:element ref="DrugGroupName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="GeogAreaCode" minOccurs="0"/>
      <xs:element ref="GeogAreaName" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="ProviderID" minOccurs="0"/>
          <xs:element ref="ProviderCode"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="NetworkID" minOccurs="0"/>
          <xs:element ref="NetworkCode"/>
          <xs:element ref="NetworkName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element name="SettlementType" type="xs:string" minOccurs="0"/>
      <xs:element ref="NetworkCoverage" minOccurs="0"/>
      <xs:element name="DrugLimit" type="xs:decimal" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyDrugs_Type">
    <xs:sequence minOccurs="1">
      <xs:element maxOccurs="unbounded" name="Drug" type="PolicyDrug_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyGatekeeper_Type">
    <xs:sequence>
      <xs:element name="PolicyGatekeeperID" type="xs:long" minOccurs="0"/>
      <xs:element name="ContractID" type="xs:long" minOccurs="0"/>
      <xs:element name="ContractNo" type="xs:string" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyGatekeepers_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Gatekeeper" type="PolicyGatekeeper_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyGeogArea_Type">
    <xs:sequence>
      <xs:element name="PolicyAreaID" type="xs:long" minOccurs="0"/>
      <xs:element ref="GeogAreaCode" minOccurs="0"/>
      <xs:element ref="GeogAreaName" minOccurs="0"/>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyGeogAreas_Type">
    <xs:sequence minOccurs="1">
      <xs:element maxOccurs="unbounded" name="GeographicalArea" type="PolicyGeogArea_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyNetwork_Type">
    <xs:sequence>
      <xs:element name="PolicyNetworkID" type="xs:long" minOccurs="0"/>
      <xs:element ref="NetworkID" minOccurs="0"/>
      <xs:element ref="NetworkCode" minOccurs="0"/>
      <xs:element ref="NetworkName" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyNetworks_Type">
    <xs:sequence>
      <xs:element name="Network" type="PolicyNetwork_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyParReq_Type">
    <xs:sequence>
      <xs:element name="PolParID" type="xs:long" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="SrvgrpID" minOccurs="0"/>
          <xs:element ref="SrvgrpCode"/>
          <xs:element ref="SrvgrpName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="ServiceID" minOccurs="0"/>
          <xs:element ref="ServiceCode"/>
          <xs:element ref="ServiceName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="DiagnosisID" minOccurs="0"/>
          <xs:element ref="DiagnosisCode"/>
          <xs:element ref="DiagnosisName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="DiagnosisGroupID" minOccurs="0"/>
          <xs:element ref="DiagnosisGroupCode"/>
          <xs:element ref="DiagnosisGroupName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="DrugID" minOccurs="0"/>
          <xs:element ref="DrugCode"/>
          <xs:element ref="DrugName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="DrugGroupID" minOccurs="0"/>
          <xs:element ref="DrugGroupCode"/>
          <xs:element ref="DrugGroupName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element name="DrugDaySupply" type="xs:integer" minOccurs="0"/>
      <xs:element ref="GeogAreaCode" minOccurs="0"/>
      <xs:element ref="GeogAreaName" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="ProviderID" minOccurs="0"/>
          <xs:element ref="ProviderCode"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="NetworkID" minOccurs="0"/>
          <xs:element ref="NetworkCode"/>
          <xs:element ref="NetworkName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="ProviderType" minOccurs="0"/>
      <xs:element ref="ServicePlace" minOccurs="0"/>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element name="SettlementType" type="xs:string" minOccurs="0"/>
      <xs:element ref="NetworkCoverage" minOccurs="0"/>
      <xs:element name="ParLimit" type="xs:decimal" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyParRequirements_Type">
    <xs:sequence>
      <xs:element name="ApprovalRequirement" type="PolicyParReq_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyPremium_Type">
    <xs:sequence>
      <xs:element name="EngPremID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element name="PremiumType" type="xs:string"/>
      <xs:element name="NumInstalments" type="xs:integer"/>
      <xs:element name="Amount" type="xs:double"/>
      <xs:element ref="Currency"/>
      <xs:element name="Status" type="xs:string"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyPremiums_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Premium" type="PolicyPremium_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyProvider_Type">
    <xs:sequence>
      <xs:element name="PolicyProviderID" type="xs:long" minOccurs="0"/>
      <xs:element name="ContractID" type="xs:long" minOccurs="0"/>
      <!--if contractNo is passed, LOV will populate Provider data-->
      <xs:element name="ContractNo" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="ProviderID" minOccurs="0"/>
          <xs:element ref="ProviderCode"/>
          <xs:element ref="ProviderName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="ProviderGroupID" type="xs:long" minOccurs="0"/>
          <xs:element name="ProviderGroupCode" type="xs:string"/>
          <xs:element name="ProviderGroupName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element name="SettlementType" type="xs:string" minOccurs="0"/>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyProviders_Type">
    <xs:sequence>
      <xs:element name="Provider" type="PolicyProvider_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRule_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PolicyRuleID"/>
      <xs:element name="RuleCfgID" type="xs:decimal"/>
      <xs:element ref="PolicyID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsuredID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="SubGroupID" minOccurs="0"/>
      <xs:element name="PackageCode" type="xs:string" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="GrcID" minOccurs="0"/>
      <xs:element name="ClaimStage" type="xs:string" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element name="RqType" type="xs:string" minOccurs="0"/>
      <xs:element name="InNetwork" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="RuleStatus" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element name="PolicyRuleAttributes" type="PolicyRuleAttrs_Type" minOccurs="0"/>
      <xs:element name="PolicyRuleValues" type="PolicyRuleValues_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRules_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyRule" type="PolicyRule_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRuleAttr_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PolicyRuleID"/>
      <xs:element name="AttrOrder" type="xs:int"/>
      <xs:element name="DefinitionType" type="xs:string"/>
      <xs:element name="AttrCode" type="xs:string" minOccurs="0"/>
      <xs:element name="ValueType" type="xs:string" minOccurs="0"/>
      <xs:element name="RuleValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="ReRuleCode" type="xs:string" minOccurs="0"/>
      <xs:element name="ValueDim" type="xs:string" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRuleAttrs_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyRuleAttribute" type="PolicyRuleAttr_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRuleValue_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PolicyRuleID"/>
      <xs:element name="RuleValue" type="xs:decimal" minOccurs="1"/>
      <xs:element name="ValueDim" type="xs:string" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element name="ValueType" type="xs:string" minOccurs="0"/>
      <xs:element name="Included" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyRuleValues_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyRuleValue" type="PolicyRuleValue_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyService_Type">
    <xs:sequence>
      <xs:element name="PolSrvID" type="xs:long" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="SrvgrpID" minOccurs="0"/>
          <xs:element ref="SrvgrpCode"/>
          <xs:element ref="SrvgrpName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="ServiceID" minOccurs="0"/>
          <xs:element ref="ServiceCode"/>
          <xs:element ref="ServiceName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="GeogAreaCode" minOccurs="0"/>
      <xs:element ref="GeogAreaName" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="ProviderID" minOccurs="0"/>
          <xs:element ref="ProviderCode"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="NetworkID" minOccurs="0"/>
          <xs:element ref="NetworkCode"/>
          <xs:element ref="NetworkName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element ref="CoverageType" minOccurs="0"/>
      <xs:element ref="ClaimType" minOccurs="0"/>
      <xs:element name="SettlementType" type="xs:string" minOccurs="0"/>
      <xs:element ref="NetworkCoverage" minOccurs="0"/>
      <xs:element name="SrvLimit" type="xs:decimal" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="GroupID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyServices_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="PolicyService" type="PolicyService_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PreexistingCondition_Type">
    <xs:sequence>
      <xs:element name="PreexistID" type="xs:long" minOccurs="0"/>
      <xs:element name="ConditionType" type="xs:string" minOccurs="0">
        <!--Value from hst_preexist_condition_type (PREEXIST or CHRONIC)-->
      </xs:element>
      <xs:choice minOccurs="0">
        <xs:sequence>
          <xs:element ref="DiagnosisID" minOccurs="0"/>
          <xs:element ref="DiagnosisCode"/>
          <xs:element ref="DiagnosisName" minOccurs="0"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element ref="DiagnosisGroupID" minOccurs="0"/>
          <xs:element ref="DiagnosisGroupCode"/>
          <xs:element ref="DiagnosisGroupName" minOccurs="0"/>
        </xs:sequence>
      </xs:choice>
      <xs:element name="LimitValue" type="xs:decimal" minOccurs="0"/>
      <xs:element ref="Currency" minOccurs="0"/>
      <xs:element name="WaitPeriod" type="xs:decimal" minOccurs="0"/>
      <xs:element name="PeriodDim" type="xs:string" minOccurs="0">
        <!--Value from hst_dur_dimension: d-day(s); m-month(s);y-year(s);w-week(s)-->
      </xs:element>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element ref="InsrBegin" minOccurs="0"/>
      <xs:element ref="InsrEnd" minOccurs="0"/>
      <xs:element name="Excluded" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="MaxServices" type="xs:integer" minOccurs="0"/>
      <xs:element name="EffectiveDate" type="xs:date" minOccurs="0"/>
      <!--a.username, a.registration_date-->
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PreexistingConditions_Type">
    <xs:sequence>
      <xs:element name="PreexistingCondition" type="PreexistingCondition_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Premium_Type">
    <xs:sequence>
      <xs:element name="TotalAmount" type="xs:decimal"/>
      <xs:element name="PaidAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="OutstandingAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="OverpaidAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="NextDueAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="NextDueDate" type="xs:date" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Question_Type">
    <xs:sequence>
      <xs:element name="ID" type="xs:string"/>
      <xs:element name="Answer" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Questionary_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Question" type="Question_Type"/>
    </xs:sequence>
    <xs:attribute name="questionaryID" type="QUESTIONARY_ID_TYPE"/>
  </xs:complexType>
  <xs:complexType name="Recapitulation_Type">
    <xs:sequence>
      <xs:element name="RecapitulationID" type="xs:integer"/>
      <xs:element name="DocSum" type="xs:double" minOccurs="0"/>
      <xs:element name="ExpertSum" type="xs:double" minOccurs="0"/>
      <xs:element name="ConfirmSum" type="xs:double" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Recapitulations_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Recapitulation" type="Recapitulation_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegressPayment_Type">
    <xs:sequence>
      <xs:element name="ExpenseCode" type="xs:int"/>
      <xs:element ref="InsuredObjectID"/>
      <xs:element name="RegressSum" type="xs:double"/>
      <xs:element name="RegressCurrency" type="xs:string"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegressPayments_Type">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="RegressPayment" type="RegressPayment_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RelatedPerson_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="PersonID" type="xs:integer"/>
        <xs:element name="OthersData" type="ChangeOthersData_Type"/>
      </xs:choice>
      <xs:element ref="PID"/>
      <xs:element name="PersonType" type="xs:integer"/>
      <xs:element maxOccurs="1" name="Note" type="xs:string" minOccurs="0"/>
      <xs:element ref="PolicyID" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element minOccurs="0" ref="ProductCode"/>
      <xs:element name="IncludedPolicy" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:group ref="Change_People_Data_Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RelatedPersons_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="RelatedPerson" type="RelatedPerson_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RenewalCondition_Type">
    <xs:sequence>
      <xs:element name="EngRenewalID" type="xs:long" minOccurs="0"/>
      <xs:element minOccurs="0" ref="EngagementID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="AuxAnnexID" minOccurs="0"/>
      <xs:element name="RenewalMethod" type="xs:string"/>
      <xs:element name="RenewalDate" type="xs:date"/>
      <xs:element name="RenewalTime" type="xs:time" minOccurs="0"/>
      <xs:element name="RenewalEnd" type="xs:date" minOccurs="0"/>
      <xs:element name="RenewalEndTime" type="xs:time" minOccurs="0"/>
      <xs:element name="RecordDesignation" type="xs:string" minOccurs="0"/>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Request_Type">
    <xs:sequence>
      <xs:element ref="ClaimReqSeq" minOccurs="0"/>
      <xs:element ref="RequestNo"/>
      <xs:element name="RequestDate" type="xs:date"/>
      <xs:element name="RequestState" type="xs:int"/>
      <xs:element name="RequestStateDescr" type="xs:string"/>
      <xs:element name="RequestStateAux" type="xs:int"/>
      <xs:element name="RequestStateAuxDescr" type="xs:string"/>
      <xs:group ref="People_Data_Group"/>
      <xs:element name="ClaimantType" type="xs:string"/>
      <xs:element name="PaymentType" type="xs:int"/>
      <xs:element minOccurs="0" ref="InsuredAmount"/>
      <xs:element name="PaidAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="OutstandingAmount" type="xs:decimal" minOccurs="0"/>
      <xs:element name="SolveWay" type="xs:string" minOccurs="0"/>
      <xs:element name="ProviderID" type="xs:int" minOccurs="0"/>
      <xs:element name="OperationDate" minOccurs="0" type="xs:date"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element minOccurs="0" ref="InjuredObjects"/>
      <xs:element name="ClaimAddresses" type="ClaimAddresses_Type" minOccurs="0"/>
      <xs:element name="Participants" type="ClaimParticipants_Type" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Questionary" type="Questionary_Type" minOccurs="0"/>
      <xs:element name="Reports" type="ClaimReports_Type" minOccurs="0"/>
      <xs:element minOccurs="0" ref="Guilty"/>
      <xs:element ref="AnnuityRecipients" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RecipientData_Type">
    <xs:sequence>
      <xs:element ref="AuxAnnexID"/>
      <!--only in query mode-->
      <xs:element name="AnnuityType" type="xs:string" minOccurs="0"/>
      <xs:element name="RecipientState" type="xs:string" minOccurs="0"/>
      <xs:element name="AnnualAmnt" type="xs:double" minOccurs="0"/>
      <xs:element name="AnnuityClaimAmount" type="xs:double"/>
      <xs:element name="InstallmentAmnt" type="xs:double" minOccurs="0"/>
      <xs:element ref="Currency"/>
      <xs:element name="AnnuityStartDate" type="xs:date" minOccurs="0"/>
      <xs:element name="AnnuityDuration" type="xs:int" minOccurs="0"/>
      <xs:element name="DurationDim" type="xs:string" minOccurs="0"/>
      <xs:element name="Age" type="xs:int" minOccurs="0"/>
      <xs:element name="Gender" type="xs:string" minOccurs="0"/>
      <xs:element name="DeathDate" type="xs:date" minOccurs="0"/>
      <xs:element name="GuarantyPeriod" type="xs:int" minOccurs="0"/>
      <xs:element name="GuarantyDim" type="xs:string" minOccurs="0"/>
      <xs:element name="PaymentDay" type="xs:date" minOccurs="0"/>
      <xs:element name="PaymentMode" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Requests_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Request" type="Request_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResidentialAddress_Type">
    <xs:sequence>
      <xs:element name="QuarterName" type="xs:string" minOccurs="0"/>
      <xs:element name="QuarterID" type="xs:string" minOccurs="0"/>
      <xs:element name="StreetName" type="xs:string" minOccurs="0"/>
      <xs:element name="StreetID" type="xs:string" minOccurs="0"/>
      <xs:element name="StreetNo" type="xs:string" minOccurs="0"/>
      <xs:element name="BlockNo" type="xs:string" minOccurs="0"/>
      <xs:element name="Entrance" type="xs:string" minOccurs="0"/>
      <xs:element name="Floor" type="xs:string" minOccurs="0"/>
      <xs:element name="Apartment" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Retrocession_Type">
    <xs:sequence>
      <xs:element name="Placement" type="xs:double"/>
      <xs:element name="PlacementDim" type="xs:string"/>
      <xs:element name="Premium" type="xs:double"/>
      <xs:element name="PremiumDim" type="xs:string"/>
      <xs:element name="Commission" type="xs:double"/>
      <xs:element name="CommissionDim" type="xs:string"/>
      <xs:element ref="Currency"/>
      <xs:element name="Username" type="xs:string" minOccurs="0"/>
      <xs:element ref="RegistrationDate" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Risk_Type">
    <xs:sequence>
      <xs:element ref="RiskType"/>
      <xs:element name="FranchiseType" type="xs:string" minOccurs="0"/>
      <xs:element name="FranchiseDimension" type="xs:string" minOccurs="0"/>
      <xs:element name="FranchiseValue" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseMin" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseMax" type="xs:decimal" minOccurs="0"/>
      <xs:element name="FranchiseCurrency" type="xs:string" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
      <xs:element name="Limits" type="Limits_Type" minOccurs="0"/>
      <xs:element name="Territories" type="Territories_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Risks_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Risk" type="Risk_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Supplementaries_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Supplementary" type="Supplementary_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Supplementary_Type">
    <xs:sequence>
      <xs:element name="IosupplID" type="xs:long" minOccurs="0"/>
      <xs:element ref="InsuredEntity" minOccurs="1"/>
      <xs:element name="SupplDescr" type="xs:string" minOccurs="0"/>
      <xs:element name="SupplNumber" type="xs:integer" minOccurs="0"/>
      <xs:element name="SupplDate" type="xs:date" minOccurs="0"/>
      <xs:element name="SupplIV" type="xs:double" minOccurs="0"/>
      <xs:element name="AddIV" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Tax_Type">
    <xs:sequence>
      <xs:element name="TaxID" type="xs:long" minOccurs="0"/>
      <xs:element ref="ProductCode" minOccurs="0"/>
      <xs:element ref="PolicyID" minOccurs="0"/>
      <xs:element ref="AnnexID" minOccurs="0"/>
      <xs:element ref="InsuredObjectID" minOccurs="0"/>
      <xs:element ref="CoverCode" minOccurs="0"/>
      <xs:element ref="GrcID" minOccurs="0"/>
      <xs:element name="TaxType" type="xs:string"/>
      <xs:element name="CalcRule" type="xs:string" minOccurs="0"/>
      <xs:element name="TaxRate" type="xs:decimal"/>
      <xs:element name="TaxAmount" type="xs:decimal"/>
      <xs:element name="Included" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="Applied" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="ManualTaxRate" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="WHRule" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="FractRule" type="BOOLEAN_STRING_TYPE" minOccurs="0"/>
      <xs:element name="OrderNo" type="xs:string" minOccurs="0"/>
      <xs:element name="EfectiveFrom" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="EfectiveTo" type="xs:dateTime" minOccurs="0"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Taxes_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Tax" type="Tax_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TermOfSale_Type">
    <xs:sequence>
      <xs:element name="Code" type="xs:string"/>
      <xs:element name="Loading" type="xs:double" minOccurs="0"/>
      <xs:element name="LoadingDim" type="xs:string" minOccurs="0"/>
      <xs:element name="AddLoading" type="xs:double" minOccurs="0"/>
      <xs:element name="AddLoadingDim" type="xs:string" minOccurs="0"/>
      <xs:element name="ExtraLoading" type="xs:double" minOccurs="0"/>
      <xs:element name="ExtraLoadingDim" type="xs:string" minOccurs="0"/>
      <xs:element name="Apply" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TermsOfSale_Type">
    <xs:sequence minOccurs="1">
      <xs:element maxOccurs="unbounded" name="TermOfSale" type="TermOfSale_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Territories_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Territory" type="Territory_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Territory_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:choice>
        <xs:element name="TerritoryID" type="xs:string"/>
        <xs:element name="CountryID" type="xs:string"/>
      </xs:choice>
      <xs:element ref="ValidFrom" minOccurs="0"/>
      <xs:element ref="ValidFromTime" minOccurs="0"/>
      <xs:element ref="ValidTo" minOccurs="0"/>
      <xs:element ref="ValidToTime" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AuxAnnexID"/>
      <xs:element ref="UpdatedBy" minOccurs="0"/>
      <xs:element ref="UpdatedOn" minOccurs="0"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ULFundStructure_Type">
    <xs:sequence>
      <xs:element ref="ULFunds"/>
      <xs:element name="Premium" type="xs:decimal" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ULFund_Type">
    <xs:sequence>
      <xs:element name="FundID" type="xs:string"/>
      <xs:element name="FundName" type="xs:string" minOccurs="0"/>
      <xs:element name="Percent" type="PERCENT_TYPE"/>
      <xs:element minOccurs="0" ref="InsuranceBegin"/>
      <xs:element ref="InsuranceEnd" minOccurs="0"/>
      <xs:element minOccurs="0" ref="AnnexID"/>
      <xs:element ref="CustomProperties" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Userexit_Type">
    <xs:sequence>
      <xs:any processContents="lax" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ValidityCondition_Type">
    <xs:attribute use="required" name="type" type="VALIDATION_COND_TYPE"/>
    <xs:attribute use="required" name="value" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="WfAttachmentPackage_Type">
    <xs:sequence>
      <xs:element name="AttachmentType" type="xs:int"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="ReferenceType" type="xs:string"/>
      <xs:element name="ReferenceID" type="xs:long" minOccurs="0"/>
      <xs:element name="ConfidentialLevel" type="xs:string" minOccurs="0"/>
      <xs:element ref="AttachmentFiles"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WfStep_Type">
    <xs:sequence>
      <xs:element name="WfStepID" type="xs:long"/>
      <xs:element name="ProcessID" type="xs:long"/>
      <xs:element name="ProcessCode" type="xs:string"/>
      <xs:element name="StepCode" type="xs:string"/>
      <xs:element name="CurrentState" type="xs:string"/>
      <xs:element name="PrevWfStepID" type="xs:long" minOccurs="0"/>
      <xs:element name="CreateTime" type="xs:dateTime"/>
      <xs:element name="StartedBy" type="xs:string" minOccurs="0"/>
      <xs:element name="StartTime" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="ExecutedBy" type="xs:string" minOccurs="0"/>
      <xs:element name="ExecutionTime" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="ResultCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Term1" type="xs:integer" minOccurs="0"/>
      <xs:element name="Duration1" type="xs:integer" minOccurs="0"/>
      <xs:element name="Duration2" type="xs:integer" minOccurs="0"/>
      <xs:element name="MainTerm" type="xs:integer" minOccurs="0"/>
      <xs:element name="MainDuration" type="xs:integer" minOccurs="0"/>
      <xs:element name="CopyWfStepID" type="xs:long" minOccurs="0"/>
      <xs:element name="SubWfStepID" type="xs:long" minOccurs="0"/>
      <xs:element name="CanceledBy" type="xs:string" minOccurs="0"/>
      <xs:element name="CancelTime" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="CancelReason" type="xs:string" minOccurs="0"/>
      <xs:element name="ObjectKind" type="xs:string"/>
      <xs:element name="ObjectKey" type="xs:string"/>
      <xs:element name="ProcessState" type="xs:string"/>
      <xs:element name="ActivityCode" type="xs:string"/>
      <xs:element name="Parameters" type="xs:string" minOccurs="0"/>
      <xs:element name="StartEndFlag" type="xs:string" minOccurs="0"/>
      <xs:element name="OrgunitType" type="xs:string" minOccurs="0"/>
      <xs:element name="Term2" type="xs:integer" minOccurs="0"/>
      <xs:element name="Timout" type="xs:integer" minOccurs="0"/>
      <xs:element name="WfStage1" type="xs:string" minOccurs="0"/>
      <xs:element name="WfStage2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReturningMessages_Type">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ReturningMessage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ANNEX_TYPE">
    <xs:restriction base="xs:integer">
      <xs:pattern value="11|12|13|16"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANNUITY_CALC_RULE">
    <xs:restriction base="xs:string">
      <xs:pattern value="CALCULATED|MANUALLY_ENTERED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BOOLEAN_NUMBER_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="0|1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BOOLEAN_STRING_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="N|Y"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BOOLEAN_YES_NO_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="NO|YES"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CHANGETYPE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="FA|PREM|OVERRIDE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DATE_TIME_TYPE">
    <xs:union memberTypes="xs:dateTime xs:date"/>
  </xs:simpleType>
  <xs:simpleType name="DAY_OF_MONTH_TYPE">
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="31"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ENTITY_VALUE_TYPE">
    <xs:restriction base="xs:integer">
      <xs:pattern value="0|1|2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FILTER_CONJUNCTION_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="OR|AND"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FILTER_OPERATION_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="EQ|NEQ|LT|GT|LTEQ|GTEQ"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GENDER_VALUE_TYPE">
    <xs:restriction base="xs:integer">
      <xs:pattern value="0|1|2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID_TYPE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="I|P|D"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LIFE_PAYMOD_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="1|3|6|12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LIMIT_DIMENSION_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="V|P|D"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MIME_TYPE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="[-\w]+/[-\w\+]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LOC_OPER_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="ATTACH|DETACH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OPERATION_MODE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="I|U|D"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PENSION_AMNT_DEF_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="1|3|6|12"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PERCENT_TYPE">
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="0.00"/>
      <xs:maxInclusive value="100.00"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="POLICY_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="POLICY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="QUESTIONARY_ID_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="policy|insuredObject"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VALIDATION_COND_TYPE">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Validity.Max.State"/>
      <xs:enumeration value="Validity.Date"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="INSCOND_CHNG_TYPE">
    <xs:annotation>
      <xs:documentation>MP - Manual Prolongation, CD-Change duration, OTHER - Other</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="MP|CD|OTHER"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\D:\projects_java\insis\v10\_SOA\USEREXITs\ADACDemoIntegration\UEInterface\public_html\WEB-INF\wsdl\xsd\insis\Insis_GenericWS_v3.0.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.fadata.bg/Insurance_Messages/v3.0/xml/" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xop="http://www.w3.org/2004/08/xop/include">
  <xs:include schemaLocation="Insis_BaseTypes_v3.0.xsd"/>
  <!--Service Request messages-->
  <xs:element name="BinaryAttachment" type="BinaryAttachment_Type"/>
  <xs:element name="ChainRq" type="ChainRq_Type"/>
  <xs:element name="ClearNotificationsRq" type="ClearNotificationsRq_Type"/>
  <xs:element name="CloseOpenPeriodRq" type="CloseOpenPeriodRq_Type"/>
  <xs:element name="CloseOpenDayRq" type="CloseOpenDayRq_Type"/>
  <xs:element name="DeleteQuestionaryRq" type="DeleteQuestionaryRq_Type"/>
  <xs:element name="DownloadAttachmentsRq" type="DownloadAttachmentsRq_Type"/>
  <xs:element name="DueNotificationsRq" type="DueNotificationsRq_Type"/>
  <xs:element name="InvokeSBSEventRq" type="InvokeSBSEventRq_Type"/>
  <xs:element name="GetCurrencyRateRq" type="GetCurrencyRateRq_Type"/>
  <xs:element name="GetLocalizedMessageRq" type="GetLocalizedMessageRq_Type"/>
  <xs:element name="GetOpenPeriodRq" type="GetOpenPeriodRq_Type"/>
  <xs:element name="GetOpenDayRq" type="GetOpenDayRq_Type"/>
  <xs:element name="GetParameterRq" type="GetParameterRq_Type"/>
  <xs:element name="GetQuestionaryLayoutsRq" type="GetQuestionaryLayoutsRq_Type"/>
  <xs:element name="GetUserQuestionaryRq" type="GetUserQuestionaryRq_Type"/>
  <xs:element name="ListOfValuesRq" type="ListOfValuesRq_Type">
    <xs:annotation>
      <xs:documentation>Request for List Of Values (nomenclature) from the
                        system. The LOV is identified by its name and can be
                        optionally filtered by applying 1 or 2 Filter
                        Criteria. For every Filter Criteria should be
                        specified the type of operation and value of the
                        item ID, against which the filtering will happen.
                        The possible operations are: - EQ: equals - NEQ: not
                        equals (different from) - GT: greater than - LT:
                        lower than - GTEQ: greater then or equals - LTEQ:
                        lower then or equals</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="LocalizationRq" type="LocalizationRq_Type"/>
  <xs:element name="LockOpenDayRq" type="LockOpenDayRq_Type"/>
  <xs:element name="LockOpenPeriodRq" type="LockOpenPeriodRq_Type"/>
  <xs:element name="OpenNewDayRq" type="OpenNewDayRq_Type"/>
  <xs:element name="OpenNewPeriodRq" type="OpenNewPeriodRq_Type"/>
  <xs:element name="PaginatedQueryRq" type="PaginatedQueryRq_Type"/>
  <xs:element name="PublishChainCollectionRq" type="PublishChainCollectionRq_Type"/>
  <xs:element name="PublishQuestionaryLayoutRq" type="PublishQuestionaryLayoutRq_Type"/>
  <xs:element name="QuestionaryConfigurationRq" type="QuestionaryConfigurationRq_Type"/>
  <xs:element name="RegisterFNOLSRRq" type="RegisterFNOLSRRq_Type"/>
  <xs:element name="RegisterUserQuestionaryRq" type="RegisterUserQuestionaryRq_Type"/>
  <xs:element name="RulesRq" type="RulesRq_Type"/>
  <xs:element name="SetQuestionaryConfigurationRq" type="QuestionaryConfiguration_Type"/>
  <xs:element name="SetCurrencyRateRq" type="SetCurrencyRateRq_Type"/>
  <xs:element name="UploadAttachmentsRq" type="UploadAttachmentsRq_Type"/>
  <!--Service Response messages-->
  <xs:element name="ChainRs" type="ChainRs_Type"/>
  <xs:element name="ClearNotificationsRs" type="ClearNotificationsRs_Type"/>
  <xs:element name="CloseOpenPeriodRs" type="CloseOpenPeriodRs_Type"/>
  <xs:element name="CloseOpenDayRs" type="CloseOpenDayRs_Type"/>
  <xs:element name="DeleteQuestionaryRs" type="DeleteQuestionaryRs_Type"/>
  <xs:element name="DownloadAttachmentsRs" type="DownloadAttachmentsRs_Type"/>
  <xs:element name="DueNotificationsRs" type="DueNotificationsRs_Type"/>
  <xs:element name="InvokeSBSEventRs" type="InvokeSBSEventRs_Type"/>
  <xs:element name="GetCurrencyRateRs" type="GetCurrencyRateRs_Type"/>
  <xs:element name="GetLocalizedMessageRs" type="xs:string"/>
  <xs:element name="GetOpenPeriodRs" type="GetOpenPeriodRs_Type"/>
  <xs:element name="GetOpenDayRs" type="GetOpenDayRs_Type"/>
  <xs:element name="GetParameterRs" type="xs:string"/>
  <xs:element name="GetQuestionaryLayoutsRs" type="GetQuestionaryLayoutsRs_Type"/>
  <xs:element name="GetUserQuestionaryRs" type="GetUserQuestionaryRs_Type"/>
  <xs:element name="ListOfValuesRs" type="ListOfValuesRs_Type">
    <xs:annotation>
      <xs:documentation>Response to List Of Values request. Can contain 0 or
                        more items, where eache item is identified by Item
                        ID and Item Description</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="LocalizationRs" type="LocalizationRs_Type"/>
  <xs:element name="LockOpenPeriodRs" type="LockOpenPeriodRs_Type"/>
  <xs:element name="LockOpenDayRs" type="LockOpenDayRs_Type"/>
  <xs:element name="OpenNewDayRs" type="OpenNewDayRs_Type"/>
  <xs:element name="OpenNewPeriodRs" type="OpenNewPeriodRs_Type"/>
  <xs:element name="PaginatedQueryRs" type="PaginatedQueryRs_Type"/>
  <xs:element name="PublishChainCollectionRs" type="PublishChainCollectionRs_Type"/>
  <xs:element name="PublishQuestionaryLayoutRs" type="PublishQuestionaryLayoutRs_Type"/>
  <xs:element name="QuestionaryConfigurationRs" type="QuestionaryConfiguration_Type"/>
  <xs:element name="RegisterFNOLSRRs" type="RegisterFNOLSRRs_Type"/>
  <xs:element name="RegisterUserQuestionaryRs" type="RegisterUserQuestionaryRs_Type"/>
  <xs:element name="RulesRs" type="RulesRs_Type"/>
  <xs:element name="SetCurrencyRateRs" type="SetCurrencyRateRs_Type"/>
  <xs:element name="SetQuestionaryConfigurationRs" type="SetQuestionaryConfigurationRs_Type"/>
  <xs:element name="UploadAttachmentsRs" type="UploadAttachmentsRs_Type"/>
  <xs:group name="GenericWS_Rq_Group">
    <xs:choice>
      <xs:element name="ChainRq" type="ChainRq_Type"/>
      <xs:element name="ClearNotificationsRq" type="ClearNotificationsRq_Type"/>
      <xs:element name="CloseOpenPeriodRq" type="CloseOpenPeriodRq_Type"/>
      <xs:element name="CloseOpenDayRq" type="CloseOpenDayRq_Type"/>
      <xs:element name="DeleteQuestionaryRq" type="DeleteQuestionaryRq_Type"/>
      <xs:element name="DownloadAttachmentsRq" type="DownloadAttachmentsRq_Type"/>
      <xs:element name="DueNotificationsRq" type="DueNotificationsRq_Type"/>
      <xs:element name="InvokeSBSEventRq" type="InvokeSBSEventRq_Type"/>
      <xs:element name="GetCurrencyRateRq" type="GetCurrencyRateRq_Type"/>
      <xs:element name="GetLocalizedMessageRq" type="GetLocalizedMessageRq_Type"/>
      <xs:element name="GetOpenPeriodRq" type="GetOpenPeriodRq_Type"/>
      <xs:element name="GetOpenDayRq" type="GetOpenDayRq_Type"/>
      <xs:element name="GetParameterRq" type="GetParameterRq_Type"/>
      <xs:element name="GetQuestionaryLayoutsRq" type="GetQuestionaryLayoutsRq_Type"/>
      <xs:element name="GetUserQuestionaryRq" type="GetUserQuestionaryRq_Type"/>
      <xs:element name="ListOfValuesRq" type="ListOfValuesRq_Type">
        <xs:annotation>
          <xs:documentation>Request for List Of Values (nomenclature) from the
                            system. The LOV is identified by its name and can be
                            optionally filtered by applying 1 or 2 Filter
                            Criteria. For every Filter Criteria should be
                            specified the type of operation and value of the
                            item ID, against which the filtering will happen.
                            The possible operations are: - EQ: equals - NEQ: not
                            equals (different from) - GT: greater than - LT:
                            lower than - GTEQ: greater then or equals - LTEQ:
                            lower then or equals</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LocalizationRq" type="LocalizationRq_Type"/>
      <xs:element name="LockOpenDayRq" type="LockOpenDayRq_Type"/>
      <xs:element name="LockOpenPeriodRq" type="LockOpenPeriodRq_Type"/>
      <xs:element name="OpenNewDayRq" type="OpenNewDayRq_Type"/>
      <xs:element name="OpenNewPeriodRq" type="OpenNewPeriodRq_Type"/>
      <xs:element name="PaginatedQueryRq" type="PaginatedQueryRq_Type"/>
      <xs:element name="PublishChainCollectionRq" type="PublishChainCollectionRq_Type"/>
      <xs:element name="PublishQuestionaryLayoutRq" type="PublishQuestionaryLayoutRq_Type"/>
      <xs:element name="QuestionaryConfigurationRq" type="QuestionaryConfigurationRq_Type"/>
      <xs:element name="RegisterFNOLSRRq" type="RegisterFNOLSRRq_Type"/>
      <xs:element name="RegisterUserQuestionaryRq" type="RegisterUserQuestionaryRq_Type"/>
      <xs:element name="RulesRq" type="RulesRq_Type"/>
      <xs:element name="SetQuestionaryConfigurationRq" type="QuestionaryConfiguration_Type"/>
      <xs:element name="SetCurrencyRateRq" type="SetCurrencyRateRq_Type"/>
      <xs:element name="UploadAttachmentsRq" type="UploadAttachmentsRq_Type"/>
    </xs:choice>
  </xs:group>
  <xs:group name="GenericWS_Rs_Group">
    <xs:choice>
      <xs:element name="ChainRs" type="ChainRs_Type"/>
      <xs:element name="ClearNotificationsRs" type="ClearNotificationsRs_Type"/>
      <xs:element name="CloseOpenPeriodRs" type="CloseOpenPeriodRs_Type"/>
      <xs:element name="CloseOpenDayRs" type="CloseOpenDayRs_Type"/>
      <xs:element name="DeleteQuestionaryRs" type="DeleteQuestionaryRs_Type"/>
      <xs:element name="DownloadAttachmentsRs" type="DownloadAttachmentsRs_Type"/>
      <xs:element name="DueNotificationsRs" type="DueNotificationsRs_Type"/>
      <xs:element name="InvokeSBSEventRs" type="InvokeSBSEventRs_Type"/>
      <xs:element name="GetCurrencyRateRs" type="GetCurrencyRateRs_Type"/>
      <xs:element name="GetLocalizedMessageRs" type="xs:string"/>
      <xs:element name="GetOpenPeriodRs" type="GetOpenPeriodRs_Type"/>
      <xs:element name="GetOpenDayRs" type="GetOpenDayRs_Type"/>
      <xs:element name="GetParameterRs" type="xs:string"/>
      <xs:element name="GetQuestionaryLayoutsRs" type="GetQuestionaryLayoutsRs_Type"/>
      <xs:element name="GetUserQuestionaryRs" type="GetUserQuestionaryRs_Type"/>
      <xs:element name="ListOfValuesRs" type="ListOfValuesRs_Type">
        <xs:annotation>
          <xs:documentation>Response to List Of Values request. Can contain 0 or
                            more items, where eache item is identified by Item
                            ID and Item Description</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LocalizationRs" type="LocalizationRs_Type"/>
      <xs:element name="LockOpenPeriodRs" type="LockOpenPeriodRs_Type"/>
      <xs:element name="LockOpenDayRs" type="LockOpenDayRs_Type"/>
      <xs:element name="OpenNewDayRs" type="OpenNewDayRs_Type"/>
      <xs:element name="OpenNewPeriodRs" type="OpenNewPeriodRs_Type"/>
      <xs:element name="PaginatedQueryRs" type="PaginatedQueryRs_Type"/>
      <xs:element name="PublishChainCollectionRs" type="PublishChainCollectionRs_Type"/>
      <xs:element name="PublishQuestionaryLayoutRs" type="PublishQuestionaryLayoutRs_Type"/>
      <xs:element name="QuestionaryConfigurationRs" type="QuestionaryConfiguration_Type"/>
      <xs:element name="RegisterFNOLSRRs" type="RegisterFNOLSRRs_Type"/>
      <xs:element name="RegisterUserQuestionaryRs" type="RegisterUserQuestionaryRs_Type"/>
      <xs:element name="RulesRs" type="RulesRs_Type"/>
      <xs:element name="SetCurrencyRateRs" type="SetCurrencyRateRs_Type"/>
      <xs:element name="SetQuestionaryConfigurationRs" type="SetQuestionaryConfigurationRs_Type"/>
      <xs:element name="UploadAttachmentsRs" type="UploadAttachmentsRs_Type"/>
    </xs:choice>
  </xs:group>
  <!--Elements-->
  <xs:element name="ClaimNotification" type="ClaimNotification_Type"/>
  <xs:element name="Dependees" type="Dependees_Type"/>
  <xs:element name="ListItems" type="ListItems_Type"/>
  <xs:element name="Module">
    <xs:simpleType>
      <xs:restriction base="xs:string"/>
    </xs:simpleType>
  </xs:element>
  <xs:element name="Notifications" type="Notifications_Type"/>
  <xs:element name="OperationStatus" type="OPERATION_RESULT_TYPE"/>
  <xs:element name="PolicyNotification" type="PolicyNotification_Type"/>
  <xs:element name="QuestionaryID" type="xs:string"/>
  <xs:element name="Questionary">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="QuestionaryAnswers_Type">
          <xs:attribute name="id" type="xs:string"/>
          <xs:attribute name="user" type="xs:string"/>
          <xs:attribute name="userQID" type="xs:long"/>
          <xs:attribute name="policyID" type="xs:long"/>
          <xs:attribute name="claimID" type="xs:long"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <!--Types-->
  <xs:complexType name="Answer_Type">
    <xs:attribute name="questionID" use="required" type="xs:string"/>
    <xs:attribute name="visible" type="xs:boolean"/>
    <xs:attribute name="order" type="xs:integer"/>
    <xs:attribute name="page" type="xs:integer"/>
  </xs:complexType>
  <xs:complexType name="AttachmentIds_Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BinaryAttachment_Type">
    <xs:sequence>
      <xs:element name="FileName" type="xs:string" minOccurs="0"/>
      <xs:element name="MimeType" type="MIME_TYPE_TYPE"/>
      <xs:element name="Data" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BinaryAttachments_Type">
    <xs:sequence>
      <xs:element name="BinaryAttachment" type="BinaryAttachment_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CallServiceBusRq_Type">
    <xs:sequence>
      <xs:element name="EventType" type="xs:string"/>
      <xs:element name="Parameter" type="ServiceBusParam_Type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CallServiceBusRs_Type">
    <xs:sequence>
      <xs:element name="Parameter" type="ServiceBusParam_Type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="State" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChainFile"/>
  <xs:complexType name="ChainRq_Type">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="chainID" use="required" type="xs:string"/>
    <xs:attribute name="chainFile" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ChainRs_Type">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChainConf_Type">
    <xs:sequence>
      <xs:element name="Chain" maxOccurs="unbounded" minOccurs="1" type="ChainCollType_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChainCollType_Type">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="id" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ClaimNotification_Type">
    <xs:sequence>
      <xs:element ref="ClaimNo"/>
      <xs:element ref="PolicyNo"/>
      <xs:element ref="RequestNo"/>
      <xs:element name="Documents" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClearNotificationsRq_Type">
    <xs:sequence>
      <xs:element name="UpTo" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClearNotificationsRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CrossCurrencyData_Type">
    <xs:sequence>
      <xs:element name="CurrencyInType" type="xs:string"/>
      <xs:element name="CurrencyOutType" type="xs:string"/>
      <xs:element name="SearchDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CloseOpenDayRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CloseOpenDayRq_Type"/>
  <xs:complexType name="CloseOpenPeriodRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CloseOpenPeriodRq_Type">
    <xs:sequence>
      <xs:element name="PeriodType" type="PERIOD_VALUE_TYPE" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContextParameters_Type">
    <xs:sequence>
      <xs:element type="Parameter_Type" name="Parameter" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CrossCurrency_Type">
    <xs:sequence>
      <xs:element name="CurrencyInType" type="xs:string"/>
      <xs:element name="CurrencyOutType" type="xs:string"/>
      <xs:element name="SearchDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Currency_Type">
    <xs:sequence>
      <xs:element name="CurrencyType" type="xs:string"/>
      <xs:element name="CurrencyValue" type="xs:double"/>
      <xs:element name="CurrencyQuantity" type="xs:double"/>
      <xs:element name="CurrencyDate" minOccurs="1" type="xs:date"/>
      <xs:element name="CurrencyValueBuy" minOccurs="0" type="xs:double"/>
      <xs:element name="CurrencyValueSell" type="xs:double" minOccurs="0"/>
      <xs:element name="CountryID" type="xs:string" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CurrencyUpdateResult_Type">
    <xs:sequence>
      <xs:element name="CurrencyType" type="xs:string"/>
      <xs:element name="CurrencyDate" type="xs:date"/>
      <xs:element name="CountryID" type="xs:string"/>
      <xs:element ref="OperationStatus"/>
      <xs:element name="Message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DefinedAnswers_Type">
    <xs:choice>
      <xs:element ref="ListItems"/>
      <xs:element name="SQLQuery" type="xs:string"/>
      <xs:element name="LOVAnswers" type="LOVAnswers_Type"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="DeleteQuestionaryRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteQuestionaryRq_Type">
    <xs:sequence>
      <xs:element name="QuestionaryID" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Dependees_Type">
    <xs:sequence>
      <xs:element name="Dependee" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DueNotificationsRq_Type">
    <xs:sequence>
      <xs:element name="NotificationType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DownloadAttachmentsRs_Type">
    <xs:sequence>
      <xs:element name="ZIPPackage" type="ZIPPackage_Type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DownloadAttachmentsRq_Type">
    <xs:sequence>
      <xs:element name="ReferenceID" type="ReferenceID_Type" minOccurs="1"/>
      <xs:element name="ReferenceType" type="INPUT_PARAM_TYPE" minOccurs="1"/>
      <xs:element name="ContainerType" type="CONTAINER_TYPE" minOccurs="0" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DueNotificationsRs_Type">
    <xs:sequence>
      <xs:element ref="Notifications" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ForAnswer_Type">
    <xs:sequence>
      <xs:element name="ReplacementQuestion" type="QuestionRef_Type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="answer" use="required"/>
  </xs:complexType>
  <xs:complexType name="InvokeSBSEventRq_Type">
    <xs:sequence>
      <xs:element name="EventType" type="xs:string" minOccurs="1"/>
      <xs:element name="Parameters" type="ContextParameters_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvokeSBSEventRs_Type">
    <xs:sequence>
      <xs:element name="EventType" type="xs:string" minOccurs="1"/>
      <xs:element name="Parameters" type="ContextParameters_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetCurrencyRateRq_Type">
    <xs:choice>
      <xs:element name="LocalCurrency" type="LocalCurrency_Type"/>
      <xs:element name="CrossCurrency" type="CrossCurrency_Type"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="GetCurrencyRateRs_Type">
    <xs:sequence>
      <xs:element name="CurrencyRate" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetLocalizedMessageRq_Type">
    <xs:sequence>
      <xs:element name="Thema" type="xs:string"/>
      <xs:element name="MessageID" type="xs:string"/>
      <xs:element name="Arguments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Argument" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DefaultMessage" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetOpenPeriodRq_Type"/>
  <xs:complexType name="GetOpenPeriodRs_Type">
    <xs:sequence>
      <xs:element name="Default" type="Period_Type"/>
      <xs:element name="Sys" type="Period_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetOpenDayRs_Type">
    <xs:sequence>
      <xs:element name="OpenDay" type="xs:date"/>
      <xs:element name="OpenDayID" type="xs:integer"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetOpenDayRq_Type">
    <xs:sequence>
      <xs:element name="PeriodID" type="xs:integer" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetParameterRq_Type">
    <xs:sequence>
      <xs:element name="ParamGroup" type="xs:string"/>
      <xs:element name="ParamName" type="xs:string"/>
      <xs:element name="DefaultValue" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetQuestionaryLayoutsRq_Type">
    <xs:sequence>
      <xs:element name="UpdatedOnly" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetQuestionaryLayoutsRs_Type">
    <xs:sequence>
      <xs:element ref="QuestionaryID" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserQuestionaryRq_Type">
    <xs:sequence>
      <xs:element name="UserQID" type="xs:long" minOccurs="0"/>
      <xs:element name="ID" type="xs:string" minOccurs="0"/>
      <xs:element minOccurs="0" ref="ClaimID"/>
      <xs:element minOccurs="0" ref="PolicyID"/>
      <xs:element name="User" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserQuestionaryRs_Type">
    <xs:sequence>
      <xs:element ref="Questionary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IDComponent_Type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Instructions_Type">
    <xs:sequence>
      <xs:element name="LoadQuestionGroup" minOccurs="0" type="ReferredGroups_Type"/>
      <xs:element name="InvokeWebService" minOccurs="0" type="WSRef_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListItem_Type">
    <xs:sequence>
      <xs:element name="ItemID" type="xs:string"/>
      <xs:element name="ItemDescription" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListItems_Type">
    <xs:sequence>
      <xs:element name="ListItem" type="ListItem_Type" maxOccurs="unbounded" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListOfValuesRq_Type">
    <xs:sequence>
      <xs:element name="LOVName" type="xs:string"/>
      <xs:element maxOccurs="1" minOccurs="0" ref="FilterCriteria"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListOfValuesRs_Type">
    <xs:sequence>
      <xs:element minOccurs="0" ref="Dependees"/>
      <xs:element minOccurs="0" ref="ListItems"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocalizationRq_Type">
    <xs:sequence>
      <xs:element ref="Module"/>
      <xs:element name="Service" type="xs:string"/>
      <xs:element name="Field" minOccurs="0" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocalizationRs_Type">
    <xs:sequence>
      <xs:element ref="ListItems" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LockOpenDayRq_Type"/>
  <xs:complexType name="LockOpenPeriodRq_Type"/>
  <xs:complexType name="LockOpenPeriodRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage" maxOccurs="1" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocalCurrency_Type">
    <xs:sequence>
      <xs:element name="CurrencyType" type="xs:string"/>
      <xs:element name="SearchDate" type="xs:date"/>
      <xs:element name="RateType" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="FIXING|BUY|SELL"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LockOpenDayRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage" minOccurs="0"/>
      <xs:element name="LockedDay" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocalCurrencyData_Type">
    <xs:sequence>
      <xs:element name="CurrencyType" type="xs:string"/>
      <xs:element name="SearchDate" type="xs:date"/>
      <xs:element name="RateType" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="FIXING|BUY|SELL"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LOVAnswers_Type">
    <xs:sequence>
      <xs:element name="DependsOn" type="QuestionRef_Type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="lovName" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="Notification_Type">
    <xs:sequence>
      <xs:element ref="ClientPID"/>
      <xs:element ref="Contact"/>
      <xs:element ref="PolicyNotification" minOccurs="0"/>
      <xs:element ref="ClaimNotification" minOccurs="0"/>
      <xs:element name="NotificationMessage" minOccurs="0" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Notifications_Type">
    <xs:sequence>
      <xs:element name="Notification" type="Notification_Type" maxOccurs="unbounded" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OnSubmit_Type">
    <xs:sequence>
      <xs:element name="TargetWebService" type="WSRef_Type"/>
      <xs:element name="Processor" type="xs:string" minOccurs="0"/>
      <xs:element name="ForwardTo" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OpenNewDayRq_Type">
    <xs:sequence>
      <xs:element name="OrderDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OpenNewDayRs_Type">
    <xs:sequence>
      <xs:element name="OrderID" type="xs:integer"/>
      <xs:element ref="ReturningMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OpenNewPeriodRq_Type">
    <xs:sequence>
      <xs:group ref="OpenNewPeriodData_Group" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OpenNewPeriodRs_Type">
    <xs:sequence>
      <xs:element name="GetPeriodData" type="Period_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Parameter_Type" mixed="true">
    <xs:choice minOccurs="0">
      <xs:element name="RowSet" type="RowSetType" minOccurs="0"/>
      <xs:element name="Custom" minOccurs="0" type="xs:anyType"/>
    </xs:choice>
    <xs:attribute name="type" type="JavaClassType" default="java.lang.String"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="refId" type="XPathType"/>
    <xs:attribute name="format" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="PaginatedQueryRq_Type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="QueryID" type="xs:string"/>
        <xs:element name="ViewID" type="ViewIDType"/>
      </xs:choice>
      <xs:element name="StartRow" type="xs:integer" minOccurs="0"/>
      <xs:element name="RowCount" minOccurs="0" type="xs:integer"/>
      <xs:element name="ResultSetID" type="xs:string" minOccurs="0"/>
      <xs:element name="FilterCriteria" minOccurs="0" type="FilterCriteria_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaginatedQueryRs_Type">
    <xs:sequence>
      <xs:element name="TotalRowCount" type="xs:int" minOccurs="0"/>
      <xs:element name="ResultSetID" minOccurs="0" type="xs:string"/>
      <xs:element name="RowSet" type="QueryRowSet_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Period_Type">
    <xs:sequence>
      <xs:element name="PeriodId" type="xs:integer"/>
      <xs:element name="Year" type="xs:integer"/>
      <xs:element name="Quart" type="xs:integer"/>
      <xs:element name="Month" type="xs:integer"/>
      <xs:element ref="ReturningMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PolicyNotification_Type">
    <xs:sequence>
      <xs:element ref="PolicyNo"/>
      <xs:element ref="ProductCode"/>
      <xs:element ref="InsuranceBegin"/>
      <xs:element ref="InsuranceEnd"/>
      <xs:element ref="Premium"/>
      <xs:element name="ConfirmRenewalUntil" type="xs:date" minOccurs="0"/>
      <xs:element name="NotificationType" type="POLICY_NOTIFICATION_TYPE"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Processing_Type">
    <xs:sequence>
      <xs:element name="Instructions" type="Instructions_Type" minOccurs="0"/>
      <xs:element name="ReplacementAnswers" minOccurs="0" type="ReplacementAnswers_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PublishChainCollectionRq_Type">
    <xs:sequence>
      <xs:element name="Configuration" type="ChainConf_Type" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PublishChainCollectionRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PublishQuestionaryLayoutRq_Type">
    <xs:sequence>
      <xs:element ref="QuestionaryID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PublishQuestionaryLayoutRs_Type">
    <xs:sequence>
      <xs:element ref="OperationStatus"/>
      <xs:element ref="ReturningMessage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryColumn_Type" mixed="true">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" use="required" type="xs:string"/>
        <xs:attribute name="type" use="required" type="ANSWER_DATA_TYPE"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="QueryRow_Type">
    <xs:sequence>
      <xs:element name="Column" type="QueryColumn_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryRowSet_Type">
    <xs:sequence>
      <xs:element name="Row" type="QueryRow_Type" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionaryAnswers_Type">
    <xs:sequence>
      <xs:element name="Answer" minOccurs="1" maxOccurs="unbounded" type="Answer_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionaryConfigurationRq_Type">
    <xs:sequence>
      <xs:element ref="QuestionaryID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionaryConfiguration_Type">
    <xs:sequence>
      <xs:element name="ID" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="OnSubmit" type="OnSubmit_Type"/>
      <xs:element name="Order" type="xs:string"/>
      <xs:element name="ControllerPrecedence" type="CONTROLLER_PRECEDENCE_TYPE" minOccurs="0"/>
      <xs:element name="Questions">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Question" type="QuestionDef_Type" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MainGroup" type="QuestionsGroup_Type"/>
      <xs:element name="Groups" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Group" type="QuestionsGroup_Type" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegisterUserQuestionaryRq_Type">
    <xs:sequence>
      <xs:element ref="Questionary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegisterUserQuestionaryRs_Type">
    <xs:sequence>
      <xs:element name="UserQID" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RowType">
    <xs:sequence>
      <xs:element name="Column" type="Parameter_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RowSetType">
    <xs:sequence>
      <xs:element name="Row" type="RowType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Rule_Type">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="ID" type="xs:long"/>
        <xs:element name="Code" type="xs:string"/>
      </xs:choice>
      <xs:element name="Type" type="xs:string" minOccurs="0"/>
      <xs:element name="Parameters" type="ContextParameters_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RuleResult_Type">
    <xs:sequence>
      <xs:element name="RuleRef" type="Rule_Type"/>
      <xs:element name="Status" type="BOOLEAN_NUMBER_TYPE"/>
      <xs:element name="Message" type="xs:string" minOccurs="0"/>
      <xs:element name="Value" type="Parameter_Type" minOccurs="0"/>
      <xs:element name="OutputParameters" type="ContextParameters_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RuleResultCollection_Type">
    <xs:sequence>
      <xs:element name="RuleResult" type="RuleResult_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RulesCollection_Type">
    <xs:sequence>
      <xs:element name="RuleRef" type="Rule_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RulesRq_Type">
    <xs:sequence>
      <xs:element name="GlobalParameters" type="ContextParameters_Type" minOccurs="0"/>
      <xs:element name="Rules" type="RulesCollection_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RulesRs_Type">
    <xs:sequence>
      <xs:element name="Results" type="RuleResultCollection_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceBusParam_Type" mixed="true">
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="SetQuestionaryConfigurationRs_Type">
    <xs:sequence>
      <xs:element ref="ReturningMessage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionDef_Type">
    <xs:sequence>
      <xs:element name="ID" type="xs:string"/>
      <xs:element name="Text" type="xs:string"/>
      <xs:element name="Mandatory" type="BOOLEAN_STRING_TYPE"/>
      <xs:element name="DataType" type="ANSWER_DATA_TYPE"/>
      <xs:element name="DefaultAnswer" type="xs:string" minOccurs="0"/>
      <xs:element name="Page" type="xs:integer"/>
      <xs:element name="Order" type="xs:string"/>
      <xs:element name="Hidden" type="BOOLEAN_STRING_TYPE"/>
      <xs:element name="Formatting" type="xs:string" minOccurs="0"/>
      <xs:element name="ReadOnly" type="BOOLEAN_STRING_TYPE"/>
      <xs:element name="Section" type="xs:string" minOccurs="0"/>
      <xs:element name="DefinedAnswers" minOccurs="0" type="DefinedAnswers_Type"/>
      <xs:element name="Processing" type="Processing_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QuestionGroupRef_Type">
    <xs:attribute name="questionGroupID" use="required" type="xs:string"/>
    <xs:attribute name="answer" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="QuestionRef_Type">
    <xs:attribute name="questionID" use="required" type="xs:string"/>
    <xs:attribute name="answer" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="QuestionsGroup_Type">
    <xs:sequence>
      <xs:element name="QuestionRef" type="QuestionRef_Type" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" use="optional" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ReferenceID_Type">
    <xs:sequence>
      <xs:element name="IDComponent" type="IDComponent_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferredGroups_Type">
    <xs:sequence>
      <xs:element name="QuestionGroupRef" type="QuestionGroupRef_Type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegisterChainRq_Type">
    <xs:sequence>
      <xs:element name="ChainFile" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegisterChainRs_Type"/>
  <xs:complexType name="RegisterFNOLSRRq_Type">
    <xs:sequence>
      <xs:element ref="PolicyID"/>
      <xs:element name="EventType" type="xs:int"/>
      <xs:element name="EventDate" type="xs:date"/>
      <xs:element name="EventDescription" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegisterFNOLSRRs_Type">
    <xs:sequence>
      <xs:element name="SRID" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReplacementAnswers_Type">
    <xs:sequence>
      <xs:element name="ForAnswer" maxOccurs="unbounded" type="ForAnswer_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SetCurrencyRateRs_Type">
    <xs:sequence>
      <xs:element name="CurrencyUpdateResult" type="CurrencyUpdateResult_Type" maxOccurs="unbounded" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SetCurrencyRateRq_Type">
    <xs:sequence>
      <xs:element name="Currency" minOccurs="1" maxOccurs="unbounded" type="Currency_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UploadAttachmentsRs_Type">
    <xs:sequence>
      <xs:element name="BinaryAttachments" type="AttachmentIds_Type" minOccurs="0"/>
      <xs:element name="WFAttachments" type="AttachmentIds_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UploadAttachmentsRq_Type">
    <xs:sequence>
      <xs:element name="ReferenceID" type="ReferenceID_Type" minOccurs="1"/>
      <xs:element name="ReferenceType" type="INPUT_PARAM_TYPE" minOccurs="1"/>
      <xs:element name="ContainerType" type="CONTAINER_TYPE" minOccurs="0" nillable="true"/>
      <xs:element name="BinaryAttachments" type="BinaryAttachments_Type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ViewIDType">
    <xs:attribute name="amName" type="xs:string" use="required"/>
    <xs:attribute name="amClass" type="xs:string" use="required"/>
    <xs:attribute name="viewName" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="WSRef_Type">
    <xs:sequence>
      <xs:element name="ParamQuestion" minOccurs="0" maxOccurs="unbounded" type="QuestionRef_Type"/>
    </xs:sequence>
    <xs:attribute name="wsRef" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ZIPPackage_Type">
    <xs:sequence>
      <xs:element name="FileName" type="xs:string"/>
      <xs:element name="MimeType" type="xs:string"/>
      <xs:element name="Data" type="xs:base64Binary" xmime:expectedContentTypes="application/zip"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="OpenNewPeriodData_Group">
    <xs:sequence>
      <xs:element name="Year" type="xs:integer"/>
      <xs:element name="Quart" type="xs:integer"/>
      <xs:element name="Month" type="xs:integer"/>
    </xs:sequence>
  </xs:group>
  <xs:simpleType name="CHAIN_OVERRIDE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="OVERRIDE|APPEND|DENY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CONTAINER_TYPE">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BINARY_DATA"/>
      <xs:enumeration value="WF_ATTACHMENT"/>
      <xs:enumeration value="BOTH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CONTROLLER_PRECEDENCE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="WS|CONFIG"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="INPUT_PARAM_TYPE">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLAIM"/>
      <xs:enumeration value="POLICY"/>
      <xs:enumeration value="PEOPLE"/>
      <xs:enumeration value="DOCUMENT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="JavaClassType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w+(\.\w+)*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OPERATION_RESULT_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="S|W|E"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PERIOD_VALUE_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="DAY|MONTH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="POLICY_NOTIFICATION_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="TORENEW|DUEPREM|DOCWAIT|CUSTOM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="XPathType">
    <xs:restriction base="xs:string">
      <xs:annotation>
        <xs:documentation>TODO</xs:documentation>
      </xs:annotation>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ANSWER_DATA_TYPE">
    <xs:restriction base="xs:string">
      <xs:pattern value="T|D|N"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint></con:endpoints><con:operation id="2dc4a587-3817-4dc5-925d-c876b0d7fd92" isOneWay="false" action="process" name="chain" bindingOperationName="chain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a1b78ec5-91d0-49d4-bd8c-5f0bb1595b1c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:ChainRq chainID="?" chainFile="?">\r
         <!--You may enter ANY elements at this point-->\r
      </x/:ChainRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="277969c6-5258-4d6f-8b29-6354d57c93a3" isOneWay="false" action="process" name="clearNotifications" bindingOperationName="clearNotifications" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="688b4fec-0736-45d8-9e2d-83555d5c0611" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:ClearNotificationsRq>\r
         <x/:UpTo>?</x/:UpTo>\r
      </x/:ClearNotificationsRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="006546ab-baec-4dfe-ad41-55a35896b2dc" isOneWay="false" action="process" name="closeOpenDay" bindingOperationName="closeOpenDay" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2cb45874-233d-434b-9cd5-d3f49c7364f7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:CloseOpenDayRq/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="81b9c3e7-e9c1-4f35-a46b-12879884ba4d" isOneWay="false" action="process" name="closeOpenPeriod" bindingOperationName="closeOpenPeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6caa8dbf-65c0-4322-b2e2-e1432d81259a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:CloseOpenPeriodRq>\r
         <x/:PeriodType>?</x/:PeriodType>\r
      </x/:CloseOpenPeriodRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="f0869f1c-40c7-406c-93c8-2a72f31bda03" isOneWay="false" action="process" name="deleteQuestionary" bindingOperationName="deleteQuestionary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5a6f9c5a-dde3-47b1-b41a-ef4f8cb60570" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:DeleteQuestionaryRq>\r
         <x/:QuestionaryID>?</x/:QuestionaryID>\r
      </x/:DeleteQuestionaryRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="9c93ddbe-5044-481d-8b6a-01a58138b4d2" isOneWay="false" action="process" name="downloadAttachments" bindingOperationName="downloadAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4303e63d-07e6-42dd-afbc-59ebbecee6a4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:DownloadAttachmentsRq>\r
         <x/:ReferenceID>\r
            <!--1 or more repetitions:-->\r
            <x/:IDComponent name="?">?</x/:IDComponent>\r
         </x/:ReferenceID>\r
         <x/:ReferenceType>?</x/:ReferenceType>\r
         <!--Optional:-->\r
         <x/:ContainerType>?</x/:ContainerType>\r
      </x/:DownloadAttachmentsRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="511ed957-6d8c-4367-909e-9153cbd54f54" isOneWay="false" action="process" name="dueNotifications" bindingOperationName="dueNotifications" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c53e04b-6aa7-424b-965c-1f25589e7218" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:DueNotificationsRq>\r
         <!--Optional:-->\r
         <x/:NotificationType>?</x/:NotificationType>\r
      </x/:DueNotificationsRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="7a37bab4-1784-49db-858e-d2be18272a3f" isOneWay="false" action="process" name="getCurrencyRate" bindingOperationName="getCurrencyRate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="48fb38b9-e1b6-4714-9933-63eebb890a30" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetCurrencyRateRq>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <x/:LocalCurrency>\r
            <x/:CurrencyType>?</x/:CurrencyType>\r
            <x/:SearchDate>?</x/:SearchDate>\r
            <!--Optional:-->\r
            <x/:RateType>?</x/:RateType>\r
         </x/:LocalCurrency>\r
         <x/:CrossCurrency>\r
            <x/:CurrencyInType>?</x/:CurrencyInType>\r
            <x/:CurrencyOutType>?</x/:CurrencyOutType>\r
            <x/:SearchDate>?</x/:SearchDate>\r
         </x/:CrossCurrency>\r
      </x/:GetCurrencyRateRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="c984418c-edab-4cf2-aa07-c62d46734c0e" isOneWay="false" action="process" name="getLocalizedMessage" bindingOperationName="getLocalizedMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9a40b5f7-af0c-44d7-89bb-9a441885f22a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetLocalizedMessageRq>\r
         <x/:Thema>?</x/:Thema>\r
         <x/:MessageID>?</x/:MessageID>\r
         <!--Optional:-->\r
         <x/:Arguments>\r
            <!--1 or more repetitions:-->\r
            <x/:Argument>?</x/:Argument>\r
         </x/:Arguments>\r
         <!--Optional:-->\r
         <x/:DefaultMessage>?</x/:DefaultMessage>\r
      </x/:GetLocalizedMessageRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="1589adce-d755-42dc-a849-9079783b2176" isOneWay="false" action="process" name="getOpenDay" bindingOperationName="getOpenDay" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1dd9f61d-2072-4e6b-82ae-d36a6d86ffc7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetOpenDayRq>\r
         <!--Optional:-->\r
         <x/:PeriodID>?</x/:PeriodID>\r
      </x/:GetOpenDayRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="38f36a4b-a027-4544-a28e-80c1828d02cc" isOneWay="false" action="process" name="getOpenPeriod" bindingOperationName="getOpenPeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="521b189b-f4b4-4a5a-b80d-4f815c24db68" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetOpenPeriodRq/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="d8d1fc88-dd8b-4cf3-860f-87f68079c2ca" isOneWay="false" action="process" name="getParameter" bindingOperationName="getParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8a59a25e-c205-428d-a40c-def84aefdc04" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetParameterRq>\r
         <x/:ParamGroup>?</x/:ParamGroup>\r
         <x/:ParamName>?</x/:ParamName>\r
         <x/:DefaultValue>?</x/:DefaultValue>\r
      </x/:GetParameterRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="fd848093-765c-464c-a1ca-6cffce3435dd" isOneWay="false" action="process" name="getQuestionaryLayouts" bindingOperationName="getQuestionaryLayouts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4a5b3312-a3be-411c-8fd0-e12e7c20f82e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetQuestionaryLayoutsRq>\r
         <!--Optional:-->\r
         <x/:UpdatedOnly>?</x/:UpdatedOnly>\r
      </x/:GetQuestionaryLayoutsRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="e37d7a73-4801-41fb-bf05-51f51d859393" isOneWay="false" action="process" name="getUserQuestionary" bindingOperationName="getUserQuestionary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="801f683b-a73a-469b-94ec-2536514c5366" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:GetUserQuestionaryRq>\r
         <!--Optional:-->\r
         <x/:UserQID>?</x/:UserQID>\r
         <!--Optional:-->\r
         <x/:ID>?</x/:ID>\r
         <!--Optional:-->\r
         <x/:ClaimID>?</x/:ClaimID>\r
         <!--Optional:-->\r
         <x/:PolicyID>?</x/:PolicyID>\r
         <!--Optional:-->\r
         <x/:User>?</x/:User>\r
      </x/:GetUserQuestionaryRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="551ca267-6829-4b6e-a232-ff3bb596fc7c" isOneWay="false" action="process" name="invokeSBSEvent" bindingOperationName="invokeSBSEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c4c5f3c9-6c40-47f4-9b6f-f42a1260425f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:InvokeSBSEventRq>\r
         <x/:EventType>?</x/:EventType>\r
         <!--Optional:-->\r
         <x/:Parameters>\r
            <!--Zero or more repetitions:-->\r
            <x/:Parameter type="java.lang.String" name="?" refId="?" format="?">\r
               e\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <!--Optional:-->\r
               <x/:RowSet>\r
                  <!--1 or more repetitions:-->\r
                  <x/:Row>\r
                     <!--1 or more repetitions:-->\r
                     <x/:Column/>\r
                  </x/:Row>\r
               </x/:RowSet>\r
               <!--Optional:-->\r
               <x/:Custom>?</x/:Custom>\r
               gero\r
            </x/:Parameter>\r
         </x/:Parameters>\r
      </x/:InvokeSBSEventRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="4f514839-a3da-42f9-9901-fdc47df448f0" isOneWay="false" action="process" name="listOfValues" bindingOperationName="listOfValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c0ef5e5b-15d1-4d81-b86f-706ec7081424" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:ListOfValuesRq>\r
         <x/:LOVName>?</x/:LOVName>\r
         <!--Optional:-->\r
         <x/:FilterCriteria>\r
            <!--1 or more repetitions:-->\r
            <x/:FilterCriterion operation="?" value="?" field="?" conjunction="?"/>\r
         </x/:FilterCriteria>\r
      </x/:ListOfValuesRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="e2421f8e-b2d4-4f4b-bc62-0b8783519234" isOneWay="false" action="process" name="localization" bindingOperationName="localization" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2f62acd9-5162-4881-a4a8-8b3231bb718e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:LocalizationRq>\r
         <x/:Module>?</x/:Module>\r
         <x/:Service>?</x/:Service>\r
         <!--Optional:-->\r
         <x/:Field>?</x/:Field>\r
      </x/:LocalizationRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="c8e6274f-0d75-4a54-8bf6-693ae8a43c79" isOneWay="false" action="process" name="lockOpenDay" bindingOperationName="lockOpenDay" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2ddfeb0f-1fa3-490e-b13e-41c667739e1d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:LockOpenDayRq/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="673ddb1d-0e67-4df5-85fa-7be93419e5c5" isOneWay="false" action="process" name="lockOpenPeriod" bindingOperationName="lockOpenPeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4f7a1862-a38c-47d8-9caf-97ad671e8810" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:LockOpenPeriodRq/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="4cdbc4f7-4be5-4064-891b-a1483630a9e7" isOneWay="false" action="process" name="openNewDay" bindingOperationName="openNewDay" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c58fd168-cc98-4f40-ab5b-c5c4bc09aff0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:OpenNewDayRq>\r
         <x/:OrderDate>?</x/:OrderDate>\r
      </x/:OpenNewDayRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="6e83b808-70b4-40f6-968b-2f7fe6e64109" isOneWay="false" action="process" name="openNewPeriod" bindingOperationName="openNewPeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cd229f3f-0627-480b-8c98-2e093dadd45e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:OpenNewPeriodRq>\r
         <x/:Year>?</x/:Year>\r
         <x/:Quart>?</x/:Quart>\r
         <x/:Month>?</x/:Month>\r
      </x/:OpenNewPeriodRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="b2f9c070-033b-455f-b4e4-f2674aef2923" isOneWay="false" action="process" name="paginatedQuery" bindingOperationName="paginatedQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d8417764-6c18-4921-80e3-aaefa239e2a4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:PaginatedQueryRq>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <x/:QueryID>?</x/:QueryID>\r
         <x/:ViewID amName="?" amClass="?" viewName="?"/>\r
         <!--Optional:-->\r
         <x/:StartRow>?</x/:StartRow>\r
         <!--Optional:-->\r
         <x/:RowCount>?</x/:RowCount>\r
         <!--Optional:-->\r
         <x/:ResultSetID>?</x/:ResultSetID>\r
         <!--Optional:-->\r
         <x/:FilterCriteria>\r
            <!--1 or more repetitions:-->\r
            <x/:FilterCriterion operation="?" value="?" field="?" conjunction="?"/>\r
         </x/:FilterCriteria>\r
      </x/:PaginatedQueryRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="8b24ec20-14d4-4636-b662-3b42a98723f2" isOneWay="false" action="process" name="publishChainCollection" bindingOperationName="publishChainCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2537fc69-bc30-4829-8367-13d3a9bc1c92" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:PublishChainCollectionRq>\r
         <x/:Configuration>\r
            <!--1 or more repetitions:-->\r
            <x/:Chain id="?">\r
               <!--You may enter ANY elements at this point-->\r
            </x/:Chain>\r
         </x/:Configuration>\r
      </x/:PublishChainCollectionRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="09203718-add5-41a3-b002-e51303cbb049" isOneWay="false" action="process" name="publishQuestionaryLayout" bindingOperationName="publishQuestionaryLayout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="14768381-0497-4d59-9416-ed24b60aa9f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:PublishQuestionaryLayoutRq>\r
         <x/:QuestionaryID>?</x/:QuestionaryID>\r
      </x/:PublishQuestionaryLayoutRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="9bb1db57-697d-49ce-9ece-60162ddb8992" isOneWay="false" action="process" name="questionaryConfiguration" bindingOperationName="questionaryConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d85f843c-746d-4ad4-bf2d-148019d68daf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:QuestionaryConfigurationRq>\r
         <x/:QuestionaryID>?</x/:QuestionaryID>\r
      </x/:QuestionaryConfigurationRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="75051681-426a-4a05-94df-bc6873f51bd1" isOneWay="false" action="process" name="registerFNOLSR" bindingOperationName="registerFNOLSR" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="17b9ab0a-1667-4322-a395-f86e0fefd7f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:RegisterFNOLSRRq>\r
         <x/:PolicyID>?</x/:PolicyID>\r
         <x/:EventType>?</x/:EventType>\r
         <x/:EventDate>?</x/:EventDate>\r
         <x/:EventDescription>?</x/:EventDescription>\r
      </x/:RegisterFNOLSRRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="66ce7cd0-090a-429e-9d36-5857ceb4201b" isOneWay="false" action="process" name="registerUserQuestionary" bindingOperationName="registerUserQuestionary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f103be3f-4afd-4842-8008-b4a6d4d55cfe" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:RegisterUserQuestionaryRq>\r
         <x/:Questionary id="?" user="?" userQID="?" policyID="?" claimID="?">\r
            <!--1 or more repetitions:-->\r
            <x/:Answer questionID="?" visible="?" order="?" page="?"/>\r
         </x/:Questionary>\r
      </x/:RegisterUserQuestionaryRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="44158ee8-c5f6-4774-8f57-9823c4bb83c2" isOneWay="false" action="process" name="rules" bindingOperationName="rules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0162190f-f398-4feb-a100-1e476b993b72" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:RulesRq>\r
         <!--Optional:-->\r
         <x/:GlobalParameters>\r
            <!--Zero or more repetitions:-->\r
            <x/:Parameter type="java.lang.String" name="?" refId="?" format="?">\r
               e\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <!--Optional:-->\r
               <x/:RowSet>\r
                  <!--1 or more repetitions:-->\r
                  <x/:Row>\r
                     <!--1 or more repetitions:-->\r
                     <x/:Column/>\r
                  </x/:Row>\r
               </x/:RowSet>\r
               <!--Optional:-->\r
               <x/:Custom>?</x/:Custom>\r
               gero\r
            </x/:Parameter>\r
         </x/:GlobalParameters>\r
         <x/:Rules>\r
            <!--1 or more repetitions:-->\r
            <x/:RuleRef>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <x/:ID>?</x/:ID>\r
               <x/:Code>?</x/:Code>\r
               <!--Optional:-->\r
               <x/:Type>?</x/:Type>\r
               <!--Optional:-->\r
               <x/:Parameters>\r
                  <!--Zero or more repetitions:-->\r
                  <x/:Parameter type="java.lang.String" name="?" refId="?" format="?">\r
                     cum\r
                     <!--You have a CHOICE of the next 2 items at this level-->\r
                     <!--Optional:-->\r
                     <x/:RowSet>\r
                        <!--1 or more repetitions:-->\r
                        <x/:Row>\r
                           <!--1 or more repetitions:-->\r
                           <x/:Column/>\r
                        </x/:Row>\r
                     </x/:RowSet>\r
                     <!--Optional:-->\r
                     <x/:Custom>?</x/:Custom>\r
                     sonoras\r
                  </x/:Parameter>\r
               </x/:Parameters>\r
            </x/:RuleRef>\r
         </x/:Rules>\r
      </x/:RulesRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="36a299bc-fa4b-430f-89d2-365757a6167a" isOneWay="false" action="process" name="setCurrencyRate" bindingOperationName="setCurrencyRate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="12f548a9-6cdf-44bb-963e-ce46f5cf425c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:SetCurrencyRateRq>\r
         <!--1 or more repetitions:-->\r
         <x/:Currency>\r
            <x/:CurrencyType>?</x/:CurrencyType>\r
            <x/:CurrencyValue>?</x/:CurrencyValue>\r
            <x/:CurrencyQuantity>?</x/:CurrencyQuantity>\r
            <x/:CurrencyDate>?</x/:CurrencyDate>\r
            <!--Optional:-->\r
            <x/:CurrencyValueBuy>?</x/:CurrencyValueBuy>\r
            <!--Optional:-->\r
            <x/:CurrencyValueSell>?</x/:CurrencyValueSell>\r
            <x/:CountryID>?</x/:CountryID>\r
         </x/:Currency>\r
      </x/:SetCurrencyRateRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="cba5e520-1543-4aa0-baeb-3851c4a23a10" isOneWay="false" action="process" name="setQuestionaryConfiguration" bindingOperationName="setQuestionaryConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3eacc74b-ec27-4dfc-bb26-a1bcceba0eab" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/insis-soapws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:SetQuestionaryConfigurationRq>\r
         <x/:ID>?</x/:ID>\r
         <x/:Name>?</x/:Name>\r
         <x/:OnSubmit>\r
            <x/:TargetWebService wsRef="?">\r
               <!--Zero or more repetitions:-->\r
               <x/:ParamQuestion questionID="?" answer="?"/>\r
            </x/:TargetWebService>\r
            <!--Optional:-->\r
            <x/:Processor>?</x/:Processor>\r
            <!--Optional:-->\r
            <x/:ForwardTo>?</x/:ForwardTo>\r
         </x/:OnSubmit>\r
         <x/:Order>?</x/:Order>\r
         <!--Optional:-->\r
         <x/:ControllerPrecedence>?</x/:ControllerPrecedence>\r
         <x/:Questions>\r
            <!--1 or more repetitions:-->\r
            <x/:Question>\r
               <x/:ID>?</x/:ID>\r
               <x/:Text>?</x/:Text>\r
               <x/:Mandatory>?</x/:Mandatory>\r
               <x/:DataType>?</x/:DataType>\r
               <!--Optional:-->\r
               <x/:DefaultAnswer>?</x/:DefaultAnswer>\r
               <x/:Page>?</x/:Page>\r
               <x/:Order>?</x/:Order>\r
               <x/:Hidden>?</x/:Hidden>\r
               <!--Optional:-->\r
               <x/:Formatting>?</x/:Formatting>\r
               <x/:ReadOnly>?</x/:ReadOnly>\r
               <!--Optional:-->\r
               <x/:Section>?</x/:Section>\r
               <!--Optional:-->\r
               <x/:DefinedAnswers>\r
                  <!--You have a CHOICE of the next 3 items at this level-->\r
                  <x/:ListItems>\r
                     <!--1 or more repetitions:-->\r
                     <x/:ListItem>\r
                        <x/:ItemID>?</x/:ItemID>\r
                        <x/:ItemDescription>?</x/:ItemDescription>\r
                     </x/:ListItem>\r
                  </x/:ListItems>\r
                  <x/:SQLQuery>?</x/:SQLQuery>\r
                  <x/:LOVAnswers lovName="?">\r
                     <!--Zero or more repetitions:-->\r
                     <x/:DependsOn questionID="?" answer="?"/>\r
                  </x/:LOVAnswers>\r
               </x/:DefinedAnswers>\r
               <!--Optional:-->\r
               <x/:Processing>\r
                  <!--Optional:-->\r
                  <x/:Instructions>\r
                     <!--Optional:-->\r
                     <x/:LoadQuestionGroup>\r
                        <!--1 or more repetitions:-->\r
                        <x/:QuestionGroupRef questionGroupID="?" answer="?"/>\r
                     </x/:LoadQuestionGroup>\r
                     <!--Optional:-->\r
                     <x/:InvokeWebService wsRef="?">\r
                        <!--Zero or more repetitions:-->\r
                        <x/:ParamQuestion questionID="?" answer="?"/>\r
                     </x/:InvokeWebService>\r
                  </x/:Instructions>\r
                  <!--Optional:-->\r
                  <x/:ReplacementAnswers>\r
                     <!--1 or more repetitions:-->\r
                     <x/:ForAnswer answer="?">\r
                        <!--1 or more repetitions:-->\r
                        <x/:ReplacementQuestion questionID="?" answer="?"/>\r
                     </x/:ForAnswer>\r
                  </x/:ReplacementAnswers>\r
               </x/:Processing>\r
            </x/:Question>\r
         </x/:Questions>\r
         <x/:MainGroup id="?">\r
            <!--1 or more repetitions:-->\r
            <x/:QuestionRef questionID="?" answer="?"/>\r
         </x/:MainGroup>\r
         <!--Optional:-->\r
         <x/:Groups>\r
            <!--1 or more repetitions:-->\r
            <x/:Group id="?">\r
               <!--1 or more repetitions:-->\r
               <x/:QuestionRef questionID="?" answer="?"/>\r
            </x/:Group>\r
         </x/:Groups>\r
      </x/:SetQuestionaryConfigurationRq>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/></con:call></con:operation><con:operation id="a4fa6b13-a065-4175-a582-6e5b7649f49f" isOneWay="false" action="process" name="uploadAttachments" bindingOperationName="uploadAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e58a2711-0ff5-49f7-b7c7-694657db7995" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7101/insisws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:insis="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">
   <soapenv:Header/>
   <soapenv:Body>
      <insis:UploadAttachmentsRq xmlns="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">
	    <insis:ReferenceID>
	        <insis:IDComponent name="PolicyNo">100000037359</insis:IDComponent>
	        <insis:IDComponent name="DocId">MC</insis:IDComponent>
	    </insis:ReferenceID>
	    <insis:ReferenceType>POLICY</insis:ReferenceType>
	    <insis:ContainerType>BINARY_DATA</insis:ContainerType>
	    <insis:BinaryAttachments>
	        <insis:BinaryAttachment>
	            <insis:MimeType>image/x-png</insis:MimeType>
	            <insis:Data>
	                <Include href="cid:Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png" xmlns="http://www.w3.org/2004/08/xop/include"/>
	            </insis:Data>
	        </insis:BinaryAttachment>
	    </insis:BinaryAttachments>
	  </insis:UploadAttachmentsRq>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png</con:name><con:contentType>image/x-png</con:contentType><con:size>202872</con:size><con:contentId>Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png</con:contentId><con:part xsi:nil="true"/><con:data></con:data><con:id>2daf51c1-19b2-409f-ab27-180bcfe6d693</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="process"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="cf624cfc-9c80-41c3-913a-bfc1251c3b79" name="UploadAttachmentTS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f1bee582-26e9-4f48-9702-ab4b35ae8c11" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Upload" searchProperties="true"><con:settings/><con:testStep type="request" name="UploadAttachemntRequest" id="4a9b86fa-8bd2-4c61-9747-81b659364856"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>InsisGenericWSPortBinding</con:interface><con:operation>uploadAttachments</con:operation><con:request name="UploadAttachemntRequest" id="3b27280b-48eb-49b0-b7ce-191ae13fa261" outgoingWss="usernametoken"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8100/insisws/InsisGenericWSPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:insis="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">
   <soapenv:Header/>
   <soapenv:Body>
      <insis:UploadAttachmentsRq xmlns="http://www.fadata.bg/Insurance_Messages/v3.0/xml/">
	    <insis:ReferenceID>
	        <insis:IDComponent name="PolicyNo">100000037359</insis:IDComponent>
	        <insis:IDComponent name="DocId">MC</insis:IDComponent>
	    </insis:ReferenceID>
	    <insis:ReferenceType>POLICY</insis:ReferenceType>
	    <insis:ContainerType>BINARY_DATA</insis:ContainerType>
	    <insis:BinaryAttachments>
	        <insis:BinaryAttachment>
	            <insis:MimeType>image/png</insis:MimeType>
	            <insis:Data>
	                <xop:Include href="cid:Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png" xmlns:xop="http://www.w3.org/2004/08/xop/include"/>
	            </insis:Data>
	        </insis:BinaryAttachment>
	    </insis:BinaryAttachments>
	  </insis:UploadAttachmentsRq>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="61e0cc87-be96-4208-ac69-0b3a962e9fe4"/><con:credentials><con:username>insis_hlt_v10</con:username><con:password>insis_hlt_v10</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:attachment><con:name>Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png</con:name><con:contentType>image/x-png</con:contentType><con:size>202872</con:size><con:contentId>Insis_CSM_v3_RegisterClaimRq.0_RegisterClaimRq.png</con:contentId><con:data></con:data><con:id>3f7ad7df-60d3-4329-87da-e9a110f9d752</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer><con:outgoing><con:name>usernametoken</con:name><con:username>insis_hlt_v10</con:username><con:entry type="Username" password="insis_hlt_v10"><con:configuration><addCreated>false</addCreated><addNonce>false</addNonce><passwordType>PasswordText</passwordType></con:configuration></con:entry></con:outgoing></con:wssContainer><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>