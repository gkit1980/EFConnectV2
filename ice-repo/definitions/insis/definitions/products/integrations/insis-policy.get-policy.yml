integration:
  exchange: {}
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: 'YYYY-MM-DDThh:mm:ss'
      out:
        - mappings:
            - dynid: true
              payload: PolicyID
        - if: datamodel.policy.contract.policy-id != null
          mappings:
            - element: policy.contract.policy-id
              payload: PolicyID
      in:
        - mappings:
            - element: policy.contract.begin
              payload: Policy.InsuranceConditions.EffectiveDate
            - element: policy.contract.end
              payload: Policy.InsuranceConditions.ExpireDate
            - element: policy.contract.agent-no
              payload: Policy.InsuranceConditions.AgentNO
            - element: policy.contract.payment.frequency
              payload: Policy.InsuranceConditions.Installments
            - element: policy.contract.payment.way
              payload: Policy.InsuranceConditions.PaymentWay
            - element: policy.contract.policy-id
              payload: Policy.InsuranceConditions.PolicyID
            - element: policy.contract.policy-number
              payload: Policy.InsuranceConditions.PolicyNo
            - element: policy.contract.product-code
              payload: Policy.InsuranceConditions.ProductCode
            - element: policy.contract.renewal
              payload: Policy.InsuranceConditions.Renewal
            - element: policy.contract.term.duration
              payload: Policy.InsuranceConditions.Duration
            - element: policy.contract.payment.tax-value
              payload: Policy.InsuranceConditions.Taxes.Tax.TaxAmount
            - element: policy.status.policy-status
              payload: Policy.InsuranceConditions.PolicyState
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            index: 0
          mappings:
            - element: policy.insured.currency
              payload: 'Policy.Insureds.Insured[n].Currency'
        - fromIdx:
            array: payload.Policy.Installments.Installment
          mappings:
            - element: policy.insured.premium.total
              payload: 'Policy.Installments.Installment[n].Amount'
        - fromIdx:
            array: payload.Policy.InsuranceConditions.Participants.Participant
            condition: ParticipantRole == 'PHOLDER'
          mappings:
            - element: policy.contract.account.bank-pid
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyBankAccounts.PolicyBankAccount.BankAccount.BankPID
            - element: policy.contract.account.bic
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyBankAccounts.PolicyBankAccount.BankAccount.BankName
            - element: policy.contract.account.iban
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyBankAccounts.PolicyBankAccount.BankAccount.AccountNo
            - element: policy.contract.account.purpose
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyBankAccounts.PolicyBankAccount.AccountPurpose
            - element: policy.contract.credit-card.expiry-month
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyCreditCards.PolicyCreditCard.CreditCard.ExpiryMonth
            - element: policy.contract.credit-card.expiry-year
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyCreditCards.PolicyCreditCard.CreditCard.ExpiryYear
            - element: policy.contract.credit-card.holder
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyCreditCards.PolicyCreditCard.CreditCard.CardHolderName
            - element: policy.contract.credit-card.number
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyCreditCards.PolicyCreditCard.CreditCard.BankName
            - element: policy.contract.credit-card.type
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].PolicyCreditCards.PolicyCreditCard.CreditCard.CCTypeID
            - element: policy.participants.holder.person.date-of-birth
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Entity.PersonalData.BirthDate
            - element: policy.participants.holder.person.first-name
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Entity.PersonalData.Name.Given
            - element: policy.participants.holder.person.gender
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Entity.PersonalData.Gender
            - element: policy.participants.holder.person.last-name
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Entity.PersonalData.Name.Family
            - element: policy.participants.holder.person.pid
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Entity.PersonalData.PID
            - element: policy.participants.holder.person.address.street-number
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].ResidentialAddress.StreetNo
            - element: policy.participants.holder.person.address.street
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].ResidentialAddress.StreetName
            - element: policy.participants.holder.person.address.zip
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].ZipCode
            - element: policy.participants.holder.person.address.city
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].City
            - element: policy.participants.holder.person.address.country
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].Country
            - element: policy.participants.holder.person.address.state
              payload: >-
                Policy.InsuranceConditions.Participants.Participant[n].Addresses.Address[0].Region
        - fromIdx:
            array: payload.Policy.InsuranceConditions.Discounts.Discount
            append: true
          toIdx:
            array: policy.contract.discounts
          mappings:
            - element: policy.contract.discounts~type
              payload: 'Policy.InsuranceConditions.Discounts.Discount[n].DiscountType'
            - element: policy.contract.discounts~amount
              payload: 'Policy.InsuranceConditions.Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.InsuranceConditions.Taxes.Tax
            append: true
          toIdx:
            array: datamodel.policy.contract.taxes
          mappings:
            - element: policy.contract.taxes~type
              payload: 'Policy.InsuranceConditions.Taxes.Tax[n].TaxType'
            - element: policy.contract.taxes~amount
              payload: 'Policy.InsuranceConditions.Taxes.Tax[n].TaxAmount'
