integration:
  exchange: {}
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: 'YYYY-MM-DDThh:mm:ss'
      extends: life.insis-engagement-quote.save
      in:
        - toIdx:
            index: '[0]'
          mappings:
            - payload: Engagement.Client.Addresses.Address[0].CountryCode
              element: policy.insured.person-objects~person.address.country
            - payload: Engagement.Client.Entity.PersonalData.Name.Given
              element: policy.insured.person-objects~person.first-name
            - payload: Engagement.Client.Entity.PersonalData.Name.Family
              element: policy.insured.person-objects~person.last-name
            - payload: Engagement.Client.Entity.PersonalData.Gender
              element: policy.insured.person-objects~person.gender
            - payload: Engagement.Client.Entity.PersonalData.BirthDate
              element: policy.insured.person-objects~person.date-of-birth
            - payload: Engagement.Client.Entity.PersonalData.PID
              element: policy.insured.person-objects~person.pid
            - payload: Engagement.Client.Address[0].CountryCode
              element: policy.insured.person-objects~question.q-04
            - element: policy.contract.begin
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsrBegin
            - element: policy.insured.currency
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].Currency
            - element: policy.insured.person-objects~insured-amount
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsuredAmount
            - element: policy.insured.person-objects~object.id
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsuredObjectID
            - element: policy.insured.person-objects~entity-id
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsuredEntity.ObjectID
            - element: policy.insured.person-objects~entity-type
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsuredEntity.ObjectType
            - element: policy.insured.person-objects~entity-accident-insured.type
              payload: Engagement.Policies.Policy[0].Insureds.Insured[0].InsuredEntity.OAccidentInsured.AccinsType
            - element: policy.insured.person-objects~person.pid
              payload: Engagement.Policies.Policy[0].Insureds.Insured[n].InsuredEntity.OAccidentInsured.PID
            - element: policy.insured.person-objects~cover.death-any.grc-id
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].GrcID'
            - element: policy.insured.person-objects~cover.death-any.annex-id
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].AnnexID'
            - element: policy.insured.person-objects~cover.death-any.code
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].CoverCode'
            - element: policy.insured.person-objects~cover.death-any.currency
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].Currency'
            - element: policy.insured.person-objects~cover.death-any.insured-amount
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].InsuredAmount'
            - element: policy.insured.person-objects~cover.death-any.end
              payload: 'Engagement.Policies.Policy[0].Insureds.Insured[0].Covers.Cover[0].InsrEnd'
        - mappings:
            - element: policy.contract.payment.frequency
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Billings.Billing[0].PaymentMode
            - element: policy.contract.payment.term.payment-way
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Billings.Billing[0].PaymentWay
            - element: policy.contract.payment.term.installments-period
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Billings.Billing[0].InstallmentsPeriod
            - element: policy.contract.payment.term.duration
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Billings.Billing[0].PaymentDuration
            - element: policy.contract.payment.term.years.units
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Billings.Billing[0].PaymentDurUnits
            - payload: Engagement.Client.Entity
              datastore: person
            - element: policy.participants.holder.person.pid
              payload: Engagement.Client.Entity.PersonalData.PID
            - element: policy.participants.holder.person.engagement-id
              payload: Engagement.EngagementData.EngagementID
            - element: policy.contract.agent-no
              payload: Engagement.Policies.Policy[0].InsuranceConditions.AgentNO
            - element: policy.contract.payment.frequency
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Installments
            - element: policy.contract.payment.way
              payload: Engagement.Policies.Policy[0].InsuranceConditions.PaymentWay
            - element: policy.contract.policy-number
              payload: Engagement.Policies.Policy[0].InsuranceConditions.PolicyNo
            - element: policy.contract.product-code
              payload: Engagement.Policies.Policy[0].InsuranceConditions.ProductCode
            - element: policy.contract.renewal
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Renewal
            - element: policy.contract.term.units
              payload: Engagement.Policies.Policy[0].InsuranceConditions.DurationUnits
            - element: policy.contract.term.duration
              payload: Engagement.Policies.Policy[0].InsuranceConditions.Duration
            - element: policy.status.policy-status
              payload: Engagement.Policies.Policy[0].InsuranceConditions.PolicyState
            - element: policy.contract.policy-id
              payload: Engagement.Policies.Policy[0].PolicyID
            - element: policy.contract.policy-number
              payload: Engagement.Policies.Policy[0].PolicyNo
            - element: policy.insured.premium.total
              payload: 'Engagement.Policies.Policy[0].Installments.Installment.Amount'
      out:
        - toIdx:
            array: 'payload.Policies.Policy[0].InsuranceConditions.Questionary.Question'
            append: true
          mappings:
            - value: 'Q_01'
              payload: 'Policies.Policy[0].InsuranceConditions.Questionary.Question[n].ID'
            - element: policy.contract.question.q-01
              payload: 'Policies.Policy[0].InsuranceConditions.Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_02'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-02
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_03'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-03
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_04'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-04
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_05'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-05
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_07'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-07
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_07.1'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-07-1
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.death-any.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.death-any.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.death-any.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.death-any.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.death-any.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.death-any.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.death-any.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.death-acc.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.death-acc.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.death-acc.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.death-acc.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.death-acc.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.death-acc.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.death-acc.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.critic-ill.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.critic-ill.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.critic-ill.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.critic-ill.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.critic-ill.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.critic-ill.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.critic-ill.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.premret.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.premret.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.premret.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.premret.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.premret.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.premret.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.premret.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.tpdaccd.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.tpdaccd.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.tpdaccd.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.tpdaccd.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.tpdaccd.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.tpdaccd.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.tpdaccd.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.tpdill.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.tpdill.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.tpdill.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.tpdill.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.tpdill.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.tpdill.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.tpdill.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.wop-total.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.wop-total.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.wop-total.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.wop-total.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.wop-total.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.wop-total.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.wop-total.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
