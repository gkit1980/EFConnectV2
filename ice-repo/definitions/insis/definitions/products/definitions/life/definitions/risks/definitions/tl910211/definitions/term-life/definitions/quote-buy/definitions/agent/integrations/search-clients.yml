integration:
  exchange:
    InsisDBExchangeRule:
      connectString: 'env:insis-db-url'
      username: 'env:insis-db-username'
      password: 'env:insis-db-password'
      queryFileURL: data/search-clients.sql
      queryType: SQL
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      out:
        - mappings:
            - param: client_pid_name
              element: client.search.input
            - param: city
              value: ''
            - param: cl_type
              value: ''
      in:
        - fromIdx:
            array: payload.rows
            condition: 1 == 1
          toIdx:
            array: datamodel.client.list
            append: true
          mappings:
            - payload: 'rows[n].NAME'
              element: client.list~name
            - payload: 'rows[n].GNAME'
              element: client.list~first-name
            - payload: 'rows[n].FNAME'
              element: client.list~last-name
            - payload: 'rows[n].BIRTH_DATE'
              element: client.list~birthdate
            - payload: 'rows[n].PID'
              element: client.list~pid
            - payload: 'rows[n].SEX'
              element: client.list~gender
            - payload: 'rows[n].COUNTRY_CODE'
              element: client.list~country-code
            - payload: 'rows[n].MAN_ID'
              element: client.list~man-id
            - value: false
              element: client.list~selected
