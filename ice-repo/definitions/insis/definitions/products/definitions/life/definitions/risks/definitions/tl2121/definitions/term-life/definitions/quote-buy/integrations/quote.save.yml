integration:
  exchange: {}
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: "YYYY-MM-DDThh:mm:ss"
      extends: life.insis-engagement-quote.save
      out:
        - mappings:
            - payload: Client.Entity.PersonalData.CustomProperties.CustomProperty[0].FieldName
              value: attrn1
            - payload: Client.Entity.PersonalData.CustomProperties.CustomProperty[0].FieldValue
              element: policy.contract.custom.interest-rate
            - payload: Client.Entity.PersonalData.CustomProperties.CustomProperty[1].FieldName
              value: attrc1
            - payload: Client.Entity.PersonalData.CustomProperties.CustomProperty[1].FieldValue
              element: policy.contract.custom.decrease-mode
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          mappings:
            - element: policy.insured.person-objects~cover.death-any.insured-amount
              payload: "Policies.Policy[0].Insureds.Insured[0].InsuredAmount"
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: "payload.Policies.Policy[0].Insureds.Insured"
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: "Q_04"
              payload: "Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID"
            - element: policy.insured.person-objects~question.q-04
              payload: "Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer"
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: "payload.Policies.Policy[0].Insureds.Insured"
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: "Q_07"
              payload: "Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID"
            - element: policy.insured.person-objects~question.q-07
              payload: "Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer"
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.death-any.grc-id
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID"
            - element: policy.insured.person-objects~cover.death-any.annex-id
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID"
            - element: policy.insured.person-objects~cover.death-any.code
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode"
            - element: policy.insured.person-objects~cover.death-any.currency
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency"
            - element: policy.insured.person-objects~cover.death-any.insured-amount
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount"
            - element: policy.insured.person-objects~cover.death-any.end
              payload: "Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd"
