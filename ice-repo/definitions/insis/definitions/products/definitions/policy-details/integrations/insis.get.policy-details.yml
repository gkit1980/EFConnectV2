integration:
  exchange:
    InsisRestCallExchangeRule:
      endpointBaseurl: insis-rest-endpoint
      url: '/policies/policy/composite?policyNo=${POLICY_NUMBER}'
      verb: GET
  transformation:
    DefaultTransformationRule:
      additional: insis
      out:
        - mappings:
            - param: POLICY_NUMBER
              dynid: true
      in:
        - mappings:
            - element: policy.contract.product-code
              payload: policyNames.insrType
            - element: policy.contract.product-full-name
              payload: policyNames.insrTypeName
            - element: policy.participants.holder.person.pid
              payload: policyNames.clientPid
            - element: policy.participants.holder.person.first-name
              payload: pClients.pPeopleComplex.gname
            - element: policy.participants.holder.person.last-name
              payload: pClients.pPeopleComplex.fname
            - element: policy.contract.begin
              payload: insrBegin
            - element: policy.contract.term.duration
              payload: insrDuration
            - element: policy.registration-date
              payload: registrationDate
            - element: policy.updated-date
              payload: updatedOn
            - element: policy.contract.term.duration
              payload: insrDuration
            - element: policy.contract.term.units
              payload: durDimension
            - element: policy.contract.payment.frequency
              payload: numInstalments
            - element: policy.contract.policy-name
              payload: policyName
            - element: policy.contract.policy-id
              payload: policyId
            - element: policy.contract.payment.tax-value
              payload: 'policyAnnexes[0].installments[0].amntCurrency'
            - element: policy.insured.currency
              payload: 'policyAnnexes[0].installments[0].currency'
        - fromIdx:
            array: 'payload.policyAnnexes[0].insuredObjects'
            condition: insuredEntity.oAccinsured !=  null
          toIdx:
            array: policy.insured.objects
            useSourceIndex: true
          mappings:
            - element: policy.insured.objects~type
              value: 'life'
            - element: policy.insured.objects~person-data.pid
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.manId
            - element: policy.insured.objects~person-data.accident
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.accinsType
            - element: policy.insured.objects~person-data.first-name
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.pPeopleComplex.gname
            - element: policy.insured.objects~person-data.last-name
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.pPeopleComplex.fname
            - element: policy.insured.objects~person-data.gender
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.gender
            - element: policy.insured.objects~person-data.birth-date
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.pPeopleComplex.birthDate
            - element: policy.insured.objects~person-data.country
              payload: >-
                policyAnnexes[0].insuredObjects[n].insuredEntity.oAccinsured.pPeopleComplex.homeCountry
            - element: policy.insured.objects~activities.goto-covers
              value: navigate.to-covers

        - fromIdx:
            array: 'payload.policyAnnexes[0].insuredObjects'
            condition: insuredEntity.oCar !=  null
          toIdx:
            array: policy.insured.objects
            useSourceIndex: true
          mappings:
            - element: policy.insured.objects~type
              value: 'motor'

            - element: policy.insured.objects~vehicle-data.brand
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.make

            - element: policy.insured.objects~vehicle-data.ccm-ton
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.ccmTon

            - element: policy.insured.objects~vehicle-data.chassis
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.chassis

            - element: policy.insured.objects~vehicle-data.construction-date
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.prodYear

            - element: policy.insured.objects~vehicle-data.model
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.model

            - element: policy.insured.objects~vehicle-data.regno
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.regNo

            - element: policy.insured.objects~vehicle-data.usage
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.carUsage

            - element: policy.insured.objects~vehicle-data.transportation-of-hazardous-goods
              payload: policyAnnexes[0].insuredObjects[n].insuredEntity.oCar.ocp2

            - element: policy.insured.objects~vehicle-data.driver
              payload: pClients.pPeopleComplex.name

            - element: policy.insured.objects~activities.goto-covers
              value: navigate.to-covers
        - fromIdx:
            array: 'payload.policyAnnexes[0].insuredObjects'
            fromIdx:
              array: covers
              #condition: premium != 0
          toIdx:
            array: policy.insured.objects
            useSourceIndex: true
            toIdx:
              array: policy.insured.objects~covers
              useSourceIndex: true
          mappings:
            - element: policy.insured.objects~covers~currency
              payload: 'policyAnnexes[0].insuredObjects[n].covers[n].currency'
            - element: policy.insured.objects~covers~premium
              payload: 'policyAnnexes[0].insuredObjects[n].covers[n].premium'
            - element: policy.insured.objects~covers~insured-amount
              payload: 'policyAnnexes[0].insuredObjects[n].covers[n].insuredValue'
            - element: policy.insured.objects~covers~code
              payload: 'policyAnnexes[0].insuredObjects[n].covers[n].coverType'
        - fromIdx:
            array: 'payload.policyAnnexes[0].taxes'
            condition: taxAmnt != 0
          toIdx:
            array: policy.contract.taxes
            useSourceIndex: true
          mappings:
            - element: policy.contract.taxes~amount
              payload: 'policyAnnexes[0].taxes[n].taxAmnt'
            - element: policy.contract.taxes~type
              payload: 'policyAnnexes[0].taxes[n].taxType'
