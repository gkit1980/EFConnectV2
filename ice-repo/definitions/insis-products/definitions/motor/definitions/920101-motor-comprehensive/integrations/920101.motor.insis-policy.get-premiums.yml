integration:
  exchange:
    SoapCallExchangeRule:
      endpoint: insis_pam_endpoint
      securityMode: UsernamePassword
      username: 'env:insis-username'
      password: 'env:insis-password'
      ignoreNamespaces: 'env:insis-ignoreNamespaces'
      soapAction: findPolicyByNumber
      requestType: FndPlcyByNumRqType
      responseType: FndPlcyByNumRsType
      jsonSchema: InsisPAM
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: 'YYYY-MM-DDThh:mm:ss'
      extends: motor.insis-policy.get-premiums
      out:
        - mappings:
            - param: soapAction
              value: findPolicyByNumber
            - param: requestType
              value: FndPlcyByNumRqType
      in:
        - fromIdx:
            array: payload.Policy.Insureds.Insured
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~entity-type
              payload: Policy.Insureds.Insured[n].InsuredEntity.ObjectType
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment
              condition: EquipmentType == '1001'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~car.additional-equipment-car-audio-parent-id
              payload: Policy.Insureds.Insured[n].InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment[n].ParentObjectID
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment
              condition: EquipmentType == '1002'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~car.additional-equipment-alloy-wheels-parent-id
              payload: Policy.Insureds.Insured[n].InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment[n].ParentObjectID
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment
              condition: EquipmentType == '1003'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~car.additional-equipment-other-parent-id
              payload: Policy.Insureds.Insured[n].InsuredEntity.OCar.SupplementaryEquipment.OAdditionalEquipment[n].ParentObjectID
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'MTPL'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~cover.mtpl.grc-id
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.vehicle-objects~cover.mtpl.insured-amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.vehicle-objects~cover.mtpl.premium
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Premium.TotalAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'PA'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~cover.pa.grc-id
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.vehicle-objects~cover.pa.insured-amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.vehicle-objects~cover.pa.premium
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Premium.TotalAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'ROAD_ASSIS'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~cover.road_assis.grc-id
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.vehicle-objects~cover.road_assis.insured-amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.vehicle-objects~cover.road_assis.premium
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Premium.TotalAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'VANDALISM'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~cover.vandalism.grc-id
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.vehicle-objects~cover.vandalism.insured-amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.vehicle-objects~cover.vandalism.premium
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Premium.TotalAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'MTPL'
              fromIdx:
                array: Discounts.Discount
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
            toIdx:
              array: cover.mtpl.discounts
              append: true
          mappings:
            - element: policy.insured.vehicle-objects~cover.mtpl.discounts~type
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].DiscountType'
            - element: policy.insured.vehicle-objects~cover.mtpl.discounts~amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'OWNDAMAGE'
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
          mappings:
            - element: policy.insured.vehicle-objects~cover.owndamage.grc-id
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.vehicle-objects~cover.owndamage.insured-amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.vehicle-objects~cover.owndamage.premium
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Premium.TotalAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'OWNDAMAGE'
              fromIdx:
                array: Discounts.Discount
                append: true
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
            toIdx:
              array: cover.owndamage.discounts
              append: true
          mappings:
            - element: policy.insured.vehicle-objects~cover.owndamage.discounts~type
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].DiscountType'
            - element: policy.insured.vehicle-objects~cover.owndamage.discounts~amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'PA'
              fromIdx:
                array: Discounts.Discount
                append: true
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
            toIdx:
              array: cover.pa.discounts
              append: true
          mappings:
            - element: policy.insured.vehicle-objects~cover.pa.discounts~type
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].DiscountType'
            - element: policy.insured.vehicle-objects~cover.pa.discounts~amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'ROAD_ASSIS'
              fromIdx:
                array: Discounts.Discount
                append: true
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
            toIdx:
              array: cover.road_assis.discounts
              append: true
          mappings:
            - element: policy.insured.vehicle-objects~cover.road_assis.discounts~type
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].DiscountType'
            - element: policy.insured.vehicle-objects~cover.road_assis.discounts~amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'VANDALISM'
              fromIdx:
                array: Discounts.Discount
                append: true
          toIdx:
            array: datamodel.policy.insured.vehicle-objects
            condition: 1 == 1
            toIdx:
              array: cover.vandalism.discounts
              append: true
          mappings:
            - element: policy.insured.vehicle-objects~cover.vandalism.discounts~type
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].DiscountType'
            - element: policy.insured.vehicle-objects~cover.vandalism.discounts~amount
              payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Discounts.Discount[n].LumpSumDiscount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'MTPL'
              fromIdx:
                array: Taxes.Tax
            toIdx:
              array: datamodel.policy.insured.vehicle-objects
              condition: 1 == 1
              toIdx:
                array: cover.mtpl.taxes
                append: true
            mappings:
              - element: policy.insured.vehicle-objects~cover.mtpl.taxes~type
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxType'
              - element: policy.insured.vehicle-objects~cover.mtpl.taxes~amount
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'OWNDAMAGE'
              fromIdx:
                array: Taxes.Tax
            toIdx:
              array: datamodel.policy.insured.vehicle-objects
              condition: 1 == 1
              toIdx:
                array: cover.mtpl.taxes
                append: true
            mappings:
              - element: policy.insured.vehicle-objects~cover.owndamage.taxes~type
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxType'
              - element: policy.insured.vehicle-objects~cover.owndamage.taxes~amount
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'PA'
              fromIdx:
                array: Taxes.Tax
            toIdx:
              array: datamodel.policy.insured.vehicle-objects
              condition: 1 == 1
              toIdx:
                array: cover.pa.taxes
                append: true
            mappings:
              - element: policy.insured.vehicle-objects~cover.pa.taxes~type
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxType'
              - element: policy.insured.vehicle-objects~cover.pa.taxes~amount
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'ROAD_ASSIS'
              fromIdx:
                array: Taxes.Tax
            toIdx:
              array: datamodel.policy.insured.vehicle-objects
              condition: 1 == 1
              toIdx:
                array: cover.road_asiss.taxes
                append: true
            mappings:
              - element: policy.insured.vehicle-objects~cover.road_assis.taxes~type
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxType'
              - element: policy.insured.vehicle-objects~cover.road_assis.taxes~amount
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxAmount'
        - fromIdx:
            array: payload.Policy.Insureds.Insured
            fromIdx:
              array: Covers.Cover
              condition: CoverCode == 'VANDALISM'
              fromIdx:
                array: Taxes.Tax
            toIdx:
              array: datamodel.policy.insured.vehicle-objects
              condition: 1 == 1
              toIdx:
                array: cover.vandalism.taxes
                append: true
            mappings:
              - element: policy.insured.vehicle-objects~cover.vandalism.taxes~type
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxType'
              - element: policy.insured.vehicle-objects~cover.vandalism.taxes~amount
                payload: 'Policy.Insureds.Insured[n].Covers.Cover[n].Taxes.Tax[n].TaxAmount'
