integration:
  exchange:
    SoapCallExchangeRule:
      endpoint: insis_pdm_endpoint
      securityMode: UsernamePassword
      username: 'env:insis-username'
      password: 'env:insis-password'
      ignoreNamespaces: 'env:insis-ignoreNamespaces'
      soapAction: changeClientInfo
      requestType: ChngeClntInfoRqType
      jsonSchema: InsisPDM
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: 'YYYY-MM-DDThh:mm:ss'
      out:
        - mappings:
            - param: soapAction
              value: changeClientInfo
            - param: requestType
              value: ChngeClntInfoRqType
        - mappings:
            - element: client.personal-data.corporate_status
              payload: ClientData.OfficialStatuss
            - element: client.personal-data.manid
              payload: Entity.ManID
            - element: client.personal-data.pid
              payload: Entity.PersonalData.PID
        - fromIdx:
            array: datamodel.client.personal-data.addresses
          toIdx:
            array: payload.Addresses.Address
            append: true
          mappings:
            - element: client.personal-data.addresses~address-id
              payload: 'Addresses.Address[n].AddressID'
            - element: client.personal-data.addresses~address-type
              payload: 'Addresses.Address[n].AddressType'
            - element: client.personal-data.addresses~address
              payload: 'Addresses.Address[n].Address'
            - element: client.personal-data.addresses~city
              payload: 'Addresses.Address[n].City'
            - element: client.personal-data.addresses~country
              payload: 'Addresses.Address[n].Country'
            - element: client.personal-data.addresses~region
              payload: 'Addresses.Address[n].Region'
            - element: client.personal-data.addresses~street-number
              payload: 'Addresses.Address[n].ResidentialAddress.StreetNo'
            - element: client.personal-data.addresses~street
              payload: 'Addresses.Address[n].ResidentialAddress.StreetName'
            - element: client.personal-data.addresses~zip
              payload: 'Addresses.Address[n].ZipCode'
            - element: client.personal-data.addresses~is-primary
              payload: 'Addresses.Address[n].PrimaryFlag'
            - element: client.personal-data.addresses~is-invoice
              payload: 'Addresses.Address[n].InvoiceYN'
            - element: client.personal-data.addresses~is-mail
              payload: 'Addresses.Address[n].MailYN'
        - fromIdx:
            array: datamodel.client.personal-data.bank-account
          toIdx:
            array: payload.BankAccounts.BankAccount
            append: true
          mappings:
            - element: client.personal-data.bank-account~bank-id
              payload: 'BankAccounts.BankAccount[n].BankAccID'
            - element: client.personal-data.bank-account~bankpid
              payload: 'BankAccounts.BankAccount[n].BankPID'
            - element: client.personal-data.bank-account~currency
              payload: 'BankAccounts.BankAccount[n].Currency'
            - element: client.personal-data.bank-account~iban
              payload: 'BankAccounts.BankAccount[n].AccountNo'
            - element: client.personal-data.bank-account~name
              payload: 'BankAccounts.BankAccount[n].BankName'
        - fromIdx:
            array: datamodel.client.personal-data.contacts
          toIdx:
            array: payload.Contacts.Contact
            append: true
          mappings:
            - element: client.personal-data.contacts~contact-id
              payload: 'Contacts.Contact[n].ContactID'
            - element: client.personal-data.contacts~details
              payload: 'Contacts.Contact[n].Details'
            - element: client.personal-data.contacts~type
              payload: 'Contacts.Contact[n].Type'
      in: null
