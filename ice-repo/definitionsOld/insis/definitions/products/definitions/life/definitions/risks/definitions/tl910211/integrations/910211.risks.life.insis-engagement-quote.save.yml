integration:
  exchange: {}
  transformation:
    DefaultTransformationRule:
      additional: insis
      dateFormat: YYYY-MM-DD
      dateTimeFormat: 'YYYY-MM-DDThh:mm:ss'
      extends: life.insis-engagement-quote.save
      out:
        - toIdx:
            array: 'payload.Policies.Policy[0].InsuranceConditions.Questionary.Question'
            append: true
          mappings:
            - value: 'Q_01'
              payload: 'Policies.Policy[0].InsuranceConditions.Questionary.Question[n].ID'
            - element: policy.contract.question.q-01
              payload: 'Policies.Policy[0].InsuranceConditions.Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_02'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-02
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_03'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-03
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: entity-accident-insured.type == 1
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_04'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-04
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_05'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-05
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_07'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-07
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
          toIdx:
            array: 'payload.Policies.Policy[0].Insureds.Insured'
            useSourceIndex: true
            toIdx:
              array: Questionary.Question
              append: true
          mappings:
            - value: 'Q_07.1'
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].ID'
            - element: policy.insured.person-objects~question.q-07-1
              payload: 'Policies.Policy[0].Insureds.Insured[n].Questionary.Question[n].Answer'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.death-any.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.death-any.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.death-any.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.death-any.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.death-any.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.death-any.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.death-any.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.death-acc.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.death-acc.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.death-acc.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.death-acc.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.death-acc.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.death-acc.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.death-acc.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.critic-ill.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.critic-ill.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.critic-ill.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.critic-ill.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.critic-ill.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.critic-ill.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.critic-ill.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.premret.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.premret.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.premret.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.premret.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.premret.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.premret.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.premret.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.tpdaccd.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.tpdaccd.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.tpdaccd.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.tpdaccd.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.tpdaccd.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.tpdaccd.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.tpdaccd.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.tpdill.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.tpdill.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.tpdill.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.tpdill.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.tpdill.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.tpdill.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.tpdill.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
        - fromIdx:
            array: datamodel.policy.insured.person-objects
            condition: cover.wop-total.active == true
          toIdx:
            array: payload.Policies.Policy[0].Insureds.Insured
            useSourceIndex: true
            toIdx:
              array: Covers.Cover
              append: true
          mappings:
            - element: policy.insured.person-objects~cover.wop-total.grc-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].GrcID'
            - element: policy.insured.person-objects~cover.wop-total.annex-id
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].AnnexID'
            - element: policy.insured.person-objects~cover.wop-total.code
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].CoverCode'
            - element: policy.insured.person-objects~cover.wop-total.currency
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].Currency'
            - element: policy.insured.person-objects~cover.wop-total.insured-amount
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsuredAmount'
            - element: policy.insured.person-objects~cover.wop-total.end
              payload: 'Policies.Policy[0].Insureds.Insured[n].Covers.Cover[n].InsrEnd'
